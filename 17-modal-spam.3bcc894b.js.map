{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_assert_this_initialized.js","node_modules/@swc/helpers/lib/_super_prop_base.js","node_modules/@swc/helpers/lib/_get_prototype_of.js","node_modules/@swc/helpers/lib/_set_prototype_of.js","node_modules/@swc/helpers/lib/_define_property.js","node_modules/@swc/helpers/lib/_possible_constructor_return.js","node_modules/@swc/helpers/lib/_type_of.js","node_modules/@swc/helpers/lib/_array_with_holes.js","node_modules/@swc/helpers/lib/_iterable_to_array.js","node_modules/@swc/helpers/lib/_non_iterable_rest.js","node_modules/@swc/helpers/lib/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/lib/_array_like_to_array.js","node_modules/@swc/helpers/lib/_array_without_holes.js","node_modules/@swc/helpers/lib/_non_iterable_spread.js","node_modules/@swc/helpers/lib/_is_native_reflect_construct.js","node_modules/bootstrap.native/dist/bootstrap-native.esm.js","node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","node_modules/@swc/helpers/lib/_get.js","node_modules/@swc/helpers/lib/_inherits.js","node_modules/@swc/helpers/lib/_object_spread.js","node_modules/@swc/helpers/lib/_sliced_to_array.js","node_modules/@swc/helpers/lib/_to_consumable_array.js","node_modules/@swc/helpers/lib/_create_super.js","src/js/17-modal-spam.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _assertThisInitialized;\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _superPropBase;\nvar _getPrototypeOf = _interopRequireDefault(require(\"./_get_prototype_of\"));\nfunction _superPropBase(object, property) {\n    while(!Object.prototype.hasOwnProperty.call(object, property)){\n        object = (0, _getPrototypeOf).default(object);\n        if (object === null) break;\n    }\n    return object;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _getPrototypeOf;\nfunction _getPrototypeOf(o) {\n    return getPrototypeOf(o);\n}\nfunction getPrototypeOf(o1) {\n    getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return getPrototypeOf(o1);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _setPrototypeOf;\nfunction _setPrototypeOf(o, p) {\n    return setPrototypeOf(o, p);\n}\nfunction setPrototypeOf(o1, p1) {\n    setPrototypeOf = Object.setPrototypeOf || function setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return setPrototypeOf(o1, p1);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _possibleConstructorReturn;\nvar _assertThisInitialized = _interopRequireDefault(require(\"./_assert_this_initialized\"));\nvar _typeOf = _interopRequireDefault(require(\"./_type_of\"));\nfunction _possibleConstructorReturn(self, call) {\n    if (call && ((0, _typeOf).default(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n    }\n    return (0, _assertThisInitialized).default(self);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _typeof;\nfunction _typeof(obj) {\n    \"@swc/helpers - typeof\";\n    return obj && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n}\n;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithHoles;\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _iterableToArray;\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableRest;\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _unsupportedIterableToArray;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, _arrayLikeToArray).default(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, _arrayLikeToArray).default(o, minLen);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayLikeToArray;\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithoutHoles;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return (0, _arrayLikeToArray).default(arr);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableSpread;\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _isNativeReflectConstruct;\nfunction _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n","/*!\n  * Native JavaScript for Bootstrap v4.2.0 (https://thednp.github.io/bootstrap.native/)\n  * Copyright 2015-2022 © dnp_theme\n  * Licensed under MIT (https://github.com/thednp/bootstrap.native/blob/master/LICENSE)\n  */\n/** @type {Record<string, any>} */\nconst EventRegistry = {};\n\n/**\n * The global event listener.\n *\n * @type {EventListener}\n * @this {EventTarget}\n */\nfunction globalListener(e) {\n  const that = this;\n  const { type } = e;\n\n  [...EventRegistry[type]].forEach((elementsMap) => {\n    const [element, listenersMap] = elementsMap;\n    /* istanbul ignore else */\n    if (element === that) {\n      [...listenersMap].forEach((listenerMap) => {\n        const [listener, options] = listenerMap;\n        listener.apply(element, [e]);\n\n        if (options && options.once) {\n          removeListener(element, type, listener, options);\n        }\n      });\n    }\n  });\n}\n\n/**\n * Register a new listener with its options and attach the `globalListener`\n * to the target if this is the first listener.\n *\n * @type {Listener.ListenerAction<EventTarget>}\n */\nconst addListener = (element, eventType, listener, options) => {\n  // get element listeners first\n  if (!EventRegistry[eventType]) {\n    EventRegistry[eventType] = new Map();\n  }\n  const oneEventMap = EventRegistry[eventType];\n\n  if (!oneEventMap.has(element)) {\n    oneEventMap.set(element, new Map());\n  }\n  const oneElementMap = oneEventMap.get(element);\n\n  // get listeners size\n  const { size } = oneElementMap;\n\n  // register listener with its options\n  oneElementMap.set(listener, options);\n\n  // add listener last\n  if (!size) {\n    element.addEventListener(eventType, globalListener, options);\n  }\n};\n\n/**\n * Remove a listener from registry and detach the `globalListener`\n * if no listeners are found in the registry.\n *\n * @type {Listener.ListenerAction<EventTarget>}\n */\nconst removeListener = (element, eventType, listener, options) => {\n  // get listener first\n  const oneEventMap = EventRegistry[eventType];\n  const oneElementMap = oneEventMap && oneEventMap.get(element);\n  const savedOptions = oneElementMap && oneElementMap.get(listener);\n\n  // also recover initial options\n  const { options: eventOptions } = savedOptions !== undefined\n    ? savedOptions\n    : { options };\n\n  // unsubscribe second, remove from registry\n  if (oneElementMap && oneElementMap.has(listener)) oneElementMap.delete(listener);\n  if (oneEventMap && (!oneElementMap || !oneElementMap.size)) oneEventMap.delete(element);\n  if (!oneEventMap || !oneEventMap.size) delete EventRegistry[eventType];\n\n  // remove listener last\n  /* istanbul ignore else */\n  if (!oneElementMap || !oneElementMap.size) {\n    element.removeEventListener(eventType, globalListener, eventOptions);\n  }\n};\n\n/**\n * Advanced event listener based on subscribe / publish pattern.\n * @see https://www.patterns.dev/posts/classic-design-patterns/#observerpatternjavascript\n * @see https://gist.github.com/shystruk/d16c0ee7ac7d194da9644e5d740c8338#file-subpub-js\n * @see https://hackernoon.com/do-you-still-register-window-event-listeners-in-each-component-react-in-example-31a4b1f6f1c8\n */\nconst Listener = {\n  on: addListener,\n  off: removeListener,\n  globalListener,\n  registry: EventRegistry,\n};\n\n/**\n * A global namespace for `click` event.\n * @type {string}\n */\nconst mouseclickEvent = 'click';\n\n/**\n * A global namespace for 'transitionend' string.\n * @type {string}\n */\nconst transitionEndEvent = 'transitionend';\n\n/**\n * A global namespace for 'transitionDelay' string.\n * @type {string}\n */\nconst transitionDelay = 'transitionDelay';\n\n/**\n * A global namespace for `transitionProperty` string for modern browsers.\n *\n * @type {string}\n */\nconst transitionProperty = 'transitionProperty';\n\n/**\n * Shortcut for `window.getComputedStyle(element).propertyName`\n * static method.\n *\n * * If `element` parameter is not an `HTMLElement`, `getComputedStyle`\n * throws a `ReferenceError`.\n *\n * @param {HTMLElement} element target\n * @param {string} property the css property\n * @return {string} the css property value\n */\nfunction getElementStyle(element, property) {\n  const computedStyle = getComputedStyle(element);\n\n  // must use camelcase strings,\n  // or non-camelcase strings with `getPropertyValue`\n  return property.includes('--')\n    ? computedStyle.getPropertyValue(property)\n    : computedStyle[property];\n}\n\n/**\n * Utility to get the computed `transitionDelay`\n * from Element in miliseconds.\n *\n * @param {HTMLElement} element target\n * @return {number} the value in miliseconds\n */\nfunction getElementTransitionDelay(element) {\n  const propertyValue = getElementStyle(element, transitionProperty);\n  const delayValue = getElementStyle(element, transitionDelay);\n  const delayScale = delayValue.includes('ms') ? /* istanbul ignore next */1 : 1000;\n  const duration = propertyValue && propertyValue !== 'none'\n    ? parseFloat(delayValue) * delayScale : 0;\n\n  return !Number.isNaN(duration) ? duration : /* istanbul ignore next */0;\n}\n\n/**\n * A global namespace for 'transitionDuration' string.\n * @type {string}\n */\nconst transitionDuration = 'transitionDuration';\n\n/**\n * Utility to get the computed `transitionDuration`\n * from Element in miliseconds.\n *\n * @param {HTMLElement} element target\n * @return {number} the value in miliseconds\n */\nfunction getElementTransitionDuration(element) {\n  const propertyValue = getElementStyle(element, transitionProperty);\n  const durationValue = getElementStyle(element, transitionDuration);\n  const durationScale = durationValue.includes('ms') ? /* istanbul ignore next */1 : 1000;\n  const duration = propertyValue && propertyValue !== 'none'\n    ? parseFloat(durationValue) * durationScale : 0;\n\n  return !Number.isNaN(duration) ? duration : /* istanbul ignore next */0;\n}\n\n/**\n * Shortcut for the `Element.dispatchEvent(Event)` method.\n *\n * @param {HTMLElement} element is the target\n * @param {Event} event is the `Event` object\n */\nconst dispatchEvent = (element, event) => element.dispatchEvent(event);\n\n/**\n * Utility to make sure callbacks are consistently\n * called when transition ends.\n *\n * @param {HTMLElement} element target\n * @param {EventListener} handler `transitionend` callback\n */\nfunction emulateTransitionEnd(element, handler) {\n  let called = 0;\n  const endEvent = new Event(transitionEndEvent);\n  const duration = getElementTransitionDuration(element);\n  const delay = getElementTransitionDelay(element);\n\n  if (duration) {\n    /**\n     * Wrap the handler in on -> off callback\n     * @type {EventListener} e Event object\n     */\n    const transitionEndWrapper = (e) => {\n      /* istanbul ignore else */\n      if (e.target === element) {\n        handler.apply(element, [e]);\n        element.removeEventListener(transitionEndEvent, transitionEndWrapper);\n        called = 1;\n      }\n    };\n    element.addEventListener(transitionEndEvent, transitionEndWrapper);\n    setTimeout(() => {\n      /* istanbul ignore next */\n      if (!called) dispatchEvent(element, endEvent);\n    }, duration + delay + 17);\n  } else {\n    handler.apply(element, [endEvent]);\n  }\n}\n\n/**\n * Checks if an object is a `Node`.\n *\n * @param {any} node the target object\n * @returns {boolean} the query result\n */\nconst isNode = (element) => (element && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n  .some((x) => +element.nodeType === x)) || false;\n\n/**\n * Check if a target object is `Window`.\n * => equivalent to `object instanceof Window`\n *\n * @param {any} object the target object\n * @returns {boolean} the query result\n */\nconst isWindow = (object) => (object && object.constructor.name === 'Window') || false;\n\n/**\n * Checks if an object is a `Document`.\n * @see https://dom.spec.whatwg.org/#node\n *\n * @param {any} object the target object\n * @returns {boolean} the query result\n */\nconst isDocument = (object) => (object && object.nodeType === 9) || false;\n\n/**\n * Returns the `document` or the `#document` element.\n * @see https://github.com/floating-ui/floating-ui\n * @param {(Node | Window)=} node\n * @returns {Document}\n */\nfunction getDocument(node) {\n  // node instanceof Document\n  if (isDocument(node)) return node;\n  // node instanceof Node\n  if (isNode(node)) return node.ownerDocument;\n  // node instanceof Window\n  if (isWindow(node)) return node.document;\n  // node is undefined | NULL\n  return window.document;\n}\n\n/**\n * Utility to check if target is typeof `HTMLElement`, `Element`, `Node`\n * or find one that matches a selector.\n *\n * @param {Node | string} selector the input selector or target element\n * @param {ParentNode=} parent optional node to look into\n * @return {HTMLElement?} the `HTMLElement` or `querySelector` result\n */\nfunction querySelector(selector, parent) {\n  if (isNode(selector)) {\n    return selector;\n  }\n  const lookUp = isNode(parent) ? parent : getDocument();\n\n  return lookUp.querySelector(selector);\n}\n\n/**\n * Shortcut for `HTMLElement.closest` method which also works\n * with children of `ShadowRoot`. The order of the parameters\n * is intentional since they're both required.\n *\n * @see https://stackoverflow.com/q/54520554/803358\n *\n * @param {HTMLElement} element Element to look into\n * @param {string} selector the selector name\n * @return {HTMLElement?} the query result\n */\nfunction closest(element, selector) {\n  return element ? (element.closest(selector)\n    // break out of `ShadowRoot`\n    || closest(element.getRootNode().host, selector)) : null;\n}\n\n/**\n * Shortcut for `Object.assign()` static method.\n * @param  {Record<string, any>} obj a target object\n * @param  {Record<string, any>} source a source object\n */\nconst ObjectAssign = (obj, source) => Object.assign(obj, source);\n\n/**\n * Check class in `HTMLElement.classList`.\n *\n * @param {HTMLElement} element target\n * @param {string} classNAME to check\n * @returns {boolean}\n */\nfunction hasClass(element, classNAME) {\n  return element.classList.contains(classNAME);\n}\n\n/**\n * Remove class from `HTMLElement.classList`.\n *\n * @param {HTMLElement} element target\n * @param {string} classNAME to remove\n * @returns {void}\n */\nfunction removeClass(element, classNAME) {\n  element.classList.remove(classNAME);\n}\n\n/**\n * Checks if an element is an `HTMLElement`.\n * @see https://dom.spec.whatwg.org/#node\n *\n * @param {any} element the target object\n * @returns {boolean} the query result\n */\nconst isHTMLElement = (element) => (element && element.nodeType === 1) || false;\n\n/** @type {Map<string, Map<HTMLElement, Record<string, any>>>} */\nconst componentData = new Map();\n/**\n * An interface for web components background data.\n * @see https://github.com/thednp/bootstrap.native/blob/master/src/components/base-component.js\n */\nconst Data = {\n  /**\n   * Sets web components data.\n   * @param {HTMLElement} element target element\n   * @param {string} component the component's name or a unique key\n   * @param {Record<string, any>} instance the component instance\n   */\n  set: (element, component, instance) => {\n    if (!isHTMLElement(element)) return;\n\n    /* istanbul ignore else */\n    if (!componentData.has(component)) {\n      componentData.set(component, new Map());\n    }\n\n    const instanceMap = componentData.get(component);\n    // not undefined, but defined right above\n    instanceMap.set(element, instance);\n  },\n\n  /**\n   * Returns all instances for specified component.\n   * @param {string} component the component's name or a unique key\n   * @returns {Map<HTMLElement, Record<string, any>>?} all the component instances\n   */\n  getAllFor: (component) => {\n    const instanceMap = componentData.get(component);\n\n    return instanceMap || null;\n  },\n\n  /**\n   * Returns the instance associated with the target.\n   * @param {HTMLElement} element target element\n   * @param {string} component the component's name or a unique key\n   * @returns {Record<string, any>?} the instance\n   */\n  get: (element, component) => {\n    if (!isHTMLElement(element) || !component) return null;\n    const allForC = Data.getAllFor(component);\n    const instance = element && allForC && allForC.get(element);\n\n    return instance || null;\n  },\n\n  /**\n   * Removes web components data.\n   * @param {HTMLElement} element target element\n   * @param {string} component the component's name or a unique key\n   */\n  remove: (element, component) => {\n    const instanceMap = componentData.get(component);\n    if (!instanceMap || !isHTMLElement(element)) return;\n\n    instanceMap.delete(element);\n\n    /* istanbul ignore else */\n    if (instanceMap.size === 0) {\n      componentData.delete(component);\n    }\n  },\n};\n\n/**\n * An alias for `Data.get()`.\n * @type {SHORTY.getInstance<any>}\n */\nconst getInstance = (target, component) => Data.get(target, component);\n\n/**\n * Checks if an object is an `Object`.\n *\n * @param {any} obj the target object\n * @returns {boolean} the query result\n */\nconst isObject = (obj) => (typeof obj === 'object') || false;\n\n/**\n * Returns a namespaced `CustomEvent` specific to each component.\n * @param {string} EventType Event.type\n * @param {Record<string, any>=} config Event.options | Event.properties\n * @returns {SHORTY.OriginalEvent} a new namespaced event\n */\nfunction OriginalEvent(EventType, config) {\n  const OriginalCustomEvent = new CustomEvent(EventType, {\n    cancelable: true, bubbles: true,\n  });\n\n  /* istanbul ignore else */\n  if (isObject(config)) {\n    ObjectAssign(OriginalCustomEvent, config);\n  }\n  return OriginalCustomEvent;\n}\n\n/**\n * Global namespace for most components `fade` class.\n */\nconst fadeClass = 'fade';\n\n/**\n * Global namespace for most components `show` class.\n */\nconst showClass = 'show';\n\n/**\n * Global namespace for most components `dismiss` option.\n */\nconst dataBsDismiss = 'data-bs-dismiss';\n\n/** @type {string} */\nconst alertString = 'alert';\n\n/** @type {string} */\nconst alertComponent = 'Alert';\n\n/**\n * Shortcut for `HTMLElement.getAttribute()` method.\n * @param {HTMLElement} element target element\n * @param {string} attribute attribute name\n * @returns {string?} attribute value\n */\nconst getAttribute = (element, attribute) => element.getAttribute(attribute);\n\n/**\n * The raw value or a given component option.\n *\n * @typedef {string | HTMLElement | Function | number | boolean | null} niceValue\n */\n\n/**\n * Utility to normalize component options\n *\n * @param {any} value the input value\n * @return {niceValue} the normalized value\n */\nfunction normalizeValue(value) {\n  if (['true', true].includes(value)) { // boolean\n  // if ('true' === value) { // boolean\n    return true;\n  }\n\n  if (['false', false].includes(value)) { // boolean\n  // if ('false' === value) { // boolean\n    return false;\n  }\n\n  if (value === '' || value === 'null') { // null\n    return null;\n  }\n\n  if (value !== '' && !Number.isNaN(+value)) { // number\n    return +value;\n  }\n\n  // string / function / HTMLElement / object\n  return value;\n}\n\n/**\n * Shortcut for `Object.keys()` static method.\n * @param  {Record<string, any>} obj a target object\n * @returns {string[]}\n */\nconst ObjectKeys = (obj) => Object.keys(obj);\n\n/**\n * Shortcut for `String.toLowerCase()`.\n *\n * @param {string} source input string\n * @returns {string} lowercase output string\n */\nconst toLowerCase = (source) => source.toLowerCase();\n\n/**\n * Utility to normalize component options.\n *\n * @param {HTMLElement} element target\n * @param {Record<string, any>} defaultOps component default options\n * @param {Record<string, any>} inputOps component instance options\n * @param {string=} ns component namespace\n * @return {Record<string, any>} normalized component options object\n */\nfunction normalizeOptions(element, defaultOps, inputOps, ns) {\n  const data = { ...element.dataset };\n  /** @type {Record<string, any>} */\n  const normalOps = {};\n  /** @type {Record<string, any>} */\n  const dataOps = {};\n  const title = 'title';\n\n  ObjectKeys(data).forEach((k) => {\n    const key = ns && k.includes(ns)\n      ? k.replace(ns, '').replace(/[A-Z]/, (match) => toLowerCase(match))\n      : k;\n\n    dataOps[key] = normalizeValue(data[k]);\n  });\n\n  ObjectKeys(inputOps).forEach((k) => {\n    inputOps[k] = normalizeValue(inputOps[k]);\n  });\n\n  ObjectKeys(defaultOps).forEach((k) => {\n    /* istanbul ignore else */\n    if (k in inputOps) {\n      normalOps[k] = inputOps[k];\n    } else if (k in dataOps) {\n      normalOps[k] = dataOps[k];\n    } else {\n      normalOps[k] = k === title\n        ? getAttribute(element, title)\n        : defaultOps[k];\n    }\n  });\n\n  return normalOps;\n}\n\nvar version = \"4.2.0\";\n\nconst Version = version;\n\n/* Native JavaScript for Bootstrap 5 | Base Component\n----------------------------------------------------- */\n\n/** Returns a new `BaseComponent` instance. */\nclass BaseComponent {\n  /**\n   * @param {HTMLElement | string} target `Element` or selector string\n   * @param {BSN.ComponentOptions=} config component instance options\n   */\n  constructor(target, config) {\n    const self = this;\n    const element = querySelector(target);\n\n    if (!element) {\n      throw Error(`${self.name} Error: \"${target}\" is not a valid selector.`);\n    }\n\n    /** @static @type {BSN.ComponentOptions} */\n    self.options = {};\n\n    const prevInstance = Data.get(element, self.name);\n    if (prevInstance) prevInstance.dispose();\n\n    /** @type {HTMLElement} */\n    self.element = element;\n\n    /* istanbul ignore else */\n    if (self.defaults && ObjectKeys(self.defaults).length) {\n      self.options = normalizeOptions(element, self.defaults, (config || {}), 'bs');\n    }\n\n    Data.set(element, self.name, self);\n  }\n\n  /* eslint-disable */\n  /* istanbul ignore next */\n  /** @static */\n  get version() { return Version; }\n\n  /* eslint-enable */\n  /* istanbul ignore next */\n  /** @static */\n  get name() { return this.constructor.name; }\n\n  /* istanbul ignore next */\n  /** @static */\n  get defaults() { return this.constructor.defaults; }\n\n  /**\n   * Removes component from target element;\n   */\n  dispose() {\n    const self = this;\n    Data.remove(self.element, self.name);\n    ObjectKeys(self).forEach((prop) => { self[prop] = null; });\n  }\n}\n\n/* Native JavaScript for Bootstrap 5 | Alert\n-------------------------------------------- */\n\n// ALERT PRIVATE GC\n// ================\nconst alertSelector = `.${alertString}`;\nconst alertDismissSelector = `[${dataBsDismiss}=\"${alertString}\"]`;\n\n/**\n * Static method which returns an existing `Alert` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Alert>}\n */\nconst getAlertInstance = (element) => getInstance(element, alertComponent);\n\n/**\n* An `Alert` initialization callback.\n* @type {BSN.InitCallback<Alert>}\n*/\nconst alertInitCallback = (element) => new Alert(element);\n\n// ALERT CUSTOM EVENTS\n// ===================\nconst closeAlertEvent = OriginalEvent(`close.bs.${alertString}`);\nconst closedAlertEvent = OriginalEvent(`closed.bs.${alertString}`);\n\n// ALERT EVENT HANDLER\n// ===================\n/**\n * Alert `transitionend` callback.\n * @param {Alert} self target Alert instance\n */\nfunction alertTransitionEnd(self) {\n  const { element } = self;\n  toggleAlertHandler(self);\n\n  dispatchEvent(element, closedAlertEvent);\n\n  self.dispose();\n  element.remove();\n}\n\n// ALERT PRIVATE METHOD\n// ====================\n/**\n * Toggle on / off the `click` event listener.\n * @param {Alert} self the target alert instance\n * @param {boolean=} add when `true`, event listener is added\n */\nfunction toggleAlertHandler(self, add) {\n  const action = add ? addListener : removeListener;\n  const { dismiss } = self;\n  /* istanbul ignore else */\n  if (dismiss) action(dismiss, mouseclickEvent, self.close);\n}\n\n// ALERT DEFINITION\n// ================\n/** Creates a new Alert instance. */\nclass Alert extends BaseComponent {\n  /** @param {HTMLElement | string} target element or selector */\n  constructor(target) {\n    super(target);\n    // bind\n    const self = this;\n\n    // initialization element\n    const { element } = self;\n\n    // the dismiss button\n    /** @static @type {HTMLElement?} */\n    self.dismiss = querySelector(alertDismissSelector, element);\n\n    // add event listener\n    toggleAlertHandler(self, true);\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() { return alertComponent; }\n  /* eslint-enable */\n\n  // ALERT PUBLIC METHODS\n  // ====================\n  /**\n   * Public method that hides the `.alert` element from the user,\n   * disposes the instance once animation is complete, then\n   * removes the element from the DOM.\n   *\n   * @param {Event=} e most likely the `click` event\n   * @this {Alert} the `Alert` instance or `EventTarget`\n   */\n  close(e) {\n    const self = e ? getAlertInstance(closest(this, alertSelector)) : this;\n    const { element } = self;\n\n    /* istanbul ignore else */\n    if (element && hasClass(element, showClass)) {\n      dispatchEvent(element, closeAlertEvent);\n      if (closeAlertEvent.defaultPrevented) return;\n\n      removeClass(element, showClass);\n\n      if (hasClass(element, fadeClass)) {\n        emulateTransitionEnd(element, () => alertTransitionEnd(self));\n      } else alertTransitionEnd(self);\n    }\n  }\n\n  /** Remove the component from target element. */\n  dispose() {\n    toggleAlertHandler(this);\n    super.dispose();\n  }\n}\n\nObjectAssign(Alert, {\n  selector: alertSelector,\n  init: alertInitCallback,\n  getInstance: getAlertInstance,\n});\n\n/**\n * A global namespace for aria-pressed.\n * @type {string}\n */\nconst ariaPressed = 'aria-pressed';\n\n/**\n * Shortcut for `HTMLElement.setAttribute()` method.\n * @param  {HTMLElement} element target element\n * @param  {string} attribute attribute name\n * @param  {string} value attribute value\n * @returns {void}\n */\nconst setAttribute = (element, attribute, value) => element.setAttribute(attribute, value);\n\n/**\n * Add class to `HTMLElement.classList`.\n *\n * @param {HTMLElement} element target\n * @param {string} classNAME to add\n * @returns {void}\n */\nfunction addClass(element, classNAME) {\n  element.classList.add(classNAME);\n}\n\n/**\n * Global namespace for most components active class.\n */\nconst activeClass = 'active';\n\n/**\n * Global namespace for most components `toggle` option.\n */\nconst dataBsToggle = 'data-bs-toggle';\n\n/** @type {string} */\nconst buttonString = 'button';\n\n/** @type {string} */\nconst buttonComponent = 'Button';\n\n/* Native JavaScript for Bootstrap 5 | Button\n---------------------------------------------*/\n\n// BUTTON PRIVATE GC\n// =================\nconst buttonSelector = `[${dataBsToggle}=\"${buttonString}\"]`;\n\n/**\n * Static method which returns an existing `Button` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Button>}\n */\nconst getButtonInstance = (element) => getInstance(element, buttonComponent);\n\n/**\n * A `Button` initialization callback.\n * @type {BSN.InitCallback<Button>}\n */\nconst buttonInitCallback = (element) => new Button(element);\n\n// BUTTON PRIVATE METHOD\n// =====================\n/**\n * Toggles on/off the `click` event listener.\n * @param {Button} self the `Button` instance\n * @param {boolean=} add when `true`, event listener is added\n */\nfunction toggleButtonHandler(self, add) {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, self.toggle);\n}\n\n// BUTTON DEFINITION\n// =================\n/** Creates a new `Button` instance. */\nclass Button extends BaseComponent {\n  /**\n   * @param {HTMLElement | string} target usually a `.btn` element\n   */\n  constructor(target) {\n    super(target);\n    const self = this;\n\n    // initialization element\n    const { element } = self;\n\n    // set initial state\n    /** @type {boolean} */\n    self.isActive = hasClass(element, activeClass);\n    setAttribute(element, ariaPressed, `${!!self.isActive}`);\n\n    // add event listener\n    toggleButtonHandler(self, true);\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() { return buttonComponent; }\n  /* eslint-enable */\n\n  // BUTTON PUBLIC METHODS\n  // =====================\n  /**\n   * Toggles the state of the target button.\n   * @param {MouseEvent} e usually `click` Event object\n   */\n  toggle(e) {\n    if (e) e.preventDefault();\n    const self = e ? getButtonInstance(this) : this;\n    if (!self.element) return;\n    const { element, isActive } = self;\n\n    if (hasClass(element, 'disabled')) return;\n\n    const action = isActive ? removeClass : addClass;\n    action(element, activeClass);\n    setAttribute(element, ariaPressed, isActive ? 'false' : 'true');\n    self.isActive = hasClass(element, activeClass);\n  }\n\n  /** Removes the `Button` component from the target element. */\n  dispose() {\n    toggleButtonHandler(this);\n    super.dispose();\n  }\n}\n\nObjectAssign(Button, {\n  selector: buttonSelector,\n  init: buttonInitCallback,\n  getInstance: getButtonInstance,\n});\n\n/**\n * A global namespace for `mouseenter` event.\n * @type {string}\n */\nconst mouseenterEvent = 'mouseenter';\n\n/**\n * A global namespace for `mouseleave` event.\n * @type {string}\n */\nconst mouseleaveEvent = 'mouseleave';\n\n/**\n * A global namespace for `keydown` event.\n * @type {string}\n */\nconst keydownEvent = 'keydown';\n\n/**\n * A global namespace for `ArrowLeft` key.\n * @type {string} e.which = 37 equivalent\n */\nconst keyArrowLeft = 'ArrowLeft';\n\n/**\n * A global namespace for `ArrowRight` key.\n * @type {string} e.which = 39 equivalent\n */\nconst keyArrowRight = 'ArrowRight';\n\n/**\n * A global namespace for `pointerdown` event.\n * @type {string}\n */\nconst pointerdownEvent = 'pointerdown';\n\n/**\n * A global namespace for `pointermove` event.\n * @type {string}\n */\nconst pointermoveEvent = 'pointermove';\n\n/**\n * A global namespace for `pointerup` event.\n * @type {string}\n */\nconst pointerupEvent = 'pointerup';\n\n/**\n * Returns the bounding client rect of a target `HTMLElement`.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param {HTMLElement} element event.target\n * @param {boolean=} includeScale when *true*, the target scale is also computed\n * @returns {SHORTY.BoundingClientRect} the bounding client rect object\n */\nfunction getBoundingClientRect(element, includeScale) {\n  const {\n    width, height, top, right, bottom, left,\n  } = element.getBoundingClientRect();\n  let scaleX = 1;\n  let scaleY = 1;\n\n  if (includeScale && isHTMLElement(element)) {\n    const { offsetWidth, offsetHeight } = element;\n    scaleX = offsetWidth > 0 ? Math.round(width) / offsetWidth\n      : /* istanbul ignore next */1;\n    scaleY = offsetHeight > 0 ? Math.round(height) / offsetHeight\n      : /* istanbul ignore next */1;\n  }\n\n  return {\n    width: width / scaleX,\n    height: height / scaleY,\n    top: top / scaleY,\n    right: right / scaleX,\n    bottom: bottom / scaleY,\n    left: left / scaleX,\n    x: left / scaleX,\n    y: top / scaleY,\n  };\n}\n\n/**\n * Returns the `document.documentElement` or the `<html>` element.\n *\n * @param {(Node | Window)=} node\n * @returns {HTMLHtmlElement}\n */\nfunction getDocumentElement(node) {\n  return getDocument(node).documentElement;\n}\n\n/**\n * Utility to determine if an `HTMLElement`\n * is partially visible in viewport.\n *\n * @param {HTMLElement} element target\n * @return {boolean} the query result\n */\nconst isElementInScrollRange = (element) => {\n  if (!element || !isNode(element)) return false;\n\n  const { top, bottom } = getBoundingClientRect(element);\n  const { clientHeight } = getDocumentElement(element);\n  return top <= clientHeight && bottom >= 0;\n};\n\n/**\n * Checks if a page is Right To Left.\n * @param {HTMLElement=} node the target\n * @returns {boolean} the query result\n */\nconst isRTL = (node) => getDocumentElement(node).dir === 'rtl';\n\n/**\n * A shortcut for `(document|Element).querySelectorAll`.\n *\n * @param {string} selector the input selector\n * @param {ParentNode=} parent optional node to look into\n * @return {NodeListOf<HTMLElement>} the query result\n */\nfunction querySelectorAll(selector, parent) {\n  const lookUp = isNode(parent) ? parent : getDocument();\n  return lookUp.querySelectorAll(selector);\n}\n\n/**\n * Shortcut for `HTMLElement.getElementsByClassName` method. Some `Node` elements\n * like `ShadowRoot` do not support `getElementsByClassName`.\n *\n * @param {string} selector the class name\n * @param {ParentNode=} parent optional Element to look into\n * @return {HTMLCollectionOf<HTMLElement>} the 'HTMLCollection'\n */\nfunction getElementsByClassName(selector, parent) {\n  const lookUp = isNode(parent) ? parent : getDocument();\n  return lookUp.getElementsByClassName(selector);\n}\n\n/** @type {Map<HTMLElement, any>} */\nconst TimeCache = new Map();\n/**\n * An interface for one or more `TimerHandler`s per `Element`.\n * @see https://github.com/thednp/navbar.js/\n */\nconst Timer = {\n  /**\n   * Sets a new timeout timer for an element, or element -> key association.\n   * @param {HTMLElement} element target element\n   * @param {ReturnType<TimerHandler>} callback the callback\n   * @param {number} delay the execution delay\n   * @param {string=} key a unique key\n   */\n  set: (element, callback, delay, key) => {\n    if (!isHTMLElement(element)) return;\n\n    /* istanbul ignore else */\n    if (key && key.length) {\n      /* istanbul ignore else */\n      if (!TimeCache.has(element)) {\n        TimeCache.set(element, new Map());\n      }\n      const keyTimers = TimeCache.get(element);\n      keyTimers.set(key, setTimeout(callback, delay));\n    } else {\n      TimeCache.set(element, setTimeout(callback, delay));\n    }\n  },\n\n  /**\n   * Returns the timer associated with the target.\n   * @param {HTMLElement} element target element\n   * @param {string=} key a unique\n   * @returns {number?} the timer\n   */\n  get: (element, key) => {\n    if (!isHTMLElement(element)) return null;\n    const keyTimers = TimeCache.get(element);\n\n    if (key && key.length && keyTimers && keyTimers.get) {\n      return keyTimers.get(key) || /* istanbul ignore next */null;\n    }\n    return keyTimers || null;\n  },\n\n  /**\n   * Clears the element's timer.\n   * @param {HTMLElement} element target element\n   * @param {string=} key a unique key\n   */\n  clear: (element, key) => {\n    if (!isHTMLElement(element)) return;\n\n    if (key && key.length) {\n      const keyTimers = TimeCache.get(element);\n      /* istanbul ignore else */\n      if (keyTimers && keyTimers.get) {\n        clearTimeout(keyTimers.get(key));\n        keyTimers.delete(key);\n        /* istanbul ignore else */\n        if (keyTimers.size === 0) {\n          TimeCache.delete(element);\n        }\n      }\n    } else {\n      clearTimeout(TimeCache.get(element));\n      TimeCache.delete(element);\n    }\n  },\n};\n\n/**\n * Utility to force re-paint of an `HTMLElement` target.\n *\n * @param {HTMLElement} element is the target\n * @return {number} the `Element.offsetHeight` value\n */\nconst reflow = (element) => element.offsetHeight;\n\n/**\n * A global namespace for most scroll event listeners.\n * @type {Partial<AddEventListenerOptions>}\n */\nconst passiveHandler = { passive: true };\n\n/**\n * Global namespace for most components `target` option.\n */\nconst dataBsTarget = 'data-bs-target';\n\n/** @type {string} */\nconst carouselString = 'carousel';\n\n/** @type {string} */\nconst carouselComponent = 'Carousel';\n\n/**\n * Global namespace for most components `parent` option.\n */\nconst dataBsParent = 'data-bs-parent';\n\n/**\n * Global namespace for most components `container` option.\n */\nconst dataBsContainer = 'data-bs-container';\n\n/**\n * Returns the `Element` that THIS one targets\n * via `data-bs-target`, `href`, `data-bs-parent` or `data-bs-container`.\n *\n * @param {HTMLElement} element the target element\n * @returns {HTMLElement?} the query result\n */\nfunction getTargetElement(element) {\n  const targetAttr = [dataBsTarget, dataBsParent, dataBsContainer, 'href'];\n  const doc = getDocument(element);\n\n  return targetAttr.map((att) => {\n    const attValue = getAttribute(element, att);\n    if (attValue) {\n      return att === dataBsParent ? closest(element, attValue) : querySelector(attValue, doc);\n    }\n    return null;\n  }).filter((x) => x)[0];\n}\n\n/* Native JavaScript for Bootstrap 5 | Carousel\n----------------------------------------------- */\n\n// CAROUSEL PRIVATE GC\n// ===================\nconst carouselSelector = `[data-bs-ride=\"${carouselString}\"]`;\nconst carouselItem = `${carouselString}-item`;\nconst dataBsSlideTo = 'data-bs-slide-to';\nconst dataBsSlide = 'data-bs-slide';\nconst pausedClass = 'paused';\n\nconst carouselDefaults = {\n  pause: 'hover',\n  keyboard: false,\n  touch: true,\n  interval: 5000,\n};\n\n/**\n * Static method which returns an existing `Carousel` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Carousel>}\n */\nconst getCarouselInstance = (element) => getInstance(element, carouselComponent);\n\n/**\n * A `Carousel` initialization callback.\n * @type {BSN.InitCallback<Carousel>}\n */\nconst carouselInitCallback = (element) => new Carousel(element);\n\nlet startX = 0;\nlet currentX = 0;\nlet endX = 0;\n\n// CAROUSEL CUSTOM EVENTS\n// ======================\nconst carouselSlideEvent = OriginalEvent(`slide.bs.${carouselString}`);\nconst carouselSlidEvent = OriginalEvent(`slid.bs.${carouselString}`);\n\n// CAROUSEL EVENT HANDLERS\n// =======================\n/**\n * The `transitionend` event listener of the `Carousel`.\n * @param {Carousel} self the `Carousel` instance\n */\nfunction carouselTransitionEndHandler(self) {\n  const {\n    index, direction, element, slides, options,\n  } = self;\n\n  // discontinue disposed instances\n  /* istanbul ignore else */\n  if (self.isAnimating && getCarouselInstance(element)) {\n    const activeItem = getActiveIndex(self);\n    const orientation = direction === 'left' ? 'next' : 'prev';\n    const directionClass = direction === 'left' ? 'start' : 'end';\n\n    addClass(slides[index], activeClass);\n    removeClass(slides[index], `${carouselItem}-${orientation}`);\n    removeClass(slides[index], `${carouselItem}-${directionClass}`);\n\n    removeClass(slides[activeItem], activeClass);\n    removeClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n    dispatchEvent(element, carouselSlidEvent);\n    Timer.clear(element, dataBsSlide);\n\n    // check for element, might have been disposed\n    if (!getDocument(element).hidden && options.interval\n      && !self.isPaused) {\n      self.cycle();\n    }\n  }\n}\n\n/**\n * Handles the `mouseenter` events when *options.pause*\n * is set to `hover`.\n *\n * @this {HTMLElement}\n */\nfunction carouselPauseHandler() {\n  const element = this;\n  const self = getCarouselInstance(element);\n  /* istanbul ignore else */\n  if (self && !self.isPaused && !Timer.get(element, pausedClass)) {\n    addClass(element, pausedClass);\n  }\n}\n\n/**\n * Handles the `mouseleave` events when *options.pause*\n * is set to `hover`.\n *\n * @this {HTMLElement}\n */\nfunction carouselResumeHandler() {\n  const element = this;\n  const self = getCarouselInstance(element);\n  /* istanbul ignore else */\n  if (self && self.isPaused && !Timer.get(element, pausedClass)) {\n    self.cycle();\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` indicators.\n *\n * @this {HTMLElement}\n * @param {MouseEvent} e the `Event` object\n */\nfunction carouselIndicatorHandler(e) {\n  e.preventDefault();\n  const indicator = this;\n  const element = closest(indicator, carouselSelector) || getTargetElement(indicator);\n  const self = getCarouselInstance(element);\n\n  if (!self || self.isAnimating) return;\n\n  const newIndex = +getAttribute(indicator, dataBsSlideTo);\n\n  if (indicator && !hasClass(indicator, activeClass) // event target is not active\n    && !Number.isNaN(newIndex)) { // AND has the specific attribute\n    self.to(newIndex); // do the slide\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` arrows.\n *\n * @this {HTMLElement}\n * @param {MouseEvent} e the `Event` object\n */\nfunction carouselControlsHandler(e) {\n  e.preventDefault();\n  const control = this;\n  const element = closest(control, carouselSelector) || getTargetElement(control);\n  const self = getCarouselInstance(element);\n\n  if (!self || self.isAnimating) return;\n  const orientation = getAttribute(control, dataBsSlide);\n\n  /* istanbul ignore else */\n  if (orientation === 'next') {\n    self.next();\n  } else if (orientation === 'prev') {\n    self.prev();\n  }\n}\n\n/**\n * Handles the keyboard `keydown` event for the visible `Carousel` elements.\n *\n * @param {KeyboardEvent} e the `Event` object\n */\nfunction carouselKeyHandler({ code, target }) {\n  const doc = getDocument(target);\n  const [element] = [...querySelectorAll(carouselSelector, doc)]\n    .filter((x) => isElementInScrollRange(x));\n  const self = getCarouselInstance(element);\n\n  /* istanbul ignore next */\n  if (!self || self.isAnimating || /textarea|input/i.test(target.tagName)) return;\n  const RTL = isRTL(element);\n  const arrowKeyNext = !RTL ? keyArrowRight : keyArrowLeft;\n  const arrowKeyPrev = !RTL ? keyArrowLeft : keyArrowRight;\n\n  /* istanbul ignore else */\n  if (code === arrowKeyPrev) self.prev();\n  else if (code === arrowKeyNext) self.next();\n}\n\n// CAROUSEL TOUCH HANDLERS\n// =======================\n/**\n * Handles the `pointerdown` event for the `Carousel` element.\n *\n * @this {HTMLElement}\n * @param {PointerEvent} e the `Event` object\n */\nfunction carouselPointerDownHandler(e) {\n  const element = this;\n  const { target } = e;\n  const self = getCarouselInstance(element);\n\n  // filter pointer event on controls & indicators\n  const { controls, indicators } = self;\n  if ([...controls, ...indicators].some((el) => (el === target || el.contains(target)))) {\n    return;\n  }\n\n  if (!self || self.isAnimating || self.isTouch) { return; }\n\n  startX = e.pageX;\n\n  /* istanbul ignore else */\n  if (element.contains(target)) {\n    self.isTouch = true;\n    toggleCarouselTouchHandlers(self, true);\n  }\n}\n\n/**\n * Handles the `pointermove` event for the `Carousel` element.\n *\n * @this {HTMLElement}\n * @param {PointerEvent} e\n */\nfunction carouselPointerMoveHandler(e) {\n  // const self = getCarouselInstance(this);\n\n  // if (!self || !self.isTouch) { return; }\n\n  currentX = e.pageX;\n}\n\n/**\n * Handles the `pointerup` event for the `Carousel` element.\n *\n * @this {HTMLElement}\n\n * @param {PointerEvent} e\n */\nfunction carouselPointerUpHandler(e) {\n  const { target } = e;\n  const doc = getDocument(target);\n  const self = [...querySelectorAll(carouselSelector, doc)]\n    .map((c) => getCarouselInstance(c)).find((i) => i.isTouch);\n\n  // impossible to satisfy\n  /* istanbul ignore next */\n  if (!self) { return; }\n\n  const { element, index } = self;\n  const RTL = isRTL(target);\n\n  self.isTouch = false;\n  toggleCarouselTouchHandlers(self);\n\n  if (doc.getSelection().toString().length) {\n    // reset pointer position\n    startX = 0; currentX = 0; endX = 0;\n    return;\n  }\n\n  endX = e.pageX;\n\n  // the event target is outside the carousel context\n  // OR swipe distance is less than 120px\n  /* istanbul ignore else */\n  if (!element.contains(target) || Math.abs(startX - endX) < 120) {\n    // reset pointer position\n    startX = 0; currentX = 0; endX = 0;\n    return;\n  }\n  // OR determine next index to slide to\n  /* istanbul ignore else */\n  if (currentX < startX) {\n    self.to(index + (RTL ? -1 : 1));\n  } else if (currentX > startX) {\n    self.to(index + (RTL ? 1 : -1));\n  }\n  // reset pointer position\n  startX = 0; currentX = 0; endX = 0;\n}\n\n// CAROUSEL PRIVATE METHODS\n// ========================\n/**\n * Sets active indicator for the `Carousel` instance.\n * @param {Carousel} self the `Carousel` instance\n * @param {number} pageIndex the index of the new active indicator\n */\nfunction activateCarouselIndicator(self, pageIndex) {\n  const { indicators } = self;\n  [...indicators].forEach((x) => removeClass(x, activeClass));\n\n  /* istanbul ignore else */\n  if (self.indicators[pageIndex]) addClass(indicators[pageIndex], activeClass);\n}\n\n/**\n * Toggles the pointer event listeners for a given `Carousel` instance.\n * @param {Carousel} self the `Carousel` instance\n * @param {boolean=} add when `TRUE` event listeners are added\n */\nfunction toggleCarouselTouchHandlers(self, add) {\n  const { element } = self;\n  const action = add ? addListener : removeListener;\n  action(getDocument(element), pointermoveEvent, carouselPointerMoveHandler, passiveHandler);\n  action(getDocument(element), pointerupEvent, carouselPointerUpHandler, passiveHandler);\n}\n\n/**\n * Toggles all event listeners for a given `Carousel` instance.\n * @param {Carousel} self the `Carousel` instance\n * @param {boolean=} add when `TRUE` event listeners are added\n */\nfunction toggleCarouselHandlers(self, add) {\n  const {\n    element, options, slides, controls, indicators,\n  } = self;\n  const {\n    touch, pause, interval, keyboard,\n  } = options;\n  const action = add ? addListener : removeListener;\n\n  if (pause && interval) {\n    action(element, mouseenterEvent, carouselPauseHandler);\n    action(element, mouseleaveEvent, carouselResumeHandler);\n  }\n\n  if (touch && slides.length > 2) {\n    action(element, pointerdownEvent, carouselPointerDownHandler, passiveHandler);\n  }\n\n  /* istanbul ignore else */\n  if (controls.length) {\n    controls.forEach((arrow) => {\n      /* istanbul ignore else */\n      if (arrow) action(arrow, mouseclickEvent, carouselControlsHandler);\n    });\n  }\n\n  /* istanbul ignore else */\n  if (indicators.length) {\n    indicators.forEach((indicator) => {\n      action(indicator, mouseclickEvent, carouselIndicatorHandler);\n    });\n  }\n\n  if (keyboard) action(getDocument(element), keydownEvent, carouselKeyHandler);\n}\n\n/**\n * Returns the index of the current active item.\n * @param {Carousel} self the `Carousel` instance\n * @returns {number} the query result\n */\nfunction getActiveIndex(self) {\n  const { slides, element } = self;\n  const activeItem = querySelector(`.${carouselItem}.${activeClass}`, element);\n  return [...slides].indexOf(activeItem);\n}\n\n// CAROUSEL DEFINITION\n// ===================\n/** Creates a new `Carousel` instance. */\nclass Carousel extends BaseComponent {\n  /**\n   * @param {HTMLElement | string} target mostly a `.carousel` element\n   * @param {BSN.Options.Carousel=} config instance options\n   */\n  constructor(target, config) {\n    super(target, config);\n    // bind\n    const self = this;\n    // initialization element\n    const { element } = self;\n\n    // additional properties\n    /** @type {string} */\n    self.direction = isRTL(element) ? 'right' : 'left';\n    /** @type {number} */\n    self.index = 0;\n    /** @type {boolean} */\n    self.isTouch = false;\n\n    // carousel elements\n    // a LIVE collection is prefferable\n    self.slides = getElementsByClassName(carouselItem, element);\n    const { slides } = self;\n\n    // invalidate when not enough items\n    // no need to go further\n    if (slides.length < 2) { return; }\n    // external controls must be within same document context\n    const doc = getDocument(element);\n\n    self.controls = [\n      ...querySelectorAll(`[${dataBsSlide}]`, element),\n      ...querySelectorAll(`[${dataBsSlide}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n    ];\n\n    /** @type {HTMLElement?} */\n    self.indicator = querySelector(`.${carouselString}-indicators`, element);\n\n    // a LIVE collection is prefferable\n    /** @type {HTMLElement[]} */\n    self.indicators = [\n      ...(self.indicator ? querySelectorAll(`[${dataBsSlideTo}]`, self.indicator) : []),\n      ...querySelectorAll(`[${dataBsSlideTo}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n    ];\n\n    // set JavaScript and DATA API options\n    const { options } = self;\n\n    // don't use TRUE as interval, it's actually 0, use the default 5000ms better\n    self.options.interval = options.interval === true\n      ? carouselDefaults.interval\n      : options.interval;\n\n    // set first slide active if none\n    /* istanbul ignore else */\n    if (getActiveIndex(self) < 0) {\n      addClass(slides[0], activeClass);\n      /* istanbul ignore else */\n      if (self.indicators.length) activateCarouselIndicator(self, 0);\n    }\n\n    // attach event handlers\n    toggleCarouselHandlers(self, true);\n\n    // start to cycle if interval is set\n    if (options.interval) self.cycle();\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() { return carouselComponent; }\n  /**\n   * Returns component default options.\n   */\n  get defaults() { return carouselDefaults; }\n  /* eslint-enable */\n\n  /**\n   * Check if instance is paused.\n   * @returns {boolean}\n  */\n  get isPaused() {\n    return hasClass(this.element, pausedClass);\n  }\n\n  /**\n   * Check if instance is animating.\n   * @returns {boolean}\n  */\n  get isAnimating() {\n    return querySelector(`.${carouselItem}-next,.${carouselItem}-prev`, this.element) !== null;\n  }\n\n  // CAROUSEL PUBLIC METHODS\n  // =======================\n  /** Slide automatically through items. */\n  cycle() {\n    const self = this;\n    const {\n      element, options, isPaused, index,\n    } = self;\n\n    Timer.clear(element, carouselString);\n    if (isPaused) {\n      Timer.clear(element, pausedClass);\n      removeClass(element, pausedClass);\n    }\n\n    Timer.set(element, () => {\n      // it's very important to check self.element\n      // where instance might have been disposed\n      /* istanbul ignore else */\n      if (self.element && !self.isPaused && !self.isTouch\n        && isElementInScrollRange(element)) {\n        self.to(index + 1);\n      }\n    }, options.interval, carouselString);\n  }\n\n  /** Pause the automatic cycle. */\n  pause() {\n    const self = this;\n    const { element, options } = self;\n    /* istanbul ignore else */\n    if (!self.isPaused && options.interval) {\n      addClass(element, pausedClass);\n      Timer.set(element, () => {}, 1, pausedClass);\n    }\n  }\n\n  /** Slide to the next item. */\n  next() {\n    const self = this;\n    /* istanbul ignore else */\n    if (!self.isAnimating) { self.to(self.index + 1); }\n  }\n\n  /** Slide to the previous item. */\n  prev() {\n    const self = this;\n    /* istanbul ignore else */\n    if (!self.isAnimating) { self.to(self.index - 1); }\n  }\n\n  /**\n   * Jump to the item with the `idx` index.\n   * @param {number} idx the index of the item to jump to\n   */\n  to(idx) {\n    const self = this;\n    const {\n      element, slides, options,\n    } = self;\n    const activeItem = getActiveIndex(self);\n    const RTL = isRTL(element);\n    let next = idx;\n\n    // when controled via methods, make sure to check again\n    // first return if we're on the same item #227\n    // `to()` must be SPAM protected by Timer\n    if (self.isAnimating || activeItem === next || Timer.get(element, dataBsSlide)) return;\n\n    // determine transition direction\n    /* istanbul ignore else */\n    if ((activeItem < next) || (activeItem === 0 && next === slides.length - 1)) {\n      self.direction = RTL ? 'right' : 'left'; // next\n    } else if ((activeItem > next) || (activeItem === slides.length - 1 && next === 0)) {\n      self.direction = RTL ? 'left' : 'right'; // prev\n    }\n    const { direction } = self;\n\n    // find the right next index\n    if (next < 0) { next = slides.length - 1; } else if (next >= slides.length) { next = 0; }\n\n    // orientation, class name, eventProperties\n    const orientation = direction === 'left' ? 'next' : 'prev';\n    const directionClass = direction === 'left' ? 'start' : 'end';\n\n    const eventProperties = {\n      relatedTarget: slides[next],\n      from: activeItem,\n      to: next,\n      direction,\n    };\n\n    // update event properties\n    ObjectAssign(carouselSlideEvent, eventProperties);\n    ObjectAssign(carouselSlidEvent, eventProperties);\n\n    // discontinue when prevented\n    dispatchEvent(element, carouselSlideEvent);\n    if (carouselSlideEvent.defaultPrevented) return;\n\n    // update index\n    self.index = next;\n    activateCarouselIndicator(self, next);\n\n    if (getElementTransitionDuration(slides[next]) && hasClass(element, 'slide')) {\n      Timer.set(element, () => {\n        addClass(slides[next], `${carouselItem}-${orientation}`);\n        reflow(slides[next]);\n        addClass(slides[next], `${carouselItem}-${directionClass}`);\n        addClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n        emulateTransitionEnd(slides[next], () => carouselTransitionEndHandler(self));\n      }, 0, dataBsSlide);\n    } else {\n      addClass(slides[next], activeClass);\n      removeClass(slides[activeItem], activeClass);\n\n      Timer.set(element, () => {\n        Timer.clear(element, dataBsSlide);\n        // check for element, might have been disposed\n        /* istanbul ignore else */\n        if (element && options.interval && !self.isPaused) {\n          self.cycle();\n        }\n\n        dispatchEvent(element, carouselSlidEvent);\n      }, 0, dataBsSlide);\n    }\n  }\n\n  /** Remove `Carousel` component from target. */\n  dispose() {\n    const self = this;\n    const { slides } = self;\n    const itemClasses = ['start', 'end', 'prev', 'next'];\n\n    [...slides].forEach((slide, idx) => {\n      if (hasClass(slide, activeClass)) activateCarouselIndicator(self, idx);\n      itemClasses.forEach((c) => removeClass(slide, `${carouselItem}-${c}`));\n    });\n\n    toggleCarouselHandlers(self);\n    super.dispose();\n  }\n}\n\nObjectAssign(Carousel, {\n  selector: carouselSelector,\n  init: carouselInitCallback,\n  getInstance: getCarouselInstance,\n});\n\n/**\n * A global namespace for aria-expanded.\n * @type {string}\n */\nconst ariaExpanded = 'aria-expanded';\n\n/**\n * Shortcut for `Object.entries()` static method.\n * @param  {Record<string, any>} obj a target object\n * @returns {[string, any][]}\n */\nconst ObjectEntries = (obj) => Object.entries(obj);\n\n/**\n * Shortcut for multiple uses of `HTMLElement.style.propertyName` method.\n * @param  {HTMLElement} element target element\n * @param  {Partial<CSSStyleDeclaration>} styles attribute value\n */\nconst setElementStyle = (element, styles) => {\n  ObjectEntries(styles).forEach(([key, value]) => {\n    if (key.includes('--')) {\n      element.style.setProperty(key, value);\n    } else {\n      const propObject = {}; propObject[key] = value;\n      ObjectAssign(element.style, propObject);\n    }\n  });\n};\n\n/**\n * Global namespace for most components `collapsing` class.\n * As used by `Collapse` / `Tab`.\n */\nconst collapsingClass = 'collapsing';\n\n/** @type {string} */\nconst collapseString = 'collapse';\n\n/** @type {string} */\nconst collapseComponent = 'Collapse';\n\n/* Native JavaScript for Bootstrap 5 | Collapse\n----------------------------------------------- */\n\n// COLLAPSE GC\n// ===========\nconst collapseSelector = `.${collapseString}`;\nconst collapseToggleSelector = `[${dataBsToggle}=\"${collapseString}\"]`;\nconst collapseDefaults = { parent: null };\n\n/**\n * Static method which returns an existing `Collapse` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Collapse>}\n */\nconst getCollapseInstance = (element) => getInstance(element, collapseComponent);\n\n/**\n * A `Collapse` initialization callback.\n * @type {BSN.InitCallback<Collapse>}\n */\nconst collapseInitCallback = (element) => new Collapse(element);\n\n// COLLAPSE CUSTOM EVENTS\n// ======================\nconst showCollapseEvent = OriginalEvent(`show.bs.${collapseString}`);\nconst shownCollapseEvent = OriginalEvent(`shown.bs.${collapseString}`);\nconst hideCollapseEvent = OriginalEvent(`hide.bs.${collapseString}`);\nconst hiddenCollapseEvent = OriginalEvent(`hidden.bs.${collapseString}`);\n\n// COLLAPSE PRIVATE METHODS\n// ========================\n/**\n * Expand the designated `Element`.\n * @param {Collapse} self the `Collapse` instance\n */\nfunction expandCollapse(self) {\n  const {\n    element, parent, triggers,\n  } = self;\n\n  dispatchEvent(element, showCollapseEvent);\n  if (showCollapseEvent.defaultPrevented) return;\n\n  Timer.set(element, () => {}, 17);\n  if (parent) Timer.set(parent, () => {}, 17);\n\n  addClass(element, collapsingClass);\n  removeClass(element, collapseString);\n\n  setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n  emulateTransitionEnd(element, () => {\n    Timer.clear(element);\n    if (parent) Timer.clear(parent);\n\n    triggers.forEach((btn) => setAttribute(btn, ariaExpanded, 'true'));\n\n    removeClass(element, collapsingClass);\n    addClass(element, collapseString);\n    addClass(element, showClass);\n\n    setElementStyle(element, { height: '' });\n\n    dispatchEvent(element, shownCollapseEvent);\n  });\n}\n\n/**\n * Collapse the designated `Element`.\n * @param {Collapse} self the `Collapse` instance\n */\nfunction collapseContent(self) {\n  const {\n    element, parent, triggers,\n  } = self;\n\n  dispatchEvent(element, hideCollapseEvent);\n\n  if (hideCollapseEvent.defaultPrevented) return;\n\n  Timer.set(element, () => {}, 17);\n  if (parent) Timer.set(parent, () => {}, 17);\n\n  setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n  removeClass(element, collapseString);\n  removeClass(element, showClass);\n  addClass(element, collapsingClass);\n\n  reflow(element);\n  setElementStyle(element, { height: '0px' });\n\n  emulateTransitionEnd(element, () => {\n    Timer.clear(element);\n    /* istanbul ignore else */\n    if (parent) Timer.clear(parent);\n\n    triggers.forEach((btn) => setAttribute(btn, ariaExpanded, 'false'));\n\n    removeClass(element, collapsingClass);\n    addClass(element, collapseString);\n\n    setElementStyle(element, { height: '' });\n\n    dispatchEvent(element, hiddenCollapseEvent);\n  });\n}\n\n/**\n * Toggles on/off the event listener(s) of the `Collapse` instance.\n * @param {Collapse} self the `Collapse` instance\n * @param {boolean=} add when `true`, the event listener is added\n */\nfunction toggleCollapseHandler(self, add) {\n  const action = add ? addListener : removeListener;\n  const { triggers } = self;\n\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach((btn) => action(btn, mouseclickEvent, collapseClickHandler));\n  }\n}\n\n// COLLAPSE EVENT HANDLER\n// ======================\n/**\n * Handles the `click` event for the `Collapse` instance.\n * @param {MouseEvent} e the `Event` object\n */\nfunction collapseClickHandler(e) {\n  const { target } = e; // our target is `HTMLElement`\n  const trigger = target && closest(target, collapseToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getCollapseInstance(element);\n  /* istanbul ignore else */\n  if (self) self.toggle();\n\n  // event target is anchor link #398\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n}\n\n// COLLAPSE DEFINITION\n// ===================\n\n/** Returns a new `Colapse` instance. */\nclass Collapse extends BaseComponent {\n  /**\n   * @param {HTMLElement | string} target and `Element` that matches the selector\n   * @param {BSN.Options.Collapse=} config instance options\n   */\n  constructor(target, config) {\n    super(target, config);\n    // bind\n    const self = this;\n\n    // initialization element\n    const { element, options } = self;\n    const doc = getDocument(element);\n\n    // set triggering elements\n    /** @type {HTMLElement[]} */\n    self.triggers = [...querySelectorAll(collapseToggleSelector, doc)]\n      .filter((btn) => getTargetElement(btn) === element);\n\n    // set parent accordion\n    /** @type {HTMLElement?} */\n    self.parent = querySelector(options.parent, doc)\n      || getTargetElement(element) || null;\n\n    // add event listeners\n    toggleCollapseHandler(self, true);\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() { return collapseComponent; }\n  /**\n   * Returns component default options.\n   */\n  get defaults() { return collapseDefaults; }\n  /* eslint-enable */\n\n  // COLLAPSE PUBLIC METHODS\n  // =======================\n  /** Toggles the visibility of the collapse. */\n  toggle() {\n    const self = this;\n    if (!hasClass(self.element, showClass)) self.show();\n    else self.hide();\n  }\n\n  /** Hides the collapse. */\n  hide() {\n    const self = this;\n    const { triggers, element } = self;\n    if (Timer.get(element)) return;\n\n    collapseContent(self);\n    /* istanbul ignore else */\n    if (triggers.length) {\n      triggers.forEach((btn) => addClass(btn, `${collapseString}d`));\n    }\n  }\n\n  /** Shows the collapse. */\n  show() {\n    const self = this;\n    const {\n      element, parent, triggers,\n    } = self;\n    let activeCollapse;\n    let activeCollapseInstance;\n\n    if (parent) {\n      activeCollapse = [...querySelectorAll(`.${collapseString}.${showClass}`, parent)]\n        .find((i) => getCollapseInstance(i));\n      activeCollapseInstance = activeCollapse && getCollapseInstance(activeCollapse);\n    }\n\n    if ((!parent || !Timer.get(parent)) && !Timer.get(element)) {\n      if (activeCollapseInstance && activeCollapse !== element) {\n        collapseContent(activeCollapseInstance);\n        activeCollapseInstance.triggers.forEach((btn) => {\n          addClass(btn, `${collapseString}d`);\n        });\n      }\n\n      expandCollapse(self);\n      /* istanbul ignore else */\n      if (triggers.length) {\n        triggers.forEach((btn) => removeClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Remove the `Collapse` component from the target `Element`. */\n  dispose() {\n    const self = this;\n    toggleCollapseHandler(self);\n\n    super.dispose();\n  }\n}\n\nObjectAssign(Collapse, {\n  selector: collapseSelector,\n  init: collapseInitCallback,\n  getInstance: getCollapseInstance,\n});\n\n/**\n * A global namespace for `focus` event.\n * @type {string}\n */\nconst focusEvent = 'focus';\n\n/**\n * A global namespace for `keyup` event.\n * @type {string}\n */\nconst keyupEvent = 'keyup';\n\n/**\n * A global namespace for `scroll` event.\n * @type {string}\n */\nconst scrollEvent = 'scroll';\n\n/**\n * A global namespace for `resize` event.\n * @type {string}\n */\nconst resizeEvent = 'resize';\n\n/**\n * A global namespace for `ArrowUp` key.\n * @type {string} e.which = 38 equivalent\n */\nconst keyArrowUp = 'ArrowUp';\n\n/**\n * A global namespace for `ArrowDown` key.\n * @type {string} e.which = 40 equivalent\n */\nconst keyArrowDown = 'ArrowDown';\n\n/**\n * A global namespace for `Escape` key.\n * @type {string} e.which = 27 equivalent\n */\nconst keyEscape = 'Escape';\n\n/**\n * Shortcut for `HTMLElement.hasAttribute()` method.\n * @param  {HTMLElement} element target element\n * @param  {string} attribute attribute name\n * @returns {boolean} the query result\n */\nconst hasAttribute = (element, attribute) => element.hasAttribute(attribute);\n\n/**\n * Utility to focus an `HTMLElement` target.\n *\n * @param {HTMLElement} element is the target\n */\nconst focus = (element) => element.focus();\n\n/**\n * Returns the `Window` object of a target node.\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param {(Node | Window)=} node target node\n * @returns {Window} the `Window` object\n */\nfunction getWindow(node) {\n  // node is undefined | NULL\n  if (!node) return window;\n  // node instanceof Document\n  if (isDocument(node)) return node.defaultView;\n  // node instanceof Node\n  if (isNode(node)) return node.ownerDocument.defaultView;\n  // node is instanceof Window\n  return node;\n}\n\n/**\n * Global namespace for `Dropdown` types / classes.\n */\nconst dropdownMenuClasses = ['dropdown', 'dropup', 'dropstart', 'dropend'];\n\n/** @type {string} */\nconst dropdownComponent = 'Dropdown';\n\n/**\n * Global namespace for `.dropdown-menu`.\n */\nconst dropdownMenuClass = 'dropdown-menu';\n\n/**\n * Checks if an *event.target* or its parent has an `href=\"#\"` value.\n * We need to prevent jumping around onclick, don't we?\n *\n * @param {Node} element the target element\n * @returns {boolean} the query result\n */\nfunction isEmptyAnchor(element) {\n  // `EventTarget` must be `HTMLElement`\n  const parentAnchor = closest(element, 'A');\n  return isHTMLElement(element)\n    // anchor href starts with #\n    && ((hasAttribute(element, 'href') && element.href.slice(-1) === '#')\n    // OR a child of an anchor with href starts with #\n    || (parentAnchor && hasAttribute(parentAnchor, 'href')\n    && parentAnchor.href.slice(-1) === '#'));\n}\n\n/* Native JavaScript for Bootstrap 5 | Dropdown\n----------------------------------------------- */\n\n// DROPDOWN PRIVATE GC\n// ===================\nconst [\n  dropdownString,\n  dropupString,\n  dropstartString,\n  dropendString,\n] = dropdownMenuClasses;\nconst dropdownSelector = `[${dataBsToggle}=\"${dropdownString}\"]`;\n\n/**\n * Static method which returns an existing `Dropdown` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Dropdown>}\n */\nconst getDropdownInstance = (element) => getInstance(element, dropdownComponent);\n\n/**\n * A `Dropdown` initialization callback.\n * @type {BSN.InitCallback<Dropdown>}\n */\nconst dropdownInitCallback = (element) => new Dropdown(element);\n\n// DROPDOWN PRIVATE GC\n// ===================\n// const dropdownMenuStartClass = `${dropdownMenuClass}-start`;\nconst dropdownMenuEndClass = `${dropdownMenuClass}-end`;\nconst verticalClass = [dropdownString, dropupString];\nconst horizontalClass = [dropstartString, dropendString];\nconst menuFocusTags = ['A', 'BUTTON'];\n\nconst dropdownDefaults = {\n  offset: 5, // [number] 5(px)\n  display: 'dynamic', // [dynamic|static]\n};\n\n// DROPDOWN CUSTOM EVENTS\n// ======================\nconst showDropdownEvent = OriginalEvent(`show.bs.${dropdownString}`);\nconst shownDropdownEvent = OriginalEvent(`shown.bs.${dropdownString}`);\nconst hideDropdownEvent = OriginalEvent(`hide.bs.${dropdownString}`);\nconst hiddenDropdownEvent = OriginalEvent(`hidden.bs.${dropdownString}`);\n\n// DROPDOWN PRIVATE METHODS\n// ========================\n/**\n * Apply specific style or class names to a `.dropdown-menu` to automatically\n * accomodate the layout and the page scroll.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nfunction styleDropdown(self) {\n  const {\n    element, menu, parentElement, options,\n  } = self;\n  const { offset } = options;\n\n  // don't apply any style on mobile view\n  /* istanbul ignore next: this test requires a navbar */\n  if (getElementStyle(menu, 'position') === 'static') return;\n\n  const RTL = isRTL(element);\n  // const menuStart = hasClass(menu, dropdownMenuStartClass);\n  const menuEnd = hasClass(menu, dropdownMenuEndClass);\n\n  // reset menu offset and position\n  const resetProps = ['margin', 'top', 'bottom', 'left', 'right'];\n  resetProps.forEach((p) => { menu.style[p] = ''; });\n\n  // set initial position class\n  // take into account .btn-group parent as .dropdown\n  // this requires navbar/btn-group/input-group\n  let positionClass = dropdownMenuClasses.find((c) => hasClass(parentElement, c))\n    || /* istanbul ignore next: fallback position */ dropdownString;\n\n  /** @type {Record<string, Record<string, any>>} */\n  let dropdownMargin = {\n    dropdown: [offset, 0, 0],\n    dropup: [0, 0, offset],\n    dropstart: RTL ? [-1, 0, 0, offset] : [-1, offset, 0],\n    dropend: RTL ? [-1, offset, 0] : [-1, 0, 0, offset],\n  };\n\n  /** @type {Record<string, Record<string, any>>} */\n  const dropdownPosition = {\n    dropdown: { top: '100%' },\n    dropup: { top: 'auto', bottom: '100%' },\n    dropstart: RTL ? { left: '100%', right: 'auto' } : { left: 'auto', right: '100%' },\n    dropend: RTL ? { left: 'auto', right: '100%' } : { left: '100%', right: 'auto' },\n    menuStart: RTL ? { right: 0, left: 'auto' } : { right: 'auto', left: 0 },\n    menuEnd: RTL ? { right: 'auto', left: 0 } : { right: 0, left: 'auto' },\n  };\n\n  const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menu;\n\n  const { clientWidth, clientHeight } = getDocumentElement(element);\n  const {\n    left: targetLeft, top: targetTop,\n    width: targetWidth, height: targetHeight,\n  } = getBoundingClientRect(element);\n\n  // dropstart | dropend\n  const leftFullExceed = targetLeft - menuWidth - offset < 0;\n  // dropend\n  const rightFullExceed = targetLeft + menuWidth + targetWidth + offset >= clientWidth;\n  // dropstart | dropend\n  const bottomExceed = targetTop + menuHeight + offset >= clientHeight;\n  // dropdown\n  const bottomFullExceed = targetTop + menuHeight + targetHeight + offset >= clientHeight;\n  // dropup\n  const topExceed = targetTop - menuHeight - offset < 0;\n  // dropdown / dropup\n  const leftExceed = ((!RTL && menuEnd) || (RTL && !menuEnd))\n    && targetLeft + targetWidth - menuWidth < 0;\n  const rightExceed = ((RTL && menuEnd) || (!RTL && !menuEnd))\n    && targetLeft + menuWidth >= clientWidth;\n\n  // recompute position\n  // handle RTL as well\n  if (horizontalClass.includes(positionClass) && leftFullExceed && rightFullExceed) {\n    positionClass = dropdownString;\n  }\n  if (positionClass === dropstartString && (!RTL ? leftFullExceed : rightFullExceed)) {\n    positionClass = dropendString;\n  }\n  if (positionClass === dropendString && (RTL ? leftFullExceed : rightFullExceed)) {\n    positionClass = dropstartString;\n  }\n  if (positionClass === dropupString && topExceed && !bottomFullExceed) {\n    positionClass = dropdownString;\n  }\n  if (positionClass === dropdownString && bottomFullExceed && !topExceed) {\n    positionClass = dropupString;\n  }\n\n  // override position for horizontal classes\n  if (horizontalClass.includes(positionClass) && bottomExceed) {\n    ObjectAssign(dropdownPosition[positionClass], {\n      top: 'auto', bottom: 0,\n    });\n  }\n\n  // override position for vertical classes\n  if (verticalClass.includes(positionClass) && (leftExceed || rightExceed)) {\n    // don't realign when menu is wider than window\n    // in both RTL and non-RTL readability is KING\n    let posAjust;\n    if (!leftExceed && rightExceed && !RTL) posAjust = { left: 'auto', right: 0 };\n    if (leftExceed && !rightExceed && RTL) posAjust = { left: 0, right: 'auto' };\n    if (posAjust) ObjectAssign(dropdownPosition[positionClass], posAjust);\n  }\n\n  dropdownMargin = dropdownMargin[positionClass];\n  setElementStyle(menu, {\n    ...dropdownPosition[positionClass],\n    margin: `${dropdownMargin.map((x) => (x ? `${x}px` : x)).join(' ')}`,\n  });\n\n  // override dropdown-menu-start | dropdown-menu-end\n  if (verticalClass.includes(positionClass) && menuEnd) {\n    /* istanbul ignore else */\n    if (menuEnd) {\n      const endAdjust = (!RTL && leftExceed) || (RTL && rightExceed)\n        ? 'menuStart' : /* istanbul ignore next */'menuEnd';\n      setElementStyle(menu, dropdownPosition[endAdjust]);\n    }\n  }\n}\n\n/**\n * Returns an `Array` of focusable items in the given dropdown-menu.\n * @param {HTMLElement} menu\n * @returns {HTMLElement[]}\n */\nfunction getMenuItems(menu) {\n  return [...menu.children].map((c) => {\n    if (c && menuFocusTags.includes(c.tagName)) return c;\n    const { firstElementChild } = c;\n    if (firstElementChild && menuFocusTags.includes(firstElementChild.tagName)) {\n      return firstElementChild;\n    }\n    return null;\n  }).filter((c) => c);\n}\n\n/**\n * Toggles on/off the listeners for the events that close the dropdown\n * as well as event that request a new position for the dropdown.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nfunction toggleDropdownDismiss(self) {\n  const { element, options } = self;\n  const action = self.open ? addListener : removeListener;\n  const doc = getDocument(element);\n\n  action(doc, mouseclickEvent, dropdownDismissHandler);\n  action(doc, focusEvent, dropdownDismissHandler);\n  action(doc, keydownEvent, dropdownPreventScroll);\n  action(doc, keyupEvent, dropdownKeyHandler);\n\n  /* istanbul ignore else */\n  if (options.display === 'dynamic') {\n    [scrollEvent, resizeEvent].forEach((ev) => {\n      action(getWindow(element), ev, dropdownLayoutHandler, passiveHandler);\n    });\n  }\n}\n\n/**\n * Toggles on/off the `click` event listener of the `Dropdown`.\n *\n * @param {Dropdown} self the `Dropdown` instance\n * @param {boolean=} add when `true`, it will add the event listener\n */\nfunction toggleDropdownHandler(self, add) {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, dropdownClickHandler);\n}\n\n/**\n * Returns the currently open `.dropdown` element.\n *\n * @param {(Node | Window)=} element target\n * @returns {HTMLElement?} the query result\n */\nfunction getCurrentOpenDropdown(element) {\n  const currentParent = [...dropdownMenuClasses, 'btn-group', 'input-group']\n    .map((c) => getElementsByClassName(`${c} ${showClass}`, getDocument(element)))\n    .find((x) => x.length);\n\n  if (currentParent && currentParent.length) {\n    return [...currentParent[0].children]\n      .find((x) => hasAttribute(x, dataBsToggle));\n  }\n  return null;\n}\n\n// DROPDOWN EVENT HANDLERS\n// =======================\n/**\n * Handles the `click` event for the `Dropdown` instance.\n *\n * @param {MouseEvent} e event object\n * @this {Document}\n */\nfunction dropdownDismissHandler(e) {\n  const { target, type } = e;\n\n  /* istanbul ignore next: impossible to satisfy */\n  if (!target || !target.closest) return; // some weird FF bug #409\n\n  const element = getCurrentOpenDropdown(target);\n  const self = getDropdownInstance(element);\n\n  /* istanbul ignore next */\n  if (!self) return;\n\n  const { parentElement, menu } = self;\n\n  const hasData = closest(target, dropdownSelector) !== null;\n  const isForm = parentElement && parentElement.contains(target)\n    && (target.tagName === 'form' || closest(target, 'form') !== null);\n\n  if (type === mouseclickEvent && isEmptyAnchor(target)) {\n    e.preventDefault();\n  }\n  if (type === focusEvent\n    && (target === element || target === menu || menu.contains(target))) {\n    return;\n  }\n\n  /* istanbul ignore else */\n  if (isForm || hasData) ; else if (self) {\n    self.hide();\n  }\n}\n\n/**\n * Handles `click` event listener for `Dropdown`.\n * @this {HTMLElement}\n * @param {MouseEvent} e event object\n */\nfunction dropdownClickHandler(e) {\n  const element = this;\n  const { target } = e;\n  const self = getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    self.toggle();\n    /* istanbul ignore else */\n    if (target && isEmptyAnchor(target)) e.preventDefault();\n  }\n}\n\n/**\n * Prevents scroll when dropdown-menu is visible.\n * @param {KeyboardEvent} e event object\n */\nfunction dropdownPreventScroll(e) {\n  /* istanbul ignore else */\n  if ([keyArrowDown, keyArrowUp].includes(e.code)) e.preventDefault();\n}\n\n/**\n * Handles keyboard `keydown` events for `Dropdown`.\n * @param {KeyboardEvent} e keyboard key\n * @this {Document}\n */\nfunction dropdownKeyHandler(e) {\n  const { code } = e;\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n  const { activeElement } = element && getDocument(element);\n  /* istanbul ignore next: impossible to satisfy */\n  if (!self || !activeElement) return;\n  const { menu, open } = self;\n  const menuItems = getMenuItems(menu);\n\n  // arrow up & down\n  if (menuItems && menuItems.length && [keyArrowDown, keyArrowUp].includes(code)) {\n    let idx = menuItems.indexOf(activeElement);\n    /* istanbul ignore else */\n    if (activeElement === element) {\n      idx = 0;\n    } else if (code === keyArrowUp) {\n      idx = idx > 1 ? idx - 1 : 0;\n    } else if (code === keyArrowDown) {\n      idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n    }\n    /* istanbul ignore else */\n    if (menuItems[idx]) focus(menuItems[idx]);\n  }\n\n  if (keyEscape === code && open) {\n    self.toggle();\n    focus(element);\n  }\n}\n\n/**\n * @this {globalThis}\n * @returns {void}\n */\nfunction dropdownLayoutHandler() {\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self && self.open) styleDropdown(self);\n}\n\n// DROPDOWN DEFINITION\n// ===================\n/** Returns a new Dropdown instance. */\nclass Dropdown extends BaseComponent {\n  /**\n   * @param {HTMLElement | string} target Element or string selector\n   * @param {BSN.Options.Dropdown=} config the instance options\n   */\n  constructor(target, config) {\n    super(target, config);\n    // bind\n    const self = this;\n\n    // initialization element\n    const { element } = self;\n    const { parentElement } = element;\n\n    // set targets\n    /** @type {(Element | HTMLElement)} */\n    self.parentElement = parentElement;\n    /** @type {(Element | HTMLElement)} */\n    self.menu = querySelector(`.${dropdownMenuClass}`, parentElement);\n\n    // set initial state to closed\n    /** @type {boolean} */\n    self.open = false;\n\n    // add event listener\n    toggleDropdownHandler(self, true);\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() { return dropdownComponent; }\n  /**\n   * Returns component default options.\n   */\n  get defaults() { return dropdownDefaults; }\n  /* eslint-enable */\n\n  // DROPDOWN PUBLIC METHODS\n  // =======================\n  /** Shows/hides the dropdown menu to the user. */\n  toggle() {\n    const self = this;\n\n    if (self.open) self.hide();\n    else self.show();\n  }\n\n  /** Shows the dropdown menu to the user. */\n  show() {\n    const self = this;\n    const {\n      element, open, menu, parentElement,\n    } = self;\n\n    /* istanbul ignore next */\n    if (open) return;\n\n    const currentElement = getCurrentOpenDropdown(element);\n    const currentInstance = currentElement && getDropdownInstance(currentElement);\n    if (currentInstance) currentInstance.hide();\n\n    // dispatch event\n    [showDropdownEvent, shownDropdownEvent].forEach((e) => {\n      e.relatedTarget = element;\n    });\n    dispatchEvent(parentElement, showDropdownEvent);\n    if (showDropdownEvent.defaultPrevented) return;\n\n    addClass(menu, showClass);\n    addClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, 'true');\n\n    // change menu position\n    styleDropdown(self);\n\n    self.open = !open;\n\n    focus(element); // focus the element\n    toggleDropdownDismiss(self);\n    dispatchEvent(parentElement, shownDropdownEvent);\n  }\n\n  /** Hides the dropdown menu from the user. */\n  hide() {\n    const self = this;\n    const {\n      element, open, menu, parentElement,\n    } = self;\n\n    /* istanbul ignore next */\n    if (!open) return;\n\n    [hideDropdownEvent, hiddenDropdownEvent].forEach((e) => {\n      e.relatedTarget = element;\n    });\n    dispatchEvent(parentElement, hideDropdownEvent);\n    if (hideDropdownEvent.defaultPrevented) return;\n\n    removeClass(menu, showClass);\n    removeClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, 'false');\n\n    self.open = !open;\n    // only re-attach handler if the instance is not disposed\n    toggleDropdownDismiss(self);\n    dispatchEvent(parentElement, hiddenDropdownEvent);\n  }\n\n  /** Removes the `Dropdown` component from the target element. */\n  dispose() {\n    const self = this;\n    if (self.open) self.hide();\n\n    toggleDropdownHandler(self);\n\n    super.dispose();\n  }\n}\n\nObjectAssign(Dropdown, {\n  selector: dropdownSelector,\n  init: dropdownInitCallback,\n  getInstance: getDropdownInstance,\n});\n\n/**\n * A global namespace for aria-hidden.\n * @type {string}\n */\nconst ariaHidden = 'aria-hidden';\n\n/**\n * A global namespace for aria-modal.\n * @type {string}\n */\nconst ariaModal = 'aria-modal';\n\n/**\n * Shortcut for `HTMLElement.removeAttribute()` method.\n * @param  {HTMLElement} element target element\n * @param  {string} attribute attribute name\n * @returns {void}\n */\nconst removeAttribute = (element, attribute) => element.removeAttribute(attribute);\n\n/**\n * Returns the `document.body` or the `<body>` element.\n *\n * @param {(Node | Window)=} node\n * @returns {HTMLBodyElement}\n */\nfunction getDocumentBody(node) {\n  return getDocument(node).body;\n}\n\n/** @type {string} */\nconst modalString = 'modal';\n\n/** @type {string} */\nconst modalComponent = 'Modal';\n\n/**\n * Check if target is a `ShadowRoot`.\n *\n * @param {any} element target\n * @returns {boolean} the query result\n */\nconst isShadowRoot = (element) => (element && element.constructor.name === 'ShadowRoot')\n  || false;\n\n/**\n * Returns the `parentNode` also going through `ShadowRoot`.\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param {Node} node the target node\n * @returns {Node} the apropriate parent node\n */\nfunction getParentNode(node) {\n  if (node.nodeName === 'HTML') {\n    return node;\n  }\n\n  // this is a quicker (but less type safe) way to save quite some bytes from the bundle\n  return (\n    node.assignedSlot // step into the shadow DOM of the parent of a slotted node\n    || node.parentNode // DOM Element detected\n    || (isShadowRoot(node) && node.host) // ShadowRoot detected\n    || getDocumentElement(node) // fallback\n  );\n}\n\n/**\n * Check if a target element is a `<table>`, `<td>` or `<th>`.\n * This specific check is important for determining\n * the `offsetParent` of a given element.\n *\n * @param {any} element the target element\n * @returns {boolean} the query result\n */\nconst isTableElement = (element) => (element && ['TABLE', 'TD', 'TH'].includes(element.tagName))\n  || false;\n\n/**\n * Returns an `HTMLElement` to be used as default value for *options.container*\n * for `Tooltip` / `Popover` components.\n *\n * When `getOffset` is *true*, it returns the `offsetParent` for tooltip/popover\n * offsets computation similar to **floating-ui**.\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param {HTMLElement} element the target\n * @param {boolean=} getOffset when *true* it will return an `offsetParent`\n * @returns {ParentNode | Window} the query result\n */\nfunction getElementContainer(element, getOffset) {\n  const majorBlockTags = ['HTML', 'BODY'];\n\n  if (getOffset) {\n    /** @type {any} */\n    let { offsetParent } = element;\n    const win = getWindow(element);\n\n    while (offsetParent && (isTableElement(offsetParent)\n      || (isHTMLElement(offsetParent)\n        // we must count for both fixed & sticky\n        && !['sticky', 'fixed'].includes(getElementStyle(offsetParent, 'position'))))) {\n      offsetParent = offsetParent.offsetParent;\n    }\n\n    if (!offsetParent || (majorBlockTags.includes(offsetParent.tagName)\n        || getElementStyle(offsetParent, 'position') === 'static')) {\n      offsetParent = win;\n    }\n    return offsetParent;\n  }\n\n  /** @type {ParentNode[]} */\n  const containers = [];\n  /** @type {ParentNode} */\n  let { parentNode } = element;\n\n  while (parentNode && !majorBlockTags.includes(parentNode.nodeName)) {\n    parentNode = getParentNode(parentNode);\n    /* istanbul ignore else */\n    if (!(isShadowRoot(parentNode) || !!parentNode.shadowRoot\n      || isTableElement(parentNode))) {\n      containers.push(parentNode);\n    }\n  }\n\n  return containers.find((c, i) => {\n    if (getElementStyle(c, 'position') !== 'relative'\n      && containers.slice(i + 1).every((r) => getElementStyle(r, 'position') === 'static')) {\n      return c;\n    }\n    return null;\n  }) || getDocumentBody(element);\n}\n\n/**\n * Global namespace for components `fixed-top` class.\n */\nconst fixedTopClass = 'fixed-top';\n\n/**\n * Global namespace for components `fixed-bottom` class.\n */\nconst fixedBottomClass = 'fixed-bottom';\n\n/**\n * Global namespace for components `sticky-top` class.\n */\nconst stickyTopClass = 'sticky-top';\n\n/**\n * Global namespace for components `position-sticky` class.\n */\nconst positionStickyClass = 'position-sticky';\n\n/** @param {(HTMLElement | Document)=} parent */\nconst getFixedItems = (parent) => [\n  ...getElementsByClassName(fixedTopClass, parent),\n  ...getElementsByClassName(fixedBottomClass, parent),\n  ...getElementsByClassName(stickyTopClass, parent),\n  ...getElementsByClassName(positionStickyClass, parent),\n  ...getElementsByClassName('is-fixed', parent),\n];\n\n/**\n * Removes *padding* and *overflow* from the `<body>`\n * and all spacing from fixed items.\n * @param {HTMLElement=} element the target modal/offcanvas\n */\nfunction resetScrollbar(element) {\n  const bd = getDocumentBody(element);\n  setElementStyle(bd, {\n    paddingRight: '',\n    overflow: '',\n  });\n\n  const fixedItems = getFixedItems(bd);\n\n  if (fixedItems.length) {\n    fixedItems.forEach((fixed) => {\n      setElementStyle(fixed, {\n        paddingRight: '',\n        marginRight: '',\n      });\n    });\n  }\n}\n\n/**\n * Returns the scrollbar width if the body does overflow\n * the window.\n * @param {HTMLElement=} element\n * @returns {number} the value\n */\nfunction measureScrollbar(element) {\n  const { clientWidth } = getDocumentElement(element);\n  const { innerWidth } = getWindow(element);\n  return Math.abs(innerWidth - clientWidth);\n}\n\n/**\n * Sets the `<body>` and fixed items style when modal / offcanvas\n * is shown to the user.\n *\n * @param {HTMLElement} element the target modal/offcanvas\n * @param {boolean=} overflow body does overflow or not\n */\nfunction setScrollbar(element, overflow) {\n  const bd = getDocumentBody(element);\n  const bodyPad = parseInt(getElementStyle(bd, 'paddingRight'), 10);\n  const isOpen = getElementStyle(bd, 'overflow') === 'hidden';\n  const sbWidth = isOpen && bodyPad ? 0 : measureScrollbar(element);\n  const fixedItems = getFixedItems(bd);\n\n  /* istanbul ignore else */\n  if (overflow) {\n    setElementStyle(bd, {\n      overflow: 'hidden',\n      paddingRight: `${bodyPad + sbWidth}px`,\n    });\n\n    /* istanbul ignore else */\n    if (fixedItems.length) {\n      fixedItems.forEach((fixed) => {\n        const itemPadValue = getElementStyle(fixed, 'paddingRight');\n        fixed.style.paddingRight = `${parseInt(itemPadValue, 10) + sbWidth}px`;\n        /* istanbul ignore else */\n        if ([stickyTopClass, positionStickyClass].some((c) => hasClass(fixed, c))) {\n          const itemMValue = getElementStyle(fixed, 'marginRight');\n          fixed.style.marginRight = `${parseInt(itemMValue, 10) - sbWidth}px`;\n        }\n      });\n    }\n  }\n}\n\n/**\n * This is a shortie for `document.createElement` method\n * which allows you to create a new `HTMLElement` for a given `tagName`\n * or based on an object with specific non-readonly attributes:\n * `id`, `className`, `textContent`, `style`, etc.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/createElement\n *\n * @param {Record<string, string> | string} param `tagName` or object\n * @return {HTMLElement} a new `HTMLElement` or `Element`\n */\nfunction createElement(param) {\n  if (!param) return null;\n\n  if (typeof param === 'string') {\n    return getDocument().createElement(param);\n  }\n\n  const { tagName } = param;\n  const attr = { ...param };\n  const newElement = createElement(tagName);\n  delete attr.tagName;\n  ObjectAssign(newElement, attr);\n  return newElement;\n}\n\n/** @type {string} */\nconst offcanvasString = 'offcanvas';\n\nconst backdropString = 'backdrop';\nconst modalBackdropClass = `${modalString}-${backdropString}`;\nconst offcanvasBackdropClass = `${offcanvasString}-${backdropString}`;\nconst modalActiveSelector = `.${modalString}.${showClass}`;\nconst offcanvasActiveSelector = `.${offcanvasString}.${showClass}`;\n\n// any document would suffice\nconst overlay = createElement('div');\n\n/**\n * Returns the current active modal / offcancas element.\n * @param {HTMLElement=} element the context element\n * @returns {HTMLElement?} the requested element\n */\nfunction getCurrentOpen(element) {\n  return querySelector(`${modalActiveSelector},${offcanvasActiveSelector}`, getDocument(element));\n}\n\n/**\n * Toogles from a Modal overlay to an Offcanvas, or vice-versa.\n * @param {boolean=} isModal\n */\nfunction toggleOverlayType(isModal) {\n  const targetClass = isModal ? modalBackdropClass : offcanvasBackdropClass;\n  [modalBackdropClass, offcanvasBackdropClass].forEach((c) => {\n    removeClass(overlay, c);\n  });\n  addClass(overlay, targetClass);\n}\n\n/**\n * Append the overlay to DOM.\n * @param {HTMLElement} container\n * @param {boolean} hasFade\n * @param {boolean=} isModal\n */\nfunction appendOverlay(container, hasFade, isModal) {\n  toggleOverlayType(isModal);\n  container.append(overlay);\n  if (hasFade) addClass(overlay, fadeClass);\n}\n\n/**\n * Shows the overlay to the user.\n */\nfunction showOverlay() {\n  if (!hasClass(overlay, showClass)) {\n    addClass(overlay, showClass);\n    reflow(overlay);\n  }\n}\n\n/**\n * Hides the overlay from the user.\n */\nfunction hideOverlay() {\n  removeClass(overlay, showClass);\n}\n\n/**\n * Removes the overlay from DOM.\n * @param {HTMLElement=} element\n */\nfunction removeOverlay(element) {\n  if (!getCurrentOpen(element)) {\n    removeClass(overlay, fadeClass);\n    overlay.remove();\n    resetScrollbar(element);\n  }\n}\n\n/**\n * @param {HTMLElement} element target\n * @returns {boolean}\n */\nfunction isVisible(element) {\n  return isHTMLElement(element)\n    && getElementStyle(element, 'visibility') !== 'hidden'\n    && element.offsetParent !== null;\n}\n\n/* Native JavaScript for Bootstrap 5 | Modal\n-------------------------------------------- */\n\n// MODAL PRIVATE GC\n// ================\nconst modalSelector = `.${modalString}`;\nconst modalToggleSelector = `[${dataBsToggle}=\"${modalString}\"]`;\nconst modalDismissSelector = `[${dataBsDismiss}=\"${modalString}\"]`;\nconst modalStaticClass = `${modalString}-static`;\n\nconst modalDefaults = {\n  backdrop: true, // boolean|string\n  keyboard: true, // boolean\n};\n\n/**\n * Static method which returns an existing `Modal` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Modal>}\n */\nconst getModalInstance = (element) => getInstance(element, modalComponent);\n\n/**\n * A `Modal` initialization callback.\n * @type {BSN.InitCallback<Modal>}\n */\nconst modalInitCallback = (element) => new Modal(element);\n\n// MODAL CUSTOM EVENTS\n// ===================\nconst showModalEvent = OriginalEvent(`show.bs.${modalString}`);\nconst shownModalEvent = OriginalEvent(`shown.bs.${modalString}`);\nconst hideModalEvent = OriginalEvent(`hide.bs.${modalString}`);\nconst hiddenModalEvent = OriginalEvent(`hidden.bs.${modalString}`);\n\n// MODAL PRIVATE METHODS\n// =====================\n/**\n * Applies special style for the `<body>` and fixed elements\n * when a modal instance is shown to the user.\n *\n * @param {Modal} self the `Modal` instance\n */\nfunction setModalScrollbar(self) {\n  const { element } = self;\n  const scrollbarWidth = measureScrollbar(element);\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  const { clientHeight: modalHeight, scrollHeight: modalScrollHeight } = element;\n  const modalOverflow = modalHeight !== modalScrollHeight;\n\n  /* istanbul ignore else */\n  if (!modalOverflow && scrollbarWidth) {\n    const pad = !isRTL(element) ? 'paddingRight' : /* istanbul ignore next */'paddingLeft';\n    const padStyle = {};\n    padStyle[pad] = `${scrollbarWidth}px`;\n    setElementStyle(element, padStyle);\n  }\n  setScrollbar(element, (modalOverflow || clientHeight !== scrollHeight));\n}\n\n/**\n * Toggles on/off the listeners of events that close the modal.\n *\n * @param {Modal} self the `Modal` instance\n * @param {boolean=} add when `true`, event listeners are added\n */\nfunction toggleModalDismiss(self, add) {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n  action(element, mouseclickEvent, modalDismissHandler);\n  action(getWindow(element), resizeEvent, self.update, passiveHandler);\n  action(getDocument(element), keydownEvent, modalKeyHandler);\n}\n\n/**\n * Toggles on/off the `click` event listener of the `Modal` instance.\n * @param {Modal} self the `Modal` instance\n * @param {boolean=} add when `true`, event listener is added\n */\nfunction toggleModalHandler(self, add) {\n  const action = add ? addListener : removeListener;\n  const { triggers } = self;\n\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach((btn) => action(btn, mouseclickEvent, modalClickHandler));\n  }\n}\n\n/**\n * Executes after a modal is hidden to the user.\n * @param {Modal} self the `Modal` instance\n * @param {Function} callback the `Modal` instance\n */\nfunction afterModalHide(self, callback) {\n  const { triggers, element, relatedTarget } = self;\n  removeOverlay(element);\n  setElementStyle(element, { paddingRight: '', display: '' });\n  toggleModalDismiss(self);\n\n  const focusElement = showModalEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (focusElement) focus(focusElement);\n\n  /* istanbul ignore else */\n  if (callback) callback();\n\n  hiddenModalEvent.relatedTarget = relatedTarget;\n  dispatchEvent(element, hiddenModalEvent);\n}\n\n/**\n * Executes after a modal is shown to the user.\n * @param {Modal} self the `Modal` instance\n */\nfunction afterModalShow(self) {\n  const { element, relatedTarget } = self;\n  focus(element);\n  toggleModalDismiss(self, true);\n\n  shownModalEvent.relatedTarget = relatedTarget;\n  dispatchEvent(element, shownModalEvent);\n}\n\n/**\n * Executes before a modal is shown to the user.\n * @param {Modal} self the `Modal` instance\n */\nfunction beforeModalShow(self) {\n  const { element, hasFade } = self;\n  setElementStyle(element, { display: 'block' });\n\n  setModalScrollbar(self);\n  /* istanbul ignore else */\n  if (!getCurrentOpen(element)) {\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, showClass);\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n\n  if (hasFade) emulateTransitionEnd(element, () => afterModalShow(self));\n  else afterModalShow(self);\n}\n\n/**\n * Executes before a modal is hidden to the user.\n * @param {Modal} self the `Modal` instance\n * @param {Function=} callback when `true` skip animation\n */\nfunction beforeModalHide(self, callback) {\n  const {\n    element, options, hasFade,\n  } = self;\n\n  // callback can also be the transitionEvent object, we wanna make sure it's not\n  // call is not forced and overlay is visible\n  if (options.backdrop && !callback && hasFade && hasClass(overlay, showClass)\n    && !getCurrentOpen(element)) { // AND no modal is visible\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => afterModalHide(self));\n  } else {\n    afterModalHide(self, callback);\n  }\n}\n\n// MODAL EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for modal.\n * @param {MouseEvent} e the `Event` object\n */\nfunction modalClickHandler(e) {\n  const { target } = e;\n\n  const trigger = target && closest(target, modalToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getModalInstance(element);\n\n  /* istanbul ignore else */\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n  self.relatedTarget = trigger;\n  self.toggle();\n}\n\n/**\n * Handles the `keydown` event listener for modal\n * to hide the modal when user type the `ESC` key.\n *\n * @param {KeyboardEvent} e the `Event` object\n */\nfunction modalKeyHandler({ code, target }) {\n  const element = querySelector(modalActiveSelector, getDocument(target));\n  const self = element && getModalInstance(element);\n\n  const { options } = self;\n  /* istanbul ignore else */\n  if (options.keyboard && code === keyEscape // the keyboard option is enabled and the key is 27\n    && hasClass(element, showClass)) { // the modal is not visible\n    self.relatedTarget = null;\n    self.hide();\n  }\n}\n\n/**\n * Handles the `click` event listeners that hide the modal.\n *\n * @this {HTMLElement}\n * @param {MouseEvent} e the `Event` object\n */\nfunction modalDismissHandler(e) {\n  const element = this;\n  const self = getModalInstance(element);\n\n  // this timer is needed\n  /* istanbul ignore next: must have a filter */\n  if (!self || Timer.get(element)) return;\n\n  const { options, isStatic, modalDialog } = self;\n  const { backdrop } = options;\n  const { target } = e;\n\n  const selectedText = getDocument(element).getSelection().toString().length;\n  const targetInsideDialog = modalDialog.contains(target);\n  const dismiss = target && closest(target, modalDismissSelector);\n\n  /* istanbul ignore else */\n  if (isStatic && !targetInsideDialog) {\n    Timer.set(element, () => {\n      addClass(element, modalStaticClass);\n      emulateTransitionEnd(modalDialog, () => staticTransitionEnd(self));\n    }, 17);\n  } else if (dismiss || (!selectedText && !isStatic && !targetInsideDialog && backdrop)) {\n    self.relatedTarget = dismiss || null;\n    self.hide();\n    e.preventDefault();\n  }\n}\n\n/**\n * Handles the `transitionend` event listeners for `Modal`.\n *\n * @param {Modal} self the `Modal` instance\n */\nfunction staticTransitionEnd(self) {\n  const { element, modalDialog } = self;\n  const duration = getElementTransitionDuration(modalDialog) + 17;\n  removeClass(element, modalStaticClass);\n  // user must wait for zoom out transition\n  Timer.set(element, () => Timer.clear(element), duration);\n}\n\n// MODAL DEFINITION\n// ================\n/** Returns a new `Modal` instance. */\nclass Modal extends BaseComponent {\n  /**\n   * @param {HTMLElement | string} target usually the `.modal` element\n   * @param {BSN.Options.Modal=} config instance options\n   */\n  constructor(target, config) {\n    super(target, config);\n\n    // bind\n    const self = this;\n\n    // the modal\n    const { element } = self;\n\n    // the modal-dialog\n    /** @type {(HTMLElement)} */\n    self.modalDialog = querySelector(`.${modalString}-dialog`, element);\n\n    // modal can have multiple triggering elements\n    /** @type {HTMLElement[]} */\n    self.triggers = [...querySelectorAll(modalToggleSelector, getDocument(element))]\n      .filter((btn) => getTargetElement(btn) === element);\n\n    // additional internals\n    /** @type {boolean} */\n    self.isStatic = self.options.backdrop === 'static';\n    /** @type {boolean} */\n    self.hasFade = hasClass(element, fadeClass);\n    /** @type {HTMLElement?} */\n    self.relatedTarget = null;\n    /** @type {HTMLBodyElement | HTMLElement} */\n    self.container = getElementContainer(element);\n\n    // attach event listeners\n    toggleModalHandler(self, true);\n\n    // bind\n    self.update = self.update.bind(self);\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() { return modalComponent; }\n  /**\n   * Returns component default options.\n   */\n  get defaults() { return modalDefaults; }\n  /* eslint-enable */\n\n  // MODAL PUBLIC METHODS\n  // ====================\n  /** Toggles the visibility of the modal. */\n  toggle() {\n    const self = this;\n    if (hasClass(self.element, showClass)) self.hide();\n    else self.show();\n  }\n\n  /** Shows the modal to the user. */\n  show() {\n    const self = this;\n    const {\n      element, options, hasFade, relatedTarget, container,\n    } = self;\n    const { backdrop } = options;\n    let overlayDelay = 0;\n\n    if (hasClass(element, showClass)) return;\n\n    showModalEvent.relatedTarget = relatedTarget || null;\n    dispatchEvent(element, showModalEvent);\n    if (showModalEvent.defaultPrevented) return;\n\n    // we elegantly hide any opened modal/offcanvas\n    const currentOpen = getCurrentOpen(element);\n    if (currentOpen && currentOpen !== element) {\n      const this1 = getModalInstance(currentOpen);\n      const that1 = this1\n        || /* istanbul ignore next */getInstance(currentOpen, 'Offcanvas');\n      that1.hide();\n    }\n\n    if (backdrop) {\n      if (!container.contains(overlay)) {\n        appendOverlay(container, hasFade, true);\n      } else {\n        toggleOverlayType(true);\n      }\n\n      overlayDelay = getElementTransitionDuration(overlay);\n\n      showOverlay();\n      setTimeout(() => beforeModalShow(self), overlayDelay);\n    } else {\n      beforeModalShow(self);\n      /* istanbul ignore else */\n      if (currentOpen && hasClass(overlay, showClass)) {\n        hideOverlay();\n      }\n    }\n  }\n\n  /**\n   * Hide the modal from the user.\n   * @param {Function=} callback when defined it will skip animation\n   */\n  hide(callback) {\n    const self = this;\n    const {\n      element, hasFade, relatedTarget,\n    } = self;\n\n    if (!hasClass(element, showClass)) return;\n\n    hideModalEvent.relatedTarget = relatedTarget || null;\n    dispatchEvent(element, hideModalEvent);\n    if (hideModalEvent.defaultPrevented) return;\n    removeClass(element, showClass);\n    setAttribute(element, ariaHidden, 'true');\n    removeAttribute(element, ariaModal);\n\n    // if (hasFade && callback) {\n    /* istanbul ignore else */\n    if (hasFade) {\n      emulateTransitionEnd(element, () => beforeModalHide(self, callback));\n    } else {\n      beforeModalHide(self, callback);\n    }\n  }\n\n  /**\n   * Updates the modal layout.\n   * @this {Modal} the modal instance\n   */\n  update() {\n    const self = this;\n    /* istanbul ignore else */\n    if (hasClass(self.element, showClass)) setModalScrollbar(self);\n  }\n\n  /** Removes the `Modal` component from target element. */\n  dispose() {\n    const self = this;\n    toggleModalHandler(self);\n    // use callback\n    self.hide(() => super.dispose());\n  }\n}\n\nObjectAssign(Modal, {\n  selector: modalSelector,\n  init: modalInitCallback,\n  getInstance: getModalInstance,\n});\n\n/** @type {string} */\nconst offcanvasComponent = 'Offcanvas';\n\n/* Native JavaScript for Bootstrap 5 | OffCanvas\n------------------------------------------------ */\n\n// OFFCANVAS PRIVATE GC\n// ====================\nconst offcanvasSelector = `.${offcanvasString}`;\nconst offcanvasToggleSelector = `[${dataBsToggle}=\"${offcanvasString}\"]`;\nconst offcanvasDismissSelector = `[${dataBsDismiss}=\"${offcanvasString}\"]`;\nconst offcanvasTogglingClass = `${offcanvasString}-toggling`;\n\nconst offcanvasDefaults = {\n  backdrop: true, // boolean\n  keyboard: true, // boolean\n  scroll: false, // boolean\n};\n\n/**\n * Static method which returns an existing `Offcanvas` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Offcanvas>}\n */\nconst getOffcanvasInstance = (element) => getInstance(element, offcanvasComponent);\n\n/**\n * An `Offcanvas` initialization callback.\n * @type {BSN.InitCallback<Offcanvas>}\n */\nconst offcanvasInitCallback = (element) => new Offcanvas(element);\n\n// OFFCANVAS CUSTOM EVENTS\n// =======================\nconst showOffcanvasEvent = OriginalEvent(`show.bs.${offcanvasString}`);\nconst shownOffcanvasEvent = OriginalEvent(`shown.bs.${offcanvasString}`);\nconst hideOffcanvasEvent = OriginalEvent(`hide.bs.${offcanvasString}`);\nconst hiddenOffcanvasEvent = OriginalEvent(`hidden.bs.${offcanvasString}`);\n\n// OFFCANVAS PRIVATE METHODS\n// =========================\n/**\n * Sets additional style for the `<body>` and other elements\n * when showing an offcanvas to the user.\n *\n * @param {Offcanvas} self the `Offcanvas` instance\n */\nfunction setOffCanvasScrollbar(self) {\n  const { element } = self;\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  setScrollbar(element, clientHeight !== scrollHeight);\n}\n\n/**\n * Toggles on/off the `click` event listeners.\n *\n * @param {Offcanvas} self the `Offcanvas` instance\n * @param {boolean=} add when *true*, listeners are added\n */\nfunction toggleOffcanvasEvents(self, add) {\n  const action = add ? addListener : removeListener;\n  self.triggers.forEach((btn) => action(btn, mouseclickEvent, offcanvasTriggerHandler));\n}\n\n/**\n * Toggles on/off the listeners of the events that close the offcanvas.\n *\n * @param {Offcanvas} self the `Offcanvas` instance\n * @param {boolean=} add when *true* listeners are added\n */\nfunction toggleOffCanvasDismiss(self, add) {\n  const action = add ? addListener : removeListener;\n  const doc = getDocument(self.element);\n  action(doc, keydownEvent, offcanvasKeyDismissHandler);\n  action(doc, mouseclickEvent, offcanvasDismissHandler);\n}\n\n/**\n * Executes before showing the offcanvas.\n *\n * @param {Offcanvas} self the `Offcanvas` instance\n */\nfunction beforeOffcanvasShow(self) {\n  const { element, options } = self;\n\n  /* istanbul ignore else */\n  if (!options.scroll) {\n    setOffCanvasScrollbar(self);\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, offcanvasTogglingClass);\n  addClass(element, showClass);\n  setElementStyle(element, { visibility: 'visible' });\n\n  emulateTransitionEnd(element, () => showOffcanvasComplete(self));\n}\n\n/**\n * Executes before hiding the offcanvas.\n *\n * @param {Offcanvas} self the `Offcanvas` instance\n * @param {Function=} callback the hide callback\n */\nfunction beforeOffcanvasHide(self, callback) {\n  const { element, options } = self;\n  const currentOpen = getCurrentOpen(element);\n\n  element.blur();\n\n  if (!currentOpen && options.backdrop && hasClass(overlay, showClass)) {\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => hideOffcanvasComplete(self, callback));\n  } else hideOffcanvasComplete(self, callback);\n}\n\n// OFFCANVAS EVENT HANDLERS\n// ========================\n/**\n * Handles the `click` event listeners.\n *\n * @this {HTMLElement}\n * @param {MouseEvent} e the `Event` object\n */\nfunction offcanvasTriggerHandler(e) {\n  const trigger = closest(this, offcanvasToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    self.relatedTarget = trigger;\n    self.toggle();\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') {\n      e.preventDefault();\n    }\n  }\n}\n\n/**\n * Handles the event listeners that close the offcanvas.\n *\n * @param {MouseEvent} e the `Event` object\n */\nfunction offcanvasDismissHandler(e) {\n  const { target } = e;\n  const element = querySelector(offcanvasActiveSelector, getDocument(target));\n  const offCanvasDismiss = querySelector(offcanvasDismissSelector, element);\n  const self = getOffcanvasInstance(element);\n\n  /* istanbul ignore next: must have a filter */\n  if (!self) return;\n\n  const { options, triggers } = self;\n  const { backdrop } = options;\n  const trigger = closest(target, offcanvasToggleSelector);\n  const selection = getDocument(element).getSelection();\n\n  if (overlay.contains(target) && backdrop === 'static') return;\n\n  /* istanbul ignore else */\n  if (!(selection && selection.toString().length)\n    && ((!element.contains(target) && backdrop\n    && /* istanbul ignore next */(!trigger || triggers.includes(target)))\n    || (offCanvasDismiss && offCanvasDismiss.contains(target)))) {\n    self.relatedTarget = offCanvasDismiss && offCanvasDismiss.contains(target)\n      ? offCanvasDismiss : null;\n    self.hide();\n  }\n\n  /* istanbul ignore next */\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n}\n\n/**\n * Handles the `keydown` event listener for offcanvas\n * to hide it when user type the `ESC` key.\n *\n * @param {KeyboardEvent} e the `Event` object\n */\nfunction offcanvasKeyDismissHandler({ code, target }) {\n  const element = querySelector(offcanvasActiveSelector, getDocument(target));\n\n  const self = getOffcanvasInstance(element);\n\n  /* istanbul ignore next: must filter */\n  if (!self) return;\n\n  /* istanbul ignore else */\n  if (self.options.keyboard && code === keyEscape) {\n    self.relatedTarget = null;\n    self.hide();\n  }\n}\n\n/**\n * Handles the `transitionend` when showing the offcanvas.\n *\n * @param {Offcanvas} self the `Offcanvas` instance\n */\nfunction showOffcanvasComplete(self) {\n  const { element } = self;\n  removeClass(element, offcanvasTogglingClass);\n\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n  setAttribute(element, 'role', 'dialog');\n\n  dispatchEvent(element, shownOffcanvasEvent);\n\n  toggleOffCanvasDismiss(self, true);\n  focus(element);\n}\n\n/**\n * Handles the `transitionend` when hiding the offcanvas.\n *\n * @param {Offcanvas} self the `Offcanvas` instance\n * @param {Function} callback the hide callback\n */\nfunction hideOffcanvasComplete(self, callback) {\n  const { element, triggers } = self;\n\n  setAttribute(element, ariaHidden, 'true');\n  removeAttribute(element, ariaModal);\n  removeAttribute(element, 'role');\n  setElementStyle(element, { visibility: '' });\n\n  const visibleTrigger = showOffcanvasEvent.relatedTarget || triggers.find((x) => isVisible(x));\n  /* istanbul ignore else */\n  if (visibleTrigger) focus(visibleTrigger);\n\n  removeOverlay(element);\n\n  dispatchEvent(element, hiddenOffcanvasEvent);\n  removeClass(element, offcanvasTogglingClass);\n\n  // must check for open instances\n  if (!getCurrentOpen(element)) {\n    toggleOffCanvasDismiss(self);\n  }\n  // callback\n  if (callback) callback();\n}\n\n// OFFCANVAS DEFINITION\n// ====================\n/** Returns a new `Offcanvas` instance. */\nclass Offcanvas extends BaseComponent {\n  /**\n   * @param {HTMLElement | string} target usually an `.offcanvas` element\n   * @param {BSN.Options.Offcanvas=} config instance options\n   */\n  constructor(target, config) {\n    super(target, config);\n    const self = this;\n\n    // instance element\n    const { element } = self;\n\n    // all the triggering buttons\n    /** @type {HTMLElement[]} */\n    self.triggers = [...querySelectorAll(offcanvasToggleSelector, getDocument(element))]\n      .filter((btn) => getTargetElement(btn) === element);\n\n    // additional instance property\n    /** @type {HTMLBodyElement | HTMLElement} */\n    self.container = getElementContainer(element);\n    /** @type {HTMLElement?} */\n    self.relatedTarget = null;\n\n    // attach event listeners\n    toggleOffcanvasEvents(self, true);\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() { return offcanvasComponent; }\n  /**\n   * Returns component default options.\n   */\n  get defaults() { return offcanvasDefaults; }\n  /* eslint-enable */\n\n  // OFFCANVAS PUBLIC METHODS\n  // ========================\n  /** Shows or hides the offcanvas from the user. */\n  toggle() {\n    const self = this;\n    if (hasClass(self.element, showClass)) self.hide();\n    else self.show();\n  }\n\n  /** Shows the offcanvas to the user. */\n  show() {\n    const self = this;\n    const {\n      element, options, container, relatedTarget,\n    } = self;\n    let overlayDelay = 0;\n\n    if (hasClass(element, showClass)) return;\n\n    showOffcanvasEvent.relatedTarget = relatedTarget;\n    shownOffcanvasEvent.relatedTarget = relatedTarget;\n    dispatchEvent(element, showOffcanvasEvent);\n    if (showOffcanvasEvent.defaultPrevented) return;\n\n    // we elegantly hide any opened modal/offcanvas\n    const currentOpen = getCurrentOpen(element);\n    if (currentOpen && currentOpen !== element) {\n      const this1 = getOffcanvasInstance(currentOpen);\n      const that1 = this1\n        || /* istanbul ignore next */getInstance(currentOpen, 'Modal');\n      that1.hide();\n    }\n\n    if (options.backdrop) {\n      if (!container.contains(overlay)) {\n        appendOverlay(container, true);\n      } else {\n        toggleOverlayType();\n      }\n\n      overlayDelay = getElementTransitionDuration(overlay);\n      showOverlay();\n\n      setTimeout(() => beforeOffcanvasShow(self), overlayDelay);\n    } else {\n      beforeOffcanvasShow(self);\n      /* istanbul ignore else */\n      if (currentOpen && hasClass(overlay, showClass)) {\n        hideOverlay();\n      }\n    }\n  }\n\n  /**\n   * Hides the offcanvas from the user.\n   * @param {Function=} callback when `true` it will skip animation\n   */\n  hide(callback) {\n    const self = this;\n    const { element, relatedTarget } = self;\n\n    if (!hasClass(element, showClass)) return;\n\n    hideOffcanvasEvent.relatedTarget = relatedTarget;\n    hiddenOffcanvasEvent.relatedTarget = relatedTarget;\n    dispatchEvent(element, hideOffcanvasEvent);\n    if (hideOffcanvasEvent.defaultPrevented) return;\n\n    addClass(element, offcanvasTogglingClass);\n    removeClass(element, showClass);\n\n    if (!callback) {\n      emulateTransitionEnd(element, () => beforeOffcanvasHide(self, callback));\n    } else beforeOffcanvasHide(self, callback);\n  }\n\n  /** Removes the `Offcanvas` from the target element. */\n  dispose() {\n    const self = this;\n    toggleOffcanvasEvents(self);\n    self.hide(() => super.dispose());\n  }\n}\n\nObjectAssign(Offcanvas, {\n  selector: offcanvasSelector,\n  init: offcanvasInitCallback,\n  getInstance: getOffcanvasInstance,\n});\n\n/** @type {string} */\nconst popoverString = 'popover';\n\n/** @type {string} */\nconst popoverComponent = 'Popover';\n\n/** @type {string} */\nconst tooltipString = 'tooltip';\n\n/**\n * Returns a template for Popover / Tooltip.\n *\n * @param {string} tipType the expected markup type\n * @returns {string} the template markup\n */\nfunction getTipTemplate(tipType) {\n  const isTooltip = tipType === tooltipString;\n  const bodyClass = isTooltip ? `${tipType}-inner` : `${tipType}-body`;\n  const header = !isTooltip ? `<h3 class=\"${tipType}-header\"></h3>` : '';\n  const arrow = `<div class=\"${tipType}-arrow\"></div>`;\n  const body = `<div class=\"${bodyClass}\"></div>`;\n  return `<div class=\"${tipType}\" role=\"${tooltipString}\">${header + arrow + body}</div>`;\n}\n\n/**\n * Checks if an element is an `<svg>` (or any type of SVG element),\n * `<img>` or `<video>`.\n *\n * *Tooltip* / *Popover* works different with media elements.\n * @param {any} element the target element\n * @returns {boolean} the query result\n */\n\nconst isMedia = (element) => (\n  element\n  && element.nodeType === 1\n  && ['SVG', 'Image', 'Video'].some((s) => element.constructor.name.includes(s))) || false;\n\n/**\n * Returns an `{x,y}` object with the target\n * `HTMLElement` / `Node` scroll position.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param {HTMLElement | Window} element target node / element\n * @returns {{x: number, y: number}} the scroll tuple\n */\nfunction getNodeScroll(element) {\n  const isWin = 'scrollX' in element;\n  const x = isWin ? element.scrollX : element.scrollLeft;\n  const y = isWin ? element.scrollY : element.scrollTop;\n\n  return { x, y };\n}\n\n/**\n * Checks if a target `HTMLElement` is affected by scale.\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param {HTMLElement} element target\n * @returns {boolean} the query result\n */\nfunction isScaledElement(element) {\n  if (!element || !isHTMLElement(element)) return false;\n  const { width, height } = getBoundingClientRect(element);\n  const { offsetWidth, offsetHeight } = element;\n  return Math.round(width) !== offsetWidth\n    || Math.round(height) !== offsetHeight;\n}\n\n/**\n * Returns the rect relative to an offset parent.\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param {HTMLElement} element target\n * @param {ParentNode | Window} offsetParent the container / offset parent\n * @param {{x: number, y: number}} scroll the offsetParent scroll position\n * @returns {SHORTY.OffsetRect}\n */\nfunction getRectRelativeToOffsetParent(element, offsetParent, scroll) {\n  const isParentAnElement = isHTMLElement(offsetParent);\n  const rect = getBoundingClientRect(element, isParentAnElement && isScaledElement(offsetParent));\n  const offsets = { x: 0, y: 0 };\n\n  /* istanbul ignore next */\n  if (isParentAnElement) {\n    const offsetRect = getBoundingClientRect(offsetParent, true);\n    offsets.x = offsetRect.x + offsetParent.clientLeft;\n    offsets.y = offsetRect.y + offsetParent.clientTop;\n  }\n\n  return {\n    x: rect.left + scroll.x - offsets.x,\n    y: rect.top + scroll.y - offsets.y,\n    width: rect.width,\n    height: rect.height,\n  };\n}\n\n/** @type {Record<string, string>} */\nconst tipClassPositions = {\n  top: 'top',\n  bottom: 'bottom',\n  left: 'start',\n  right: 'end',\n};\n\n/**\n * Style popovers and tooltips.\n * @param {BSN.Tooltip | BSN.Popover} self the `Popover` / `Tooltip` instance\n * @param {PointerEvent=} e event object\n */\nfunction styleTip(self, e) {\n  const tipClasses = /\\b(top|bottom|start|end)+/;\n  const {\n    element, tooltip, options, arrow, offsetParent,\n  } = self;\n  const tipPositions = { ...tipClassPositions };\n\n  const RTL = isRTL(element);\n  if (RTL) {\n    tipPositions.left = 'end';\n    tipPositions.right = 'start';\n  }\n\n  // reset tooltip style (top: 0, left: 0 works best)\n  setElementStyle(tooltip, {\n    // top: '0px', left: '0px', right: '', bottom: '',\n    top: '', left: '', right: '', bottom: '',\n  });\n  const isPopover = self.name === popoverComponent;\n  const {\n    offsetWidth: tipWidth, offsetHeight: tipHeight,\n  } = tooltip;\n  const {\n    clientWidth: htmlcw, clientHeight: htmlch,\n  } = getDocumentElement(element);\n  const { container } = options;\n  let { placement } = options;\n  const {\n    left: parentLeft, right: parentRight, top: parentTop,\n  } = getBoundingClientRect(container, true);\n  const {\n    clientWidth: parentCWidth, offsetWidth: parentOWidth,\n  } = container;\n  const scrollbarWidth = Math.abs(parentCWidth - parentOWidth);\n  // const tipAbsolute = getElementStyle(tooltip, 'position') === 'absolute';\n  const parentPosition = getElementStyle(container, 'position');\n  // const absoluteParent = parentPosition === 'absolute';\n  const fixedParent = parentPosition === 'fixed';\n  const staticParent = parentPosition === 'static';\n  const stickyParent = parentPosition === 'sticky';\n  const isSticky = stickyParent && parentTop === parseFloat(getElementStyle(container, 'top'));\n  // const absoluteTarget = getElementStyle(element, 'position') === 'absolute';\n  // const stickyFixedParent = ['sticky', 'fixed'].includes(parentPosition);\n  const leftBoundry = RTL && fixedParent ? scrollbarWidth : 0;\n  const rightBoundry = fixedParent ? parentCWidth + parentLeft + (RTL ? scrollbarWidth : 0)\n    : parentCWidth + parentLeft + (htmlcw - parentRight) - 1;\n  const {\n    width: elemWidth,\n    height: elemHeight,\n    left: elemRectLeft,\n    right: elemRectRight,\n    top: elemRectTop,\n  } = getBoundingClientRect(element, true);\n\n  const scroll = getNodeScroll(offsetParent);\n  const { x, y } = getRectRelativeToOffsetParent(element, offsetParent, scroll);\n  // reset arrow style\n  setElementStyle(arrow, {\n    top: '', left: '', right: '', bottom: '',\n  });\n  let topPosition;\n  let leftPosition;\n  let rightPosition;\n  let arrowTop;\n  let arrowLeft;\n  let arrowRight;\n\n  const arrowWidth = arrow.offsetWidth || 0;\n  const arrowHeight = arrow.offsetHeight || 0;\n  const arrowAdjust = arrowWidth / 2;\n\n  // check placement\n  let topExceed = elemRectTop - tipHeight - arrowHeight < 0;\n  let bottomExceed = elemRectTop + tipHeight + elemHeight\n    + arrowHeight >= htmlch;\n  let leftExceed = elemRectLeft - tipWidth - arrowWidth < leftBoundry;\n  let rightExceed = elemRectLeft + tipWidth + elemWidth\n    + arrowWidth >= rightBoundry;\n\n  const horizontal = ['left', 'right'];\n  const vertical = ['top', 'bottom'];\n\n  topExceed = horizontal.includes(placement)\n    ? elemRectTop + elemHeight / 2 - tipHeight / 2 - arrowHeight < 0\n    : topExceed;\n  bottomExceed = horizontal.includes(placement)\n    ? elemRectTop + tipHeight / 2 + elemHeight / 2 + arrowHeight >= htmlch\n    : bottomExceed;\n  leftExceed = vertical.includes(placement)\n    ? elemRectLeft + elemWidth / 2 - tipWidth / 2 < leftBoundry\n    : leftExceed;\n  rightExceed = vertical.includes(placement)\n    ? elemRectLeft + tipWidth / 2 + elemWidth / 2 >= rightBoundry\n    : rightExceed;\n\n  // first remove side positions if both left and right limits are exceeded\n  // we usually fall back to top|bottom\n  placement = (horizontal.includes(placement)) && leftExceed && rightExceed ? 'top' : placement;\n  // second, recompute placement\n  placement = placement === 'top' && topExceed ? 'bottom' : placement;\n  placement = placement === 'bottom' && bottomExceed ? 'top' : placement;\n  placement = placement === 'left' && leftExceed ? 'right' : placement;\n  placement = placement === 'right' && rightExceed ? 'left' : placement;\n\n  // update tooltip/popover class\n  if (!tooltip.className.includes(placement)) {\n    tooltip.className = tooltip.className.replace(tipClasses, tipPositions[placement]);\n  }\n\n  // compute tooltip / popover coordinates\n  /* istanbul ignore else */\n  if (horizontal.includes(placement)) { // secondary|side positions\n    if (placement === 'left') { // LEFT\n      leftPosition = x - tipWidth - (isPopover ? arrowWidth : 0);\n    } else { // RIGHT\n      leftPosition = x + elemWidth + (isPopover ? arrowWidth : 0);\n    }\n\n    // adjust top and arrow\n    if (topExceed) {\n      topPosition = y;\n      topPosition += (isSticky ? -parentTop - scroll.y : 0);\n\n      arrowTop = elemHeight / 2 - arrowWidth;\n    } else if (bottomExceed) {\n      topPosition = y - tipHeight + elemHeight;\n      topPosition += (isSticky ? -parentTop - scroll.y : 0);\n\n      arrowTop = tipHeight - elemHeight / 2 - arrowWidth;\n    } else {\n      topPosition = y - tipHeight / 2 + elemHeight / 2;\n      topPosition += (isSticky ? -parentTop - scroll.y : 0);\n\n      arrowTop = tipHeight / 2 - arrowHeight / 2;\n    }\n  } else if (vertical.includes(placement)) {\n    if (e && isMedia(element)) {\n      let eX = 0;\n      let eY = 0;\n      if (staticParent) {\n        eX = e.pageX;\n        eY = e.pageY;\n      } else { // fixedParent | stickyParent\n        eX = e.clientX - parentLeft + (fixedParent ? scroll.x : 0);\n        eY = e.clientY - parentTop + (fixedParent ? scroll.y : 0);\n      }\n\n      // some weird RTL bug\n      eX -= RTL && fixedParent && scrollbarWidth ? scrollbarWidth : 0;\n\n      if (placement === 'top') {\n        topPosition = eY - tipHeight - arrowWidth;\n      } else {\n        topPosition = eY + arrowWidth;\n      }\n\n      // adjust (left | right) and also the arrow\n      if (e.clientX - tipWidth / 2 < leftBoundry) {\n        leftPosition = 0;\n        arrowLeft = eX - arrowAdjust;\n      } else if (e.clientX + tipWidth / 2 > rightBoundry) {\n        leftPosition = 'auto';\n        rightPosition = 0;\n        arrowRight = rightBoundry - eX - arrowAdjust;\n        arrowRight -= fixedParent ? parentLeft + (RTL ? scrollbarWidth : 0) : 0;\n\n      // normal top/bottom\n      } else {\n        leftPosition = eX - tipWidth / 2;\n        arrowLeft = tipWidth / 2 - arrowAdjust;\n      }\n    } else {\n      if (placement === 'top') {\n        topPosition = y - tipHeight - (isPopover ? arrowHeight : 0);\n      } else { // BOTTOM\n        topPosition = y + elemHeight + (isPopover ? arrowHeight : 0);\n      }\n\n      // adjust left | right and also the arrow\n      if (leftExceed) {\n        leftPosition = 0;\n        arrowLeft = x + elemWidth / 2 - arrowAdjust;\n      } else if (rightExceed) {\n        leftPosition = 'auto';\n        rightPosition = 0;\n        arrowRight = elemWidth / 2 + rightBoundry - elemRectRight - arrowAdjust;\n      } else {\n        leftPosition = x - tipWidth / 2 + elemWidth / 2;\n        arrowLeft = tipWidth / 2 - arrowAdjust;\n      }\n    }\n  }\n\n  // apply style to tooltip/popover\n  setElementStyle(tooltip, {\n    top: `${topPosition}px`,\n    left: leftPosition === 'auto' ? leftPosition : `${leftPosition}px`,\n    right: rightPosition !== undefined ? `${rightPosition}px` : '',\n  });\n\n  // update arrow placement\n  /* istanbul ignore else */\n  if (isHTMLElement(arrow)) {\n    if (arrowTop !== undefined) {\n      arrow.style.top = `${arrowTop}px`;\n    }\n    if (arrowLeft !== undefined) {\n      arrow.style.left = `${arrowLeft}px`;\n    } else if (arrowRight !== undefined) {\n      arrow.style.right = `${arrowRight}px`;\n    }\n  }\n}\n\nconst tooltipDefaults = {\n  /** @type {string} */\n  template: getTipTemplate(tooltipString),\n  /** @type {string?} */\n  title: null, // string\n  /** @type {string?} */\n  customClass: null, // string | null\n  /** @type {string} */\n  trigger: 'hover focus',\n  /** @type {string?} */\n  placement: 'top', // string\n  /** @type {((c:string)=>string)?} */\n  sanitizeFn: null, // function\n  /** @type {boolean} */\n  animation: true, // bool\n  /** @type {number} */\n  delay: 200, // number\n  /** @type {HTMLElement?} */\n  container: null,\n};\n\n/**\n * A global namespace for aria-describedby.\n * @type {string}\n */\nconst ariaDescribedBy = 'aria-describedby';\n\n/**\n * A global namespace for `mousedown` event.\n * @type {string}\n */\nconst mousedownEvent = 'mousedown';\n\n/**\n * A global namespace for `mousemove` event.\n * @type {string}\n */\nconst mousemoveEvent = 'mousemove';\n\n/**\n * A global namespace for `focusin` event.\n * @type {string}\n */\nconst focusinEvent = 'focusin';\n\n/**\n * A global namespace for `focusout` event.\n * @type {string}\n */\nconst focusoutEvent = 'focusout';\n\n/**\n * A global namespace for `hover` event.\n * @type {string}\n */\nconst mousehoverEvent = 'hover';\n\n/**\n * A global namespace for `touchstart` event.\n * @type {string}\n */\nconst touchstartEvent = 'touchstart';\n\nlet elementUID = 0;\nlet elementMapUID = 0;\nconst elementIDMap = new Map();\n\n/**\n * Returns a unique identifier for popover, tooltip, scrollspy.\n *\n * @param {HTMLElement} element target element\n * @param {string=} key predefined key\n * @returns {number} an existing or new unique ID\n */\nfunction getUID(element, key) {\n  let result = key ? elementUID : elementMapUID;\n\n  if (key) {\n    const elID = getUID(element);\n    const elMap = elementIDMap.get(elID) || new Map();\n    if (!elementIDMap.has(elID)) {\n      elementIDMap.set(elID, elMap);\n    }\n    if (!elMap.has(key)) {\n      elMap.set(key, result);\n      elementUID += 1;\n    } else result = elMap.get(key);\n  } else {\n    const elkey = element.id || element;\n\n    if (!elementIDMap.has(elkey)) {\n      elementIDMap.set(elkey, result);\n      elementMapUID += 1;\n    } else result = elementIDMap.get(elkey);\n  }\n  return result;\n}\n\n/**\n * Checks if an object is a `Function`.\n *\n * @param {any} fn the target object\n * @returns {boolean} the query result\n */\nconst isFunction = (fn) => (fn && fn.constructor.name === 'Function') || false;\n\nconst { userAgentData: uaDATA } = navigator;\n\n/**\n * A global namespace for `userAgentData` object.\n */\nconst userAgentData = uaDATA;\n\nconst { userAgent: userAgentString } = navigator;\n\n/**\n * A global namespace for `navigator.userAgent` string.\n */\nconst userAgent = userAgentString;\n\nconst appleBrands = /(iPhone|iPod|iPad)/;\n\n/**\n * A global `boolean` for Apple browsers.\n * @type {boolean}\n */\nconst isApple = userAgentData ? userAgentData.brands.some((x) => appleBrands.test(x.brand))\n  : /* istanbul ignore next */appleBrands.test(userAgent);\n\n/**\n * Global namespace for `data-bs-title` attribute.\n */\nconst dataOriginalTitle = 'data-original-title';\n\n/** @type {string} */\nconst tooltipComponent = 'Tooltip';\n\n/**\n * Checks if an object is a `NodeList`.\n * => equivalent to `object instanceof NodeList`\n *\n * @param {any} object the target object\n * @returns {boolean} the query result\n */\nconst isNodeList = (object) => (object && object.constructor.name === 'NodeList') || false;\n\n/**\n * Shortcut for `typeof SOMETHING === \"string\"`.\n *\n * @param  {any} str input value\n * @returns {boolean} the query result\n */\nconst isString = (str) => typeof str === 'string';\n\n/**\n * Shortcut for `Array.isArray()` static method.\n *\n * @param  {any} arr array-like iterable object\n * @returns {boolean} the query result\n */\nconst isArray = (arr) => Array.isArray(arr);\n\n/**\n * Append an existing `Element` to Popover / Tooltip component or HTML\n * markup string to be parsed & sanitized to be used as popover / tooltip content.\n *\n * @param {HTMLElement} element target\n * @param {Node | string} content the `Element` to append / string\n * @param {ReturnType<any>} sanitizeFn a function to sanitize string content\n */\nfunction setHtml(element, content, sanitizeFn) {\n  /* istanbul ignore next */\n  if (!isHTMLElement(element) || (isString(content) && !content.length)) return;\n\n  /* istanbul ignore else */\n  if (isString(content)) {\n    let dirty = content.trim(); // fixing #233\n    if (isFunction(sanitizeFn)) dirty = sanitizeFn(dirty);\n\n    const win = getWindow(element);\n    const domParser = new win.DOMParser();\n    const tempDocument = domParser.parseFromString(dirty, 'text/html');\n    element.append(...[...tempDocument.body.childNodes]);\n  } else if (isHTMLElement(content)) {\n    element.append(content);\n  } else if (isNodeList(content)\n    || (isArray(content) && content.every(isNode))) {\n    element.append(...[...content]);\n  }\n}\n\n/**\n * Creates a new tooltip / popover.\n *\n * @param {BSN.Popover | BSN.Tooltip} self the `Tooltip` / `Popover` instance\n */\nfunction createTip(self) {\n  const { id, element, options } = self;\n  const {\n    animation, customClass, sanitizeFn, placement, dismissible,\n    title, content, template, btnClose,\n  } = options;\n  const isTooltip = self.name === tooltipComponent;\n  const tipString = isTooltip ? tooltipString : popoverString;\n  const tipPositions = { ...tipClassPositions };\n  let titleParts = [];\n  let contentParts = [];\n\n  if (isRTL(element)) {\n    tipPositions.left = 'end';\n    tipPositions.right = 'start';\n  }\n\n  // set initial popover class\n  const placementClass = `bs-${tipString}-${tipPositions[placement]}`;\n\n  // load template\n  /** @type {HTMLElement?} */\n  let tooltipTemplate;\n  if (isHTMLElement(template)) {\n    tooltipTemplate = template;\n  } else {\n    const htmlMarkup = createElement('div');\n    setHtml(htmlMarkup, template, sanitizeFn);\n    tooltipTemplate = htmlMarkup.firstChild;\n  }\n\n  // set popover markup\n  self.tooltip = isHTMLElement(tooltipTemplate) && tooltipTemplate.cloneNode(true);\n\n  const { tooltip } = self;\n\n  // set id and role attributes\n  setAttribute(tooltip, 'id', id);\n  setAttribute(tooltip, 'role', tooltipString);\n\n  const bodyClass = isTooltip ? `${tooltipString}-inner` : `${popoverString}-body`;\n  const tooltipHeader = isTooltip ? null : querySelector(`.${popoverString}-header`, tooltip);\n  const tooltipBody = querySelector(`.${bodyClass}`, tooltip);\n\n  // set arrow and enable access for styleTip\n  self.arrow = querySelector(`.${tipString}-arrow`, tooltip);\n  const { arrow } = self;\n\n  if (isHTMLElement(title)) titleParts = [title.cloneNode(true)];\n  else {\n    const tempTitle = createElement('div');\n    setHtml(tempTitle, title, sanitizeFn);\n    titleParts = [...[...tempTitle.childNodes]];\n  }\n\n  if (isHTMLElement(content)) contentParts = [content.cloneNode(true)];\n  else {\n    const tempContent = createElement('div');\n    setHtml(tempContent, content, sanitizeFn);\n    contentParts = [...[...tempContent.childNodes]];\n  }\n\n  // set dismissible button\n  if (dismissible) {\n    if (title) {\n      if (isHTMLElement(btnClose)) titleParts = [...titleParts, btnClose.cloneNode(true)];\n      else {\n        const tempBtn = createElement('div');\n        setHtml(tempBtn, btnClose, sanitizeFn);\n        titleParts = [...titleParts, tempBtn.firstChild];\n      }\n    } else {\n      /* istanbul ignore else */\n      if (tooltipHeader) tooltipHeader.remove();\n      if (isHTMLElement(btnClose)) contentParts = [...contentParts, btnClose.cloneNode(true)];\n      else {\n        const tempBtn = createElement('div');\n        setHtml(tempBtn, btnClose, sanitizeFn);\n        contentParts = [...contentParts, tempBtn.firstChild];\n      }\n    }\n  }\n\n  // fill the template with content from options / data attributes\n  // also sanitize title && content\n  /* istanbul ignore else */\n  if (!isTooltip) {\n    /* istanbul ignore else */\n    if (title && tooltipHeader) setHtml(tooltipHeader, titleParts, sanitizeFn);\n    /* istanbul ignore else */\n    if (content && tooltipBody) setHtml(tooltipBody, contentParts, sanitizeFn);\n    // set btn\n    self.btn = querySelector('.btn-close', tooltip);\n  } else if (title && tooltipBody) setHtml(tooltipBody, title, sanitizeFn);\n\n  // Bootstrap 5.2.x\n  addClass(tooltip, 'position-absolute');\n  addClass(arrow, 'position-absolute');\n\n  // set popover animation and placement\n  /* istanbul ignore else */\n  if (!hasClass(tooltip, tipString)) addClass(tooltip, tipString);\n  /* istanbul ignore else */\n  if (animation && !hasClass(tooltip, fadeClass)) addClass(tooltip, fadeClass);\n  /* istanbul ignore else */\n  if (customClass && !hasClass(tooltip, customClass)) {\n    addClass(tooltip, customClass);\n  }\n  /* istanbul ignore else */\n  if (!hasClass(tooltip, placementClass)) addClass(tooltip, placementClass);\n}\n\n/**\n * @param {HTMLElement} tip target\n * @param {ParentNode} container parent container\n * @returns {boolean}\n */\nfunction isVisibleTip(tip, container) {\n  return isHTMLElement(tip) && container.contains(tip);\n}\n\n/* Native JavaScript for Bootstrap 5 | Tooltip\n---------------------------------------------- */\n\n// TOOLTIP PRIVATE GC\n// ==================\nconst tooltipSelector = `[${dataBsToggle}=\"${tooltipString}\"],[data-tip=\"${tooltipString}\"]`;\nconst titleAttr = 'title';\n\n/**\n * Static method which returns an existing `Tooltip` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Tooltip>}\n */\nlet getTooltipInstance = (element) => getInstance(element, tooltipComponent);\n\n/**\n * A `Tooltip` initialization callback.\n * @type {BSN.InitCallback<Tooltip>}\n */\nconst tooltipInitCallback = (element) => new Tooltip(element);\n\n// TOOLTIP PRIVATE METHODS\n// =======================\n/**\n * Removes the tooltip from the DOM.\n *\n * @param {Tooltip} self the `Tooltip` instance\n */\nfunction removeTooltip(self) {\n  const { element, tooltip } = self;\n  removeAttribute(element, ariaDescribedBy);\n  tooltip.remove();\n}\n\n/**\n * Executes after the instance has been disposed.\n *\n * @param {Tooltip} self the `Tooltip` instance\n * @param {Function=} callback the parent dispose callback\n */\nfunction disposeTooltipComplete(self, callback) {\n  const { element } = self;\n  toggleTooltipHandlers(self);\n\n  /* istanbul ignore else */\n  if (hasAttribute(element, dataOriginalTitle) && self.name === tooltipComponent) {\n    toggleTooltipTitle(self);\n  }\n  /* istanbul ignore else */\n  if (callback) callback();\n}\n\n/**\n * Toggles on/off the special `Tooltip` event listeners.\n *\n * @param {Tooltip} self the `Tooltip` instance\n * @param {boolean=} add when `true`, event listeners are added\n */\nfunction toggleTooltipAction(self, add) {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n\n  action(getDocument(element), touchstartEvent, self.handleTouch, passiveHandler);\n\n  /* istanbul ignore else */\n  if (!isMedia(element)) {\n    [scrollEvent, resizeEvent].forEach((ev) => {\n      action(getWindow(element), ev, self.update, passiveHandler);\n    });\n  }\n}\n\n/**\n * Executes after the tooltip was shown to the user.\n *\n * @param {Tooltip} self the `Tooltip` instance\n */\nfunction tooltipShownAction(self) {\n  const { element } = self;\n  const shownTooltipEvent = OriginalEvent(`shown.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self, true);\n  dispatchEvent(element, shownTooltipEvent);\n  Timer.clear(element, 'in');\n}\n\n/**\n * Executes after the tooltip was hidden to the user.\n *\n * @param {Tooltip} self the `Tooltip` instance\n * @param {Function=} callback the dispose callback\n */\nfunction tooltipHiddenAction(self, callback) {\n  const { element } = self;\n  const hiddenTooltipEvent = OriginalEvent(`hidden.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self);\n  removeTooltip(self);\n  dispatchEvent(element, hiddenTooltipEvent);\n  if (isFunction(callback)) callback();\n  Timer.clear(element, 'out');\n}\n\n/**\n * Toggles on/off the `Tooltip` event listeners.\n *\n * @param {Tooltip} self the `Tooltip` instance\n * @param {boolean=} add when `true`, event listeners are added\n */\nfunction toggleTooltipHandlers(self, add) {\n  const action = add ? addListener : removeListener;\n  // btn is only for dismissible popover\n  const { element, options, btn } = self;\n  const { trigger, dismissible } = options;\n\n  if (trigger.includes('manual')) return;\n\n  self.enabled = !!add;\n\n  /** @type {string[]} */\n  const triggerOptions = trigger.split(' ');\n  const elemIsMedia = isMedia(element);\n\n  if (elemIsMedia) {\n    action(element, mousemoveEvent, self.update, passiveHandler);\n  }\n\n  triggerOptions.forEach((tr) => {\n    /* istanbul ignore else */\n    if (elemIsMedia || tr === mousehoverEvent) {\n      action(element, mousedownEvent, self.show);\n      action(element, mouseenterEvent, self.show);\n\n      /* istanbul ignore else */\n      if (dismissible && btn) {\n        action(btn, mouseclickEvent, self.hide);\n      } else {\n        action(element, mouseleaveEvent, self.hide);\n        action(getDocument(element), touchstartEvent, self.handleTouch, passiveHandler);\n      }\n    } else if (tr === mouseclickEvent) {\n      action(element, tr, (!dismissible ? self.toggle : self.show));\n    } else if (tr === focusEvent) {\n      action(element, focusinEvent, self.show);\n      /* istanbul ignore else */\n      if (!dismissible) action(element, focusoutEvent, self.hide);\n      /* istanbul ignore else */\n      if (isApple) {\n        action(element, mouseclickEvent, () => focus(element));\n      }\n    }\n  });\n}\n\n/**\n * Toggles on/off the `Tooltip` event listeners that hide/update the tooltip.\n *\n * @param {Tooltip} self the `Tooltip` instance\n * @param {boolean=} add when `true`, event listeners are added\n */\nfunction toggleTooltipOpenHandlers(self, add) {\n  const action = add ? addListener : removeListener;\n  const { element, options, offsetParent } = self;\n  const { container } = options;\n  const { offsetHeight, scrollHeight } = container;\n  const parentModal = closest(element, `.${modalString}`);\n  const parentOffcanvas = closest(element, `.${offcanvasString}`);\n\n  /* istanbul ignore else */\n  if (!isMedia(element)) {\n    const win = getWindow(element);\n    const overflow = offsetHeight !== scrollHeight;\n    const scrollTarget = overflow || offsetParent !== win ? container : win;\n    action(win, resizeEvent, self.update, passiveHandler);\n    action(scrollTarget, scrollEvent, self.update, passiveHandler);\n  }\n\n  // dismiss tooltips inside modal / offcanvas\n  if (parentModal) action(parentModal, `hide.bs.${modalString}`, self.hide);\n  if (parentOffcanvas) action(parentOffcanvas, `hide.bs.${offcanvasString}`, self.hide);\n}\n\n/**\n * Toggles the `title` and `data-original-title` attributes.\n *\n * @param {Tooltip} self the `Tooltip` instance\n * @param {string=} content when `true`, event listeners are added\n */\nfunction toggleTooltipTitle(self, content) {\n  // [0 - add, 1 - remove] | [0 - remove, 1 - add]\n  const titleAtt = [dataOriginalTitle, titleAttr];\n  const { element } = self;\n\n  setAttribute(element, titleAtt[content ? 0 : 1],\n    (content || getAttribute(element, titleAtt[0])));\n  removeAttribute(element, titleAtt[content ? 1 : 0]);\n}\n\n// TOOLTIP DEFINITION\n// ==================\n/** Creates a new `Tooltip` instance. */\nclass Tooltip extends BaseComponent {\n  /**\n   * @param {HTMLElement | string} target the target element\n   * @param {BSN.Options.Tooltip=} config the instance options\n   */\n  constructor(target, config) {\n    super(target, config);\n\n    // bind\n    const self = this;\n    const { element } = self;\n    const isTooltip = self.name === tooltipComponent;\n    const tipString = isTooltip ? tooltipString : popoverString;\n    const tipComponent = isTooltip ? tooltipComponent : popoverComponent;\n\n    /* istanbul ignore next: this is to set Popover too */\n    getTooltipInstance = (elem) => getInstance(elem, tipComponent);\n\n    // additional properties\n    /** @type {any} */\n    self.tooltip = {};\n    if (!isTooltip) {\n      /** @type {any?} */\n      self.btn = null;\n    }\n    /** @type {any} */\n    self.arrow = {};\n    /** @type {any} */\n    self.offsetParent = {};\n    /** @type {boolean} */\n    self.enabled = true;\n    /** @type {string} Set unique ID for `aria-describedby`. */\n    self.id = `${tipString}-${getUID(element, tipString)}`;\n\n    // instance options\n    const { options } = self;\n\n    // invalidate\n    if ((!options.title && isTooltip) || (!isTooltip && !options.content)) {\n      // throw Error(`${this.name} Error: target has no content set.`);\n      return;\n    }\n\n    const container = querySelector(options.container, getDocument(element));\n    const idealContainer = getElementContainer(element);\n\n    // bypass container option when its position is static/relative\n    self.options.container = !container || (container\n      && ['static', 'relative'].includes(getElementStyle(container, 'position')))\n      ? idealContainer\n      : /* istanbul ignore next */container || getDocumentBody(element);\n\n    // reset default options\n    tooltipDefaults[titleAttr] = null;\n\n    // all functions bind\n    self.handleTouch = self.handleTouch.bind(self);\n    self.update = self.update.bind(self);\n    self.show = self.show.bind(self);\n    self.hide = self.hide.bind(self);\n    self.toggle = self.toggle.bind(self);\n\n    // set title attributes and add event listeners\n    /* istanbul ignore else */\n    if (hasAttribute(element, titleAttr) && isTooltip) {\n      toggleTooltipTitle(self, options.title);\n    }\n\n    // create tooltip here\n    createTip(self);\n\n    // attach events\n    toggleTooltipHandlers(self, true);\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() { return tooltipComponent; }\n  /**\n   * Returns component default options.\n   */\n  get defaults() { return tooltipDefaults; }\n  /* eslint-enable */\n\n  // TOOLTIP PUBLIC METHODS\n  // ======================\n  /**\n   * Shows the tooltip.\n   *\n   * @param {Event=} e the `Event` object\n   * @this {Tooltip}\n   */\n  show(e) {\n    const self = this;\n    const {\n      options, tooltip, element, id,\n    } = self;\n    const { container, animation } = options;\n    const outTimer = Timer.get(element, 'out');\n\n    Timer.clear(element, 'out');\n\n    if (tooltip && !outTimer && !isVisibleTip(tooltip, container)) {\n      Timer.set(element, () => {\n        const showTooltipEvent = OriginalEvent(`show.bs.${toLowerCase(self.name)}`);\n        dispatchEvent(element, showTooltipEvent);\n        if (showTooltipEvent.defaultPrevented) return;\n\n        // append to container\n        container.append(tooltip);\n        setAttribute(element, ariaDescribedBy, `#${id}`);\n        // set offsetParent\n        self.offsetParent = getElementContainer(tooltip, true);\n\n        self.update(e);\n        toggleTooltipOpenHandlers(self, true);\n\n        /* istanbul ignore else */\n        if (!hasClass(tooltip, showClass)) addClass(tooltip, showClass);\n        /* istanbul ignore else */\n        if (animation) emulateTransitionEnd(tooltip, () => tooltipShownAction(self));\n        else tooltipShownAction(self);\n      }, 17, 'in');\n    }\n  }\n\n  /**\n   * Hides the tooltip.\n   *\n   * @this {Tooltip} the Tooltip instance\n   * @param {Function=} callback the dispose callback\n   */\n  hide(callback) {\n    const self = this;\n    const { options, tooltip, element } = self;\n    const { container, animation, delay } = options;\n\n    Timer.clear(element, 'in');\n\n    /* istanbul ignore else */\n    if (tooltip && isVisibleTip(tooltip, container)) {\n      Timer.set(element, () => {\n        const hideTooltipEvent = OriginalEvent(`hide.bs.${toLowerCase(self.name)}`);\n        dispatchEvent(element, hideTooltipEvent);\n\n        if (hideTooltipEvent.defaultPrevented) return;\n\n        removeClass(tooltip, showClass);\n        toggleTooltipOpenHandlers(self);\n\n        /* istanbul ignore else */\n        if (animation) emulateTransitionEnd(tooltip, () => tooltipHiddenAction(self, callback));\n        else tooltipHiddenAction(self, callback);\n      }, delay + 17, 'out');\n    }\n  }\n\n  /**\n   * Updates the tooltip position.\n   *\n   * @param {Event=} e the `Event` object\n   * @this {Tooltip} the `Tooltip` instance\n   */\n  update(e) {\n    styleTip(this, e);\n  }\n\n  /**\n   * Toggles the tooltip visibility.\n   *\n   * @param {Event=} e the `Event` object\n   * @this {Tooltip} the instance\n   */\n  toggle(e) {\n    const self = this;\n    const { tooltip, options } = self;\n\n    if (!isVisibleTip(tooltip, options.container)) self.show(e);\n    else self.hide();\n  }\n\n  /** Enables the tooltip. */\n  enable() {\n    const self = this;\n    const { enabled } = self;\n    /* istanbul ignore else */\n    if (!enabled) {\n      toggleTooltipHandlers(self, true);\n      self.enabled = !enabled;\n    }\n  }\n\n  /** Disables the tooltip. */\n  disable() {\n    const self = this;\n    const {\n      tooltip, options, enabled,\n    } = self;\n    const { animation, container } = options;\n    /* istanbul ignore else */\n    if (enabled) {\n      if (isVisibleTip(tooltip, container) && animation) {\n        self.hide(() => toggleTooltipHandlers(self));\n      } else {\n        toggleTooltipHandlers(self);\n      }\n      self.enabled = !enabled;\n    }\n  }\n\n  /** Toggles the `disabled` property. */\n  toggleEnabled() {\n    const self = this;\n    if (!self.enabled) self.enable();\n    else self.disable();\n  }\n\n  /**\n   * Handles the `touchstart` event listener for `Tooltip`\n   * @this {Tooltip}\n   * @param {TouchEvent} e the `Event` object\n   */\n  handleTouch({ target }) {\n    const { tooltip, element } = this;\n\n    /* istanbul ignore next */\n    if (tooltip.contains(target) || target === element\n      || (target && element.contains(target))) ; else {\n      this.hide();\n    }\n  }\n\n  /** Removes the `Tooltip` from the target element. */\n  dispose() {\n    const self = this;\n    const { tooltip, options } = self;\n    const callback = () => disposeTooltipComplete(self, () => super.dispose());\n\n    if (options.animation && isVisibleTip(tooltip, options.container)) {\n      self.options.delay = 0; // reset delay\n      self.hide(callback);\n    } else {\n      callback();\n    }\n  }\n}\n\nObjectAssign(Tooltip, {\n  selector: tooltipSelector,\n  init: tooltipInitCallback,\n  getInstance: getTooltipInstance,\n  styleTip,\n});\n\n/* Native JavaScript for Bootstrap 5 | Popover\n---------------------------------------------- */\n\n// POPOVER PRIVATE GC\n// ==================\nconst popoverSelector = `[${dataBsToggle}=\"${popoverString}\"],[data-tip=\"${popoverString}\"]`;\n\nconst popoverDefaults = {\n  ...tooltipDefaults,\n  /** @type {string} */\n  template: getTipTemplate(popoverString),\n  /** @type {string} */\n  btnClose: '<button class=\"btn-close\" aria-label=\"Close\"></button>',\n  /** @type {boolean} */\n  dismissible: false,\n  /** @type {string?} */\n  content: null,\n};\n\n// POPOVER DEFINITION\n// ==================\n/** Returns a new `Popover` instance. */\nclass Popover extends Tooltip {\n  /* eslint-disable -- we want to specify Popover Options */\n  /**\n   * @param {HTMLElement | string} target the target element\n   * @param {BSN.Options.Popover=} config the instance options\n   */\n  constructor(target, config) {\n    super(target, config);\n  }\n  /**\n   * Returns component name string.\n   */ \n  get name() { return popoverComponent; }\n  /**\n   * Returns component default options.\n   */\n  get defaults() { return popoverDefaults; }\n  /* eslint-enable */\n\n  /* extend original `show()` */\n  show() {\n    super.show();\n    // btn only exists within dismissible popover\n    const { options, btn } = this;\n    /* istanbul ignore else */\n    if (options.dismissible && btn) setTimeout(() => focus(btn), 17);\n  }\n}\n\n/**\n * Static method which returns an existing `Popover` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Popover>}\n */\nconst getPopoverInstance = (element) => getInstance(element, popoverComponent);\n\n/**\n * A `Popover` initialization callback.\n * @type {BSN.InitCallback<Popover>}\n */\nconst popoverInitCallback = (element) => new Popover(element);\n\nObjectAssign(Popover, {\n  selector: popoverSelector,\n  init: popoverInitCallback,\n  getInstance: getPopoverInstance,\n  styleTip,\n});\n\n/**\n * Shortcut for `HTMLElement.getElementsByTagName` method. Some `Node` elements\n * like `ShadowRoot` do not support `getElementsByTagName`.\n *\n * @param {string} selector the tag name\n * @param {ParentNode=} parent optional Element to look into\n * @return {HTMLCollectionOf<HTMLElement>} the 'HTMLCollection'\n */\nfunction getElementsByTagName(selector, parent) {\n  const lookUp = isNode(parent) ? parent : getDocument();\n  return lookUp.getElementsByTagName(selector);\n}\n\n/** @type {string} */\nconst scrollspyString = 'scrollspy';\n\n/** @type {string} */\nconst scrollspyComponent = 'ScrollSpy';\n\n/* Native JavaScript for Bootstrap 5 | ScrollSpy\n------------------------------------------------ */\n\n// SCROLLSPY PRIVATE GC\n// ====================\nconst scrollspySelector = '[data-bs-spy=\"scroll\"]';\n\nconst scrollspyDefaults = {\n  offset: 10,\n  target: null,\n};\n\n/**\n * Static method which returns an existing `ScrollSpy` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<ScrollSpy>}\n */\nconst getScrollSpyInstance = (element) => getInstance(element, scrollspyComponent);\n\n/**\n * A `ScrollSpy` initialization callback.\n * @type {BSN.InitCallback<ScrollSpy>}\n */\nconst scrollspyInitCallback = (element) => new ScrollSpy(element);\n\n// SCROLLSPY CUSTOM EVENT\n// ======================\nconst activateScrollSpy = OriginalEvent(`activate.bs.${scrollspyString}`);\n\n// SCROLLSPY PRIVATE METHODS\n// =========================\n/**\n * Update the state of all items.\n * @param {ScrollSpy} self the `ScrollSpy` instance\n */\nfunction updateSpyTargets(self) {\n  const {\n    target, scrollTarget, options, itemsLength, scrollHeight, element,\n  } = self;\n  const { offset } = options;\n  const isWin = isWindow(scrollTarget);\n\n  const links = target && getElementsByTagName('A', target);\n  const scrollHEIGHT = scrollTarget && getScrollHeight(scrollTarget);\n\n  self.scrollTop = isWin ? scrollTarget.scrollY : scrollTarget.scrollTop;\n\n  // only update items/offsets once or with each mutation\n  /* istanbul ignore else */\n  if (links && (itemsLength !== links.length || scrollHEIGHT !== scrollHeight)) {\n    let href;\n    let targetItem;\n    let rect;\n\n    // reset arrays & update\n    self.items = [];\n    self.offsets = [];\n    self.scrollHeight = scrollHEIGHT;\n    self.maxScroll = self.scrollHeight - getOffsetHeight(self);\n\n    [...links].forEach((link) => {\n      href = getAttribute(link, 'href');\n      targetItem = href && href.charAt(0) === '#' && href.slice(-1) !== '#'\n        && querySelector(href, getDocument(element));\n\n      if (targetItem) {\n        self.items.push(link);\n        rect = getBoundingClientRect(targetItem);\n        self.offsets.push((isWin ? rect.top + self.scrollTop : targetItem.offsetTop) - offset);\n      }\n    });\n    self.itemsLength = self.items.length;\n  }\n}\n\n/**\n * Returns the `scrollHeight` property of the scrolling element.\n * @param {Node | Window} scrollTarget the `ScrollSpy` instance\n * @return {number} `scrollTarget` height\n */\nfunction getScrollHeight(scrollTarget) {\n  return isHTMLElement(scrollTarget)\n    ? scrollTarget.scrollHeight\n    : getDocumentElement(scrollTarget).scrollHeight;\n}\n\n/**\n * Returns the height property of the scrolling element.\n * @param {ScrollSpy} params the `ScrollSpy` instance\n * @returns {number}\n */\nfunction getOffsetHeight({ element, scrollTarget }) {\n  return (isWindow(scrollTarget))\n    ? scrollTarget.innerHeight\n    : getBoundingClientRect(element).height;\n}\n\n/**\n * Clear all items of the target.\n * @param {HTMLElement} target a single item\n */\nfunction clear(target) {\n  [...getElementsByTagName('A', target)].forEach((item) => {\n    if (hasClass(item, activeClass)) removeClass(item, activeClass);\n  });\n}\n\n/**\n * Activates a new item.\n * @param {ScrollSpy} self the `ScrollSpy` instance\n * @param {HTMLElement} item a single item\n */\nfunction activate(self, item) {\n  const { target, element } = self;\n  clear(target);\n  self.activeItem = item;\n  addClass(item, activeClass);\n\n  // activate all parents\n  const parents = [];\n  let parentItem = item;\n  while (parentItem !== getDocumentBody(element)) {\n    parentItem = parentItem.parentElement;\n    if (hasClass(parentItem, 'nav') || hasClass(parentItem, 'dropdown-menu')) parents.push(parentItem);\n  }\n\n  parents.forEach((menuItem) => {\n    /** @type {HTMLElement?} */\n    const parentLink = menuItem.previousElementSibling;\n\n    /* istanbul ignore else */\n    if (parentLink && !hasClass(parentLink, activeClass)) {\n      addClass(parentLink, activeClass);\n    }\n  });\n\n  // dispatch\n  activateScrollSpy.relatedTarget = item;\n  dispatchEvent(element, activateScrollSpy);\n}\n\n/**\n * Toggles on/off the component event listener.\n * @param {ScrollSpy} self the `ScrollSpy` instance\n * @param {boolean=} add when `true`, listener is added\n */\nfunction toggleSpyHandlers(self, add) {\n  const action = add ? addListener : removeListener;\n  action(self.scrollTarget, scrollEvent, self.refresh, passiveHandler);\n}\n\n// SCROLLSPY DEFINITION\n// ====================\n/** Returns a new `ScrollSpy` instance. */\nclass ScrollSpy extends BaseComponent {\n  /**\n   * @param {HTMLElement | string} target the target element\n   * @param {BSN.Options.ScrollSpy=} config the instance options\n   */\n  constructor(target, config) {\n    super(target, config);\n    // bind\n    const self = this;\n\n    // initialization element & options\n    const { element, options } = self;\n\n    // additional properties\n    /** @type {HTMLElement?} */\n    self.target = querySelector(options.target, getDocument(element));\n\n    // invalidate\n    if (!self.target) return;\n\n    // set initial state\n    /** @type {HTMLElement | Window} */\n    self.scrollTarget = element.clientHeight < element.scrollHeight\n      ? element : getWindow(element);\n    /** @type {number} */\n    self.scrollTop = 0;\n    /** @type {number} */\n    self.maxScroll = 0;\n    /** @type {number} */\n    self.scrollHeight = 0;\n    /** @type {HTMLElement?} */\n    self.activeItem = null;\n    /** @type {HTMLElement[]} */\n    self.items = [];\n    /** @type {number} */\n    self.itemsLength = 0;\n    /** @type {number[]} */\n    self.offsets = [];\n\n    // bind events\n    self.refresh = self.refresh.bind(self);\n\n    // add event handlers\n    toggleSpyHandlers(self, true);\n\n    self.refresh();\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() { return scrollspyComponent; }\n  /**\n   * Returns component default options.\n   */\n  get defaults() { return scrollspyDefaults; }\n  /* eslint-enable */\n\n  // SCROLLSPY PUBLIC METHODS\n  // ========================\n  /** Updates all items. */\n  refresh() {\n    const self = this;\n    const { target } = self;\n\n    // check if target is visible and invalidate\n    /* istanbul ignore next */\n    if (target.offsetHeight === 0) return;\n\n    updateSpyTargets(self);\n\n    const {\n      scrollTop, maxScroll, itemsLength, items, activeItem,\n    } = self;\n\n    if (scrollTop >= maxScroll) {\n      const newActiveItem = items[itemsLength - 1];\n\n      /* istanbul ignore else */\n      if (activeItem !== newActiveItem) {\n        activate(self, newActiveItem);\n      }\n      return;\n    }\n\n    const { offsets } = self;\n\n    if (activeItem && scrollTop < offsets[0] && offsets[0] > 0) {\n      self.activeItem = null;\n      clear(target);\n      return;\n    }\n\n    items.forEach((item, i) => {\n      if (activeItem !== item && scrollTop >= offsets[i]\n        && (typeof offsets[i + 1] === 'undefined' || scrollTop < offsets[i + 1])) {\n        activate(self, item);\n      }\n    });\n  }\n\n  /** Removes `ScrollSpy` from the target element. */\n  dispose() {\n    toggleSpyHandlers(this);\n    super.dispose();\n  }\n}\n\nObjectAssign(ScrollSpy, {\n  selector: scrollspySelector,\n  init: scrollspyInitCallback,\n  getInstance: getScrollSpyInstance,\n});\n\n/**\n * A global namespace for aria-selected.\n * @type {string}\n */\nconst ariaSelected = 'aria-selected';\n\n/** @type {string} */\nconst tabString = 'tab';\n\n/** @type {string} */\nconst tabComponent = 'Tab';\n\n/* Native JavaScript for Bootstrap 5 | Tab\n------------------------------------------ */\n\n// TAB PRIVATE GC\n// ================\nconst tabSelector = `[${dataBsToggle}=\"${tabString}\"]`;\n\n/**\n * Static method which returns an existing `Tab` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Tab>}\n */\nconst getTabInstance = (element) => getInstance(element, tabComponent);\n\n/**\n * A `Tab` initialization callback.\n * @type {BSN.InitCallback<Tab>}\n */\nconst tabInitCallback = (element) => new Tab(element);\n\n// TAB CUSTOM EVENTS\n// =================\nconst showTabEvent = OriginalEvent(`show.bs.${tabString}`);\nconst shownTabEvent = OriginalEvent(`shown.bs.${tabString}`);\nconst hideTabEvent = OriginalEvent(`hide.bs.${tabString}`);\nconst hiddenTabEvent = OriginalEvent(`hidden.bs.${tabString}`);\n\n/**\n * Stores the current active tab and its content\n * for a given `.nav` element.\n * @type {Map<HTMLElement, any>}\n */\nconst tabPrivate = new Map();\n\n// TAB PRIVATE METHODS\n// ===================\n/**\n * Executes after tab transition has finished.\n * @param {Tab} self the `Tab` instance\n */\nfunction triggerTabEnd(self) {\n  const { tabContent, nav } = self;\n\n  /* istanbul ignore else */\n  if (tabContent && hasClass(tabContent, collapsingClass)) {\n    tabContent.style.height = '';\n    removeClass(tabContent, collapsingClass);\n  }\n\n  /* istanbul ignore else */\n  if (nav) Timer.clear(nav);\n}\n\n/**\n * Executes before showing the tab content.\n * @param {Tab} self the `Tab` instance\n */\nfunction triggerTabShow(self) {\n  const {\n    element, tabContent, content: nextContent, nav,\n  } = self;\n  const { tab } = nav && tabPrivate.get(nav);\n\n  /* istanbul ignore else */\n  if (tabContent && hasClass(nextContent, fadeClass)) {\n    const { currentHeight, nextHeight } = tabPrivate.get(element);\n    if (currentHeight === nextHeight) {\n      triggerTabEnd(self);\n    } else {\n      // enables height animation\n      setTimeout(() => {\n        tabContent.style.height = `${nextHeight}px`;\n        reflow(tabContent);\n        emulateTransitionEnd(tabContent, () => triggerTabEnd(self));\n      }, 50);\n    }\n  } else if (nav) Timer.clear(nav);\n\n  shownTabEvent.relatedTarget = tab;\n  dispatchEvent(element, shownTabEvent);\n}\n\n/**\n * Executes before hiding the tab.\n * @param {Tab} self the `Tab` instance\n */\nfunction triggerTabHide(self) {\n  const {\n    element, content: nextContent, tabContent, nav,\n  } = self;\n  const { tab, content } = nav && tabPrivate.get(nav);\n  let currentHeight = 0;\n\n  /* istanbul ignore else */\n  if (tabContent && hasClass(nextContent, fadeClass)) {\n    [content, nextContent].forEach((c) => {\n      addClass(c, 'overflow-hidden');\n    });\n    currentHeight = content.scrollHeight || /* istanbul ignore next */0;\n  }\n\n  // update relatedTarget and dispatch event\n  showTabEvent.relatedTarget = tab;\n  hiddenTabEvent.relatedTarget = element;\n  dispatchEvent(element, showTabEvent);\n  if (showTabEvent.defaultPrevented) return;\n\n  addClass(nextContent, activeClass);\n  removeClass(content, activeClass);\n\n  /* istanbul ignore else */\n  if (tabContent && hasClass(nextContent, fadeClass)) {\n    const nextHeight = nextContent.scrollHeight;\n    tabPrivate.set(element, { currentHeight, nextHeight });\n\n    addClass(tabContent, collapsingClass);\n    tabContent.style.height = `${currentHeight}px`;\n    reflow(tabContent);\n    [content, nextContent].forEach((c) => {\n      removeClass(c, 'overflow-hidden');\n    });\n  }\n\n  if (nextContent && hasClass(nextContent, fadeClass)) {\n    setTimeout(() => {\n      addClass(nextContent, showClass);\n      emulateTransitionEnd(nextContent, () => {\n        triggerTabShow(self);\n      });\n    }, 1);\n  } else {\n    addClass(nextContent, showClass);\n    triggerTabShow(self);\n  }\n\n  dispatchEvent(tab, hiddenTabEvent);\n}\n\n/**\n * Returns the current active tab and its target content.\n * @param {Tab} self the `Tab` instance\n * @returns {Record<string, any>} the query result\n */\nfunction getActiveTab(self) {\n  const { nav } = self;\n\n  const activeTabs = getElementsByClassName(activeClass, nav);\n  /** @type {(HTMLElement)=} */\n  let tab;\n  /* istanbul ignore else */\n  if (activeTabs.length === 1\n    && !dropdownMenuClasses.some((c) => hasClass(activeTabs[0].parentElement, c))) {\n    [tab] = activeTabs;\n  } else if (activeTabs.length > 1) {\n    tab = activeTabs[activeTabs.length - 1];\n  }\n  const content = tab ? getTargetElement(tab) : null;\n  return { tab, content };\n}\n\n/**\n * Returns a parent dropdown.\n * @param {HTMLElement} element the `Tab` element\n * @returns {HTMLElement?} the parent dropdown\n */\nfunction getParentDropdown(element) {\n  const dropdown = closest(element, `.${dropdownMenuClasses.join(',.')}`);\n  return dropdown ? querySelector(`.${dropdownMenuClasses[0]}-toggle`, dropdown) : null;\n}\n\n/**\n * Toggles on/off the `click` event listener.\n * @param {Tab} self the `Tab` instance\n * @param {boolean=} add when `true`, event listener is added\n */\nfunction toggleTabHandler(self, add) {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, tabClickHandler);\n}\n\n// TAB EVENT HANDLER\n// =================\n/**\n * Handles the `click` event listener.\n * @this {HTMLElement}\n * @param {MouseEvent} e the `Event` object\n */\nfunction tabClickHandler(e) {\n  const self = getTabInstance(this);\n  /* istanbul ignore next: must filter */\n  if (!self) return;\n  e.preventDefault();\n\n  self.show();\n}\n\n// TAB DEFINITION\n// ==============\n/** Creates a new `Tab` instance. */\nclass Tab extends BaseComponent {\n  /**\n   * @param {HTMLElement | string} target the target element\n   */\n  constructor(target) {\n    super(target);\n    // bind\n    const self = this;\n\n    // initialization element\n    const { element } = self;\n    const content = getTargetElement(element);\n\n    // no point initializing a tab without a corresponding content\n    if (!content) return;\n\n    const nav = closest(element, '.nav');\n    const container = closest(content, '.tab-content');\n\n    /** @type {HTMLElement?} */\n    self.nav = nav;\n    /** @type {HTMLElement} */\n    self.content = content;\n    /** @type {HTMLElement?} */\n    self.tabContent = container;\n\n    // event targets\n    /** @type {HTMLElement?} */\n    self.dropdown = getParentDropdown(element);\n\n    // show first Tab instance of none is shown\n    // suggested on #432\n    const { tab } = getActiveTab(self);\n    if (nav && !tab) {\n      const firstTab = querySelector(tabSelector, nav);\n      const firstTabContent = firstTab && getTargetElement(firstTab);\n\n      /* istanbul ignore else */\n      if (firstTabContent) {\n        addClass(firstTab, activeClass);\n        addClass(firstTabContent, showClass);\n        addClass(firstTabContent, activeClass);\n        setAttribute(element, ariaSelected, 'true');\n      }\n    }\n\n    // add event listener\n    toggleTabHandler(self, true);\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */  \n  get name() { return tabComponent; }\n  /* eslint-enable */\n\n  // TAB PUBLIC METHODS\n  // ==================\n  /** Shows the tab to the user. */\n  show() {\n    const self = this;\n    const {\n      element, content: nextContent, nav, dropdown,\n    } = self;\n\n    /* istanbul ignore else */\n    if (!(nav && Timer.get(nav)) && !hasClass(element, activeClass)) {\n      const { tab, content } = getActiveTab(self);\n\n      /* istanbul ignore else */\n      if (nav) tabPrivate.set(nav, { tab, content });\n\n      // update relatedTarget and dispatch\n      hideTabEvent.relatedTarget = element;\n\n      dispatchEvent(tab, hideTabEvent);\n      if (hideTabEvent.defaultPrevented) return;\n\n      addClass(element, activeClass);\n      setAttribute(element, ariaSelected, 'true');\n\n      const activeDropdown = getParentDropdown(tab);\n      if (activeDropdown && hasClass(activeDropdown, activeClass)) {\n        removeClass(activeDropdown, activeClass);\n      }\n\n      /* istanbul ignore else */\n      if (nav) {\n        const toggleTab = () => {\n          removeClass(tab, activeClass);\n          setAttribute(tab, ariaSelected, 'false');\n          if (dropdown && !hasClass(dropdown, activeClass)) addClass(dropdown, activeClass);\n        };\n\n        if (hasClass(content, fadeClass) || hasClass(nextContent, fadeClass)) {\n          Timer.set(nav, toggleTab, 1);\n        } else toggleTab();\n      }\n\n      removeClass(content, showClass);\n      if (hasClass(content, fadeClass)) {\n        emulateTransitionEnd(content, () => triggerTabHide(self));\n      } else {\n        triggerTabHide(self);\n      }\n    }\n  }\n\n  /** Removes the `Tab` component from the target element. */\n  dispose() {\n    toggleTabHandler(this);\n    super.dispose();\n  }\n}\n\nObjectAssign(Tab, {\n  selector: tabSelector,\n  init: tabInitCallback,\n  getInstance: getTabInstance,\n});\n\n/** @type {string} */\nconst toastString = 'toast';\n\n/** @type {string} */\nconst toastComponent = 'Toast';\n\n/* Native JavaScript for Bootstrap 5 | Toast\n-------------------------------------------- */\n\n// TOAST PRIVATE GC\n// ================\nconst toastSelector = `.${toastString}`;\nconst toastDismissSelector = `[${dataBsDismiss}=\"${toastString}\"]`;\nconst toastToggleSelector = `[${dataBsToggle}=\"${toastString}\"]`;\nconst showingClass = 'showing';\n/** @deprecated */\nconst hideClass = 'hide';\n\nconst toastDefaults = {\n  animation: true,\n  autohide: true,\n  delay: 5000,\n};\n\n/**\n * Static method which returns an existing `Toast` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Toast>}\n */\nconst getToastInstance = (element) => getInstance(element, toastComponent);\n\n/**\n * A `Toast` initialization callback.\n * @type {BSN.InitCallback<Toast>}\n */\nconst toastInitCallback = (element) => new Toast(element);\n\n// TOAST CUSTOM EVENTS\n// ===================\nconst showToastEvent = OriginalEvent(`show.bs.${toastString}`);\nconst shownToastEvent = OriginalEvent(`shown.bs.${toastString}`);\nconst hideToastEvent = OriginalEvent(`hide.bs.${toastString}`);\nconst hiddenToastEvent = OriginalEvent(`hidden.bs.${toastString}`);\n\n// TOAST PRIVATE METHODS\n// =====================\n/**\n * Executes after the toast is shown to the user.\n * @param {Toast} self the `Toast` instance\n */\nfunction showToastComplete(self) {\n  const { element, options } = self;\n  removeClass(element, showingClass);\n  Timer.clear(element, showingClass);\n\n  dispatchEvent(element, shownToastEvent);\n  /* istanbul ignore else */\n  if (options.autohide) {\n    Timer.set(element, () => self.hide(), options.delay, toastString);\n  }\n}\n\n/**\n * Executes after the toast is hidden to the user.\n * @param {Toast} self the `Toast` instance\n */\nfunction hideToastComplete(self) {\n  const { element } = self;\n  removeClass(element, showingClass);\n  removeClass(element, showClass);\n  addClass(element, hideClass); // B/C\n  Timer.clear(element, toastString);\n  dispatchEvent(element, hiddenToastEvent);\n}\n\n/**\n * Executes before hiding the toast.\n * @param {Toast} self the `Toast` instance\n */\nfunction hideToast(self) {\n  const { element, options } = self;\n  addClass(element, showingClass);\n\n  if (options.animation) {\n    reflow(element);\n    emulateTransitionEnd(element, () => hideToastComplete(self));\n  } else {\n    hideToastComplete(self);\n  }\n}\n\n/**\n * Executes before showing the toast.\n * @param {Toast} self the `Toast` instance\n */\nfunction showToast(self) {\n  const { element, options } = self;\n  Timer.set(element, () => {\n    removeClass(element, hideClass); // B/C\n    reflow(element);\n    addClass(element, showClass);\n    addClass(element, showingClass);\n\n    if (options.animation) {\n      emulateTransitionEnd(element, () => showToastComplete(self));\n    } else {\n      showToastComplete(self);\n    }\n  }, 17, showingClass);\n}\n\n/**\n * Toggles on/off the `click` event listener.\n * @param {Toast} self the `Toast` instance\n * @param {boolean=} add when `true`, it will add the listener\n */\nfunction toggleToastHandlers(self, add) {\n  const action = add ? addListener : removeListener;\n  const {\n    element, triggers, dismiss, options,\n  } = self;\n\n  /* istanbul ignore else */\n  if (dismiss) {\n    action(dismiss, mouseclickEvent, self.hide);\n  }\n\n  /* istanbul ignore else */\n  if (options.autohide) {\n    [focusinEvent, focusoutEvent, mouseenterEvent, mouseleaveEvent]\n      .forEach((e) => action(element, e, interactiveToastHandler));\n  }\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach((btn) => action(btn, mouseclickEvent, toastClickHandler));\n  }\n}\n\n// TOAST EVENT HANDLERS\n// ====================\n/**\n * Executes after the instance has been disposed.\n * @param {Toast} self the `Toast` instance\n */\nfunction completeDisposeToast(self) {\n  Timer.clear(self.element, toastString);\n  toggleToastHandlers(self);\n}\n\n/**\n * Handles the `click` event listener for toast.\n * @param {MouseEvent} e the `Event` object\n */\nfunction toastClickHandler(e) {\n  const { target } = e;\n\n  const trigger = target && closest(target, toastToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getToastInstance(element);\n\n  /* istanbul ignore else */\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n  self.relatedTarget = trigger;\n  self.show();\n}\n\n/**\n * Executes when user interacts with the toast without closing it,\n * usually by hovering or focusing it.\n *\n * @this {HTMLElement}\n * @param {MouseEvent} e the `Toast` instance\n */\nfunction interactiveToastHandler(e) {\n  const element = this;\n  const self = getToastInstance(element);\n  const { type, relatedTarget } = e;\n\n  /* istanbul ignore next: a solid filter is required */\n  if (!self || (element === relatedTarget || element.contains(relatedTarget))) return;\n\n  if ([mouseenterEvent, focusinEvent].includes(type)) {\n    Timer.clear(element, toastString);\n  } else {\n    Timer.set(element, () => self.hide(), self.options.delay, toastString);\n  }\n}\n\n// TOAST DEFINITION\n// ================\n/** Creates a new `Toast` instance. */\nclass Toast extends BaseComponent {\n  /**\n   * @param {HTMLElement | string} target the target `.toast` element\n   * @param {BSN.Options.Toast=} config the instance options\n   */\n  constructor(target, config) {\n    super(target, config);\n    // bind\n    const self = this;\n    const { element, options } = self;\n\n    // set fadeClass, the options.animation will override the markup\n    if (options.animation && !hasClass(element, fadeClass)) addClass(element, fadeClass);\n    else if (!options.animation && hasClass(element, fadeClass)) removeClass(element, fadeClass);\n\n    // dismiss button\n    /** @type {HTMLElement?} */\n    self.dismiss = querySelector(toastDismissSelector, element);\n\n    // toast can have multiple triggering elements\n    /** @type {HTMLElement[]} */\n    self.triggers = [...querySelectorAll(toastToggleSelector, getDocument(element))]\n      .filter((btn) => getTargetElement(btn) === element);\n\n    // bind\n    self.show = self.show.bind(self);\n    self.hide = self.hide.bind(self);\n\n    // add event listener\n    toggleToastHandlers(self, true);\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */  \n  get name() { return toastComponent; }\n  /**\n   * Returns component default options.\n   */  \n  get defaults() { return toastDefaults; }\n  /* eslint-enable */\n\n  /**\n   * Returns *true* when toast is visible.\n   */\n  get isShown() { return hasClass(this.element, showClass); }\n\n  // TOAST PUBLIC METHODS\n  // ====================\n  /** Shows the toast. */\n  show() {\n    const self = this;\n    const { element, isShown } = self;\n\n    /* istanbul ignore else */\n    if (element && !isShown) {\n      dispatchEvent(element, showToastEvent);\n      if (showToastEvent.defaultPrevented) return;\n\n      showToast(self);\n    }\n  }\n\n  /** Hides the toast. */\n  hide() {\n    const self = this;\n    const { element, isShown } = self;\n\n    /* istanbul ignore else */\n    if (element && isShown) {\n      dispatchEvent(element, hideToastEvent);\n      if (hideToastEvent.defaultPrevented) return;\n      hideToast(self);\n    }\n  }\n\n  /** Removes the `Toast` component from the target element. */\n  dispose() {\n    const self = this;\n    const { element, isShown } = self;\n\n    /* istanbul ignore else */\n    if (isShown) {\n      removeClass(element, showClass);\n    }\n\n    completeDisposeToast(self);\n\n    super.dispose();\n  }\n}\n\nObjectAssign(Toast, {\n  selector: toastSelector,\n  init: toastInitCallback,\n  getInstance: getToastInstance,\n});\n\n/**\n * Check if element matches a CSS selector.\n *\n * @param {HTMLElement} target\n * @param {string} selector\n * @returns {boolean}\n */\nfunction matches(target, selector) {\n  return target.matches(selector);\n}\n\n/** @type {Record<string, any>} */\nconst componentsList = {\n  Alert,\n  Button,\n  Carousel,\n  Collapse,\n  Dropdown,\n  Modal,\n  Offcanvas,\n  Popover,\n  ScrollSpy,\n  Tab,\n  Toast,\n  Tooltip,\n};\n\n/**\n * Initialize all matched `Element`s for one component.\n * @param {BSN.InitCallback<any>} callback\n * @param {NodeList | Node[]} collection\n */\nfunction initComponentDataAPI(callback, collection) {\n  [...collection].forEach((x) => callback(x));\n}\n\n/**\n * Remove one component from a target container element or all in the page.\n * @param {string} component the component name\n * @param {ParentNode} context parent `Node`\n */\nfunction removeComponentDataAPI(component, context) {\n  const compData = Data.getAllFor(component);\n\n  if (compData) {\n    [...compData].forEach((x) => {\n      const [element, instance] = x;\n      if (context.contains(element)) instance.dispose();\n    });\n  }\n}\n\n/**\n * Initialize all BSN components for a target container.\n * @param {ParentNode=} context parent `Node`\n */\nfunction initCallback(context) {\n  const lookUp = context && context.nodeName ? context : document;\n  const elemCollection = [...getElementsByTagName('*', lookUp)];\n\n  ObjectKeys(componentsList).forEach((comp) => {\n    const { init, selector } = componentsList[comp];\n    initComponentDataAPI(init, elemCollection.filter((item) => matches(item, selector)));\n  });\n}\n\n/**\n * Remove all BSN components for a target container.\n * @param {ParentNode=} context parent `Node`\n */\nfunction removeDataAPI(context) {\n  const lookUp = context && context.nodeName ? context : document;\n\n  ObjectKeys(componentsList).forEach((comp) => {\n    removeComponentDataAPI(comp, lookUp);\n  });\n}\n\n// bulk initialize all components\nif (document.body) initCallback();\nelse {\n  addListener(document, 'DOMContentLoaded', () => initCallback(), { once: true });\n}\n\nconst BSN = {\n  Alert,\n  Button,\n  Carousel,\n  Collapse,\n  Dropdown,\n  Modal,\n  Offcanvas,\n  Popover,\n  ScrollSpy,\n  Tab,\n  Toast,\n  Tooltip,\n\n  initCallback,\n  removeDataAPI,\n  Version,\n  EventListener: Listener,\n};\n\nexport { BSN as default };\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _get;\nvar _superPropBase = _interopRequireDefault(require(\"./_super_prop_base\"));\nfunction _get(target, property, receiver) {\n    return get(target, property, receiver);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction get(target1, property1, receiver1) {\n    if (typeof Reflect !== \"undefined\" && Reflect.get) {\n        get = Reflect.get;\n    } else {\n        get = function get(target, property, receiver) {\n            var base = (0, _superPropBase).default(target, property);\n            if (!base) return;\n            var desc = Object.getOwnPropertyDescriptor(base, property);\n            if (desc.get) {\n                return desc.get.call(receiver || target);\n            }\n            return desc.value;\n        };\n    }\n    return get(target1, property1, receiver1);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _inherits;\nvar _setPrototypeOf = _interopRequireDefault(require(\"./_set_prototype_of\"));\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass) (0, _setPrototypeOf).default(subClass, superClass);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _objectSpread;\nvar _defineProperty = _interopRequireDefault(require(\"./_define_property\"));\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === 'function') {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            (0, _defineProperty).default(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _slicedToArray;\nvar _arrayWithHoles = _interopRequireDefault(require(\"./_array_with_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableRest = _interopRequireDefault(require(\"./_non_iterable_rest\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _slicedToArray(arr, i) {\n    return (0, _arrayWithHoles).default(arr) || (0, _iterableToArray).default(arr, i) || (0, _unsupportedIterableToArray).default(arr, i) || (0, _nonIterableRest).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _toConsumableArray;\nvar _arrayWithoutHoles = _interopRequireDefault(require(\"./_array_without_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableSpread = _interopRequireDefault(require(\"./_non_iterable_spread\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _toConsumableArray(arr) {\n    return (0, _arrayWithoutHoles).default(arr) || (0, _iterableToArray).default(arr) || (0, _unsupportedIterableToArray).default(arr) || (0, _nonIterableSpread).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createSuper;\nvar _isNativeReflectConstruct = _interopRequireDefault(require(\"./_is_native_reflect_construct\"));\nvar _getPrototypeOf = _interopRequireDefault(require(\"./_get_prototype_of\"));\nvar _possibleConstructorReturn = _interopRequireDefault(require(\"./_possible_constructor_return\"));\nfunction _createSuper(Derived) {\n    var hasNativeReflectConstruct = (0, _isNativeReflectConstruct).default();\n    return function _createSuperInternal() {\n        var Super = (0, _getPrototypeOf).default(Derived), result;\n        if (hasNativeReflectConstruct) {\n            var NewTarget = (0, _getPrototypeOf).default(this).constructor;\n            result = Reflect.construct(Super, arguments, NewTarget);\n        } else {\n            result = Super.apply(this, arguments);\n        }\n        return (0, _possibleConstructorReturn).default(this, result);\n    };\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","import BSN from 'bootstrap.native';\n\n const refs = {\n    modal: document.querySelector('#exampleModal'),\n    primBtn: document.querySelector('#prim-btn'),\n }\n\n\nconst modal = new BSN.Modal('#exampleModal');\n\n\nconst PROMPT_DELAY = 2000;\nconst MAX_PROMPT_ATTEMPTS = 4;\n\nlet promptCounter = 0;\nlet hasSubacribed = false;\n\ntimeoutForModal();\n\nrefs.modal.addEventListener('hide.bs.modal', timeoutForModal)\nrefs.primBtn.addEventListener('click', ()=>{\n    hasSubacribed = true;\n    modal.hide()\n    setTimeout(()=>{\n        alert(\"thanks for subscribing!\")\n    },500)\n})\n\nfunction timeoutForModal () {\n        setTimeout(()=>{\n        if(promptCounter === MAX_PROMPT_ATTEMPTS || hasSubacribed){\n            return\n        }\n        modal.show();\n        promptCounter += 1;\n    }, PROMPT_DELAY)\n}"],"names":["Object","defineProperty","module","exports","value","default","self","ReferenceError","object","property","prototype","hasOwnProperty","call","$1b88cb4cd4b28de3$var$_getPrototypeOf","obj","parcelRequire","__esModule","$b9926a5835d271e3$var$getPrototypeOf","o1","setPrototypeOf","getPrototypeOf","o","__proto__","$c1b1a34fae3d3c27$var$setPrototypeOf","p1","p","key","enumerable","configurable","writable","$e17dad4ea3dafe1a$var$_typeOf","$e17dad4ea3dafe1a$var$_assertThisInitialized","$e17dad4ea3dafe1a$var$_interopRequireDefault","constructor","Symbol","arr","Array","isArray","iter","iterator","from","TypeError","minLen","$7a2c4c4c44c69707$var$_arrayLikeToArray","n","toString","slice","name","test","len","length","i","arr2","$f215c72f040a88cf$var$_arrayLikeToArray","Reflect","construct","sham","Proxy","Boolean","valueOf","e","$ds8z5","$665014edacbfe17b$exports","instance","Constructor","$74e7f8130373505f$var$_defineProperties","target","props","descriptor","$74e7f8130373505f$exports","protoProps","staticProps","$e08672c9889dd930$exports","receiver","$e08672c9889dd930$var$get","$e08672c9889dd930$var$_superPropBase","target1","property1","receiver1","get","base","desc","getOwnPropertyDescriptor","$ae7f60fd48750bb9$exports","subClass","superClass","create","$ae7f60fd48750bb9$var$_setPrototypeOf","$ae7f60fd48750bb9$var$_interopRequireDefault","$9eddae5a012cde57$exports","arguments","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","forEach","$9eddae5a012cde57$var$_defineProperty","$9eddae5a012cde57$var$_interopRequireDefault","$111a013c31e2261e$exports","$111a013c31e2261e$var$_arrayWithHoles","$111a013c31e2261e$var$_iterableToArray","$111a013c31e2261e$var$_unsupportedIterableToArray","$111a013c31e2261e$var$_nonIterableRest","$111a013c31e2261e$var$_interopRequireDefault","$6195f07b5409ba15$exports","$6195f07b5409ba15$var$_arrayWithoutHoles","$6195f07b5409ba15$var$_iterableToArray","$6195f07b5409ba15$var$_unsupportedIterableToArray","$6195f07b5409ba15$var$_nonIterableSpread","$6195f07b5409ba15$var$_interopRequireDefault","$2059300b4b5a348b$exports","Derived","hasNativeReflectConstruct","$2059300b4b5a348b$var$_isNativeReflectConstruct","result","Super","$2059300b4b5a348b$var$_getPrototypeOf","NewTarget","this","apply","$2059300b4b5a348b$var$_possibleConstructorReturn","$2059300b4b5a348b$var$_interopRequireDefault","$15bab56fec6a53f4$var$EventRegistry","$15bab56fec6a53f4$var$globalListener","that","type","$parcel$interopDefault","elementsMap","_elementsMap","element","listenersMap","listenerMap","_listenerMap","listener","options","once","$15bab56fec6a53f4$var$removeListener","$15bab56fec6a53f4$var$addListener","eventType","Map","oneEventMap","has","set","oneElementMap","size","addEventListener","savedOptions","eventOptions","undefined","delete","removeEventListener","$15bab56fec6a53f4$var$Listener","on","off","globalListener","registry","$15bab56fec6a53f4$var$mouseclickEvent","$15bab56fec6a53f4$var$transitionEndEvent","$15bab56fec6a53f4$var$transitionProperty","$15bab56fec6a53f4$var$getElementStyle","computedStyle","getComputedStyle","includes","getPropertyValue","$15bab56fec6a53f4$var$getElementTransitionDuration","propertyValue","durationValue","durationScale","duration","parseFloat","Number","isNaN","$15bab56fec6a53f4$var$dispatchEvent","event","dispatchEvent","$15bab56fec6a53f4$var$emulateTransitionEnd","handler","called","endEvent","Event","delay","delayValue","delayScale","$15bab56fec6a53f4$var$getElementTransitionDelay","transitionEndWrapper","setTimeout","$15bab56fec6a53f4$var$isNode","some","x","nodeType","$15bab56fec6a53f4$var$isWindow","$15bab56fec6a53f4$var$isDocument","$15bab56fec6a53f4$var$getDocument","node","ownerDocument","document","window","$15bab56fec6a53f4$var$querySelector","selector","parent","querySelector","$15bab56fec6a53f4$var$closest","closest","getRootNode","host","$15bab56fec6a53f4$var$ObjectAssign","assign","$15bab56fec6a53f4$var$hasClass","classNAME","classList","contains","$15bab56fec6a53f4$var$removeClass","remove","$15bab56fec6a53f4$var$isHTMLElement","$15bab56fec6a53f4$var$componentData","$15bab56fec6a53f4$var$Data","component","getAllFor","allForC","instanceMap","$15bab56fec6a53f4$var$getInstance","$15bab56fec6a53f4$var$OriginalEvent","EventType","config","OriginalCustomEvent","CustomEvent","cancelable","bubbles","$15bab56fec6a53f4$var$isObject","$15bab56fec6a53f4$var$fadeClass","$15bab56fec6a53f4$var$showClass","$15bab56fec6a53f4$var$dataBsDismiss","$15bab56fec6a53f4$var$alertString","$15bab56fec6a53f4$var$alertComponent","$15bab56fec6a53f4$var$getAttribute","attribute","getAttribute","$15bab56fec6a53f4$var$normalizeValue","$15bab56fec6a53f4$var$ObjectKeys","$15bab56fec6a53f4$var$toLowerCase","toLowerCase","$15bab56fec6a53f4$var$Version","$15bab56fec6a53f4$var$BaseComponent","BaseComponent","Error","prevInstance","dispose","defaults","defaultOps","inputOps","ns","data","dataset","normalOps","dataOps","title","k","replace","match","$15bab56fec6a53f4$var$normalizeOptions","prop","$15bab56fec6a53f4$var$alertSelector","$15bab56fec6a53f4$var$alertDismissSelector","$15bab56fec6a53f4$var$getAlertInstance","$15bab56fec6a53f4$var$closeAlertEvent","$15bab56fec6a53f4$var$closedAlertEvent","$15bab56fec6a53f4$var$alertTransitionEnd","$15bab56fec6a53f4$var$toggleAlertHandler","add","action","dismiss","close","$15bab56fec6a53f4$var$Alert","Alert","_this","defaultPrevented","$fVNic","init","getInstance","$15bab56fec6a53f4$var$ariaPressed","$15bab56fec6a53f4$var$setAttribute","setAttribute","$15bab56fec6a53f4$var$addClass","$15bab56fec6a53f4$var$activeClass","$15bab56fec6a53f4$var$dataBsToggle","$15bab56fec6a53f4$var$buttonComponent","$15bab56fec6a53f4$var$buttonSelector","$15bab56fec6a53f4$var$getButtonInstance","$15bab56fec6a53f4$var$toggleButtonHandler","toggle","$15bab56fec6a53f4$var$Button","Button","isActive","preventDefault","$15bab56fec6a53f4$var$mouseenterEvent","$15bab56fec6a53f4$var$mouseleaveEvent","$15bab56fec6a53f4$var$keydownEvent","$15bab56fec6a53f4$var$keyArrowLeft","$15bab56fec6a53f4$var$keyArrowRight","$15bab56fec6a53f4$var$getBoundingClientRect","includeScale","ref","getBoundingClientRect","width","height","top","right","bottom","left","scaleX","scaleY","offsetWidth","offsetHeight","Math","round","y","$15bab56fec6a53f4$var$getDocumentElement","documentElement","$15bab56fec6a53f4$var$isElementInScrollRange","clientHeight","$15bab56fec6a53f4$var$isRTL","dir","$15bab56fec6a53f4$var$querySelectorAll","querySelectorAll","$15bab56fec6a53f4$var$getElementsByClassName","getElementsByClassName","$15bab56fec6a53f4$var$TimeCache","$15bab56fec6a53f4$var$Timer","callback","keyTimers","clearTimeout","$15bab56fec6a53f4$var$reflow","$15bab56fec6a53f4$var$passiveHandler","passive","$15bab56fec6a53f4$var$dataBsTarget","$15bab56fec6a53f4$var$carouselString","$15bab56fec6a53f4$var$carouselComponent","$15bab56fec6a53f4$var$dataBsParent","$15bab56fec6a53f4$var$getTargetElement","targetAttr","doc","map","att","attValue","$15bab56fec6a53f4$var$carouselSelector","$15bab56fec6a53f4$var$carouselItem","$15bab56fec6a53f4$var$dataBsSlideTo","$15bab56fec6a53f4$var$dataBsSlide","$15bab56fec6a53f4$var$pausedClass","$15bab56fec6a53f4$var$carouselDefaults","pause","keyboard","touch","interval","$15bab56fec6a53f4$var$getCarouselInstance","$15bab56fec6a53f4$var$startX","$15bab56fec6a53f4$var$currentX","$15bab56fec6a53f4$var$endX","$15bab56fec6a53f4$var$carouselSlideEvent","$15bab56fec6a53f4$var$carouselSlidEvent","$15bab56fec6a53f4$var$carouselPauseHandler","isPaused","$15bab56fec6a53f4$var$carouselResumeHandler","cycle","$15bab56fec6a53f4$var$carouselIndicatorHandler","indicator","isAnimating","newIndex","to","$15bab56fec6a53f4$var$carouselControlsHandler","control","orientation","next","prev","$15bab56fec6a53f4$var$carouselKeyHandler","param","code","tagName","RTL","arrowKeyNext","$15bab56fec6a53f4$var$carouselPointerDownHandler","controls","indicators","el","isTouch","pageX","$15bab56fec6a53f4$var$toggleCarouselTouchHandlers","$15bab56fec6a53f4$var$carouselPointerMoveHandler","$15bab56fec6a53f4$var$carouselPointerUpHandler","c","find","index","getSelection","abs","$15bab56fec6a53f4$var$activateCarouselIndicator","pageIndex","$15bab56fec6a53f4$var$toggleCarouselHandlers","slides","arrow","$15bab56fec6a53f4$var$getActiveIndex","activeItem","indexOf","$15bab56fec6a53f4$var$Carousel","Carousel","direction","$jmhxu","id","idx","directionClass","eventProperties","relatedTarget","hidden","$15bab56fec6a53f4$var$carouselTransitionEndHandler","itemClasses","slide","$15bab56fec6a53f4$var$ariaExpanded","$15bab56fec6a53f4$var$setElementStyle","styles","entries","$15bab56fec6a53f4$var$ObjectEntries","_param","style","setProperty","propObject","$15bab56fec6a53f4$var$collapsingClass","$15bab56fec6a53f4$var$collapseString","$15bab56fec6a53f4$var$collapseComponent","$15bab56fec6a53f4$var$collapseSelector","$15bab56fec6a53f4$var$collapseToggleSelector","$15bab56fec6a53f4$var$collapseDefaults","$15bab56fec6a53f4$var$getCollapseInstance","$15bab56fec6a53f4$var$showCollapseEvent","$15bab56fec6a53f4$var$shownCollapseEvent","$15bab56fec6a53f4$var$hideCollapseEvent","$15bab56fec6a53f4$var$hiddenCollapseEvent","$15bab56fec6a53f4$var$collapseContent","triggers","scrollHeight","btn","$15bab56fec6a53f4$var$toggleCollapseHandler","$15bab56fec6a53f4$var$collapseClickHandler","trigger","$15bab56fec6a53f4$var$Collapse","Collapse","hide","show","activeCollapse","activeCollapseInstance","$15bab56fec6a53f4$var$expandCollapse","$15bab56fec6a53f4$var$focusEvent","$15bab56fec6a53f4$var$scrollEvent","$15bab56fec6a53f4$var$resizeEvent","$15bab56fec6a53f4$var$keyArrowUp","$15bab56fec6a53f4$var$keyArrowDown","$15bab56fec6a53f4$var$keyEscape","$15bab56fec6a53f4$var$hasAttribute","hasAttribute","$15bab56fec6a53f4$var$focus","focus","$15bab56fec6a53f4$var$getWindow","defaultView","$15bab56fec6a53f4$var$dropdownMenuClasses","$15bab56fec6a53f4$var$dropdownComponent","$15bab56fec6a53f4$var$dropdownMenuClass","$15bab56fec6a53f4$var$isEmptyAnchor","parentAnchor","href","$15bab56fec6a53f4$var$_dropdownMenuClasses","$15bab56fec6a53f4$var$dropdownString","$15bab56fec6a53f4$var$dropupString","$15bab56fec6a53f4$var$dropstartString","$15bab56fec6a53f4$var$dropendString","$15bab56fec6a53f4$var$dropdownSelector","$15bab56fec6a53f4$var$getDropdownInstance","$15bab56fec6a53f4$var$dropdownMenuEndClass","$15bab56fec6a53f4$var$verticalClass","$15bab56fec6a53f4$var$horizontalClass","$15bab56fec6a53f4$var$menuFocusTags","$15bab56fec6a53f4$var$dropdownDefaults","offset","display","$15bab56fec6a53f4$var$showDropdownEvent","$15bab56fec6a53f4$var$shownDropdownEvent","$15bab56fec6a53f4$var$hideDropdownEvent","$15bab56fec6a53f4$var$hiddenDropdownEvent","$15bab56fec6a53f4$var$styleDropdown","menu","parentElement","menuEnd","posAjust","positionClass","dropdownMargin","dropdown","dropup","dropstart","dropend","dropdownPosition","menuStart","menuWidth","menuHeight","clientWidth","ref1","targetLeft","targetTop","targetWidth","leftFullExceed","rightFullExceed","bottomExceed","bottomFullExceed","topExceed","leftExceed","rightExceed","margin","join","$15bab56fec6a53f4$var$toggleDropdownDismiss","open","$15bab56fec6a53f4$var$dropdownDismissHandler","$15bab56fec6a53f4$var$dropdownPreventScroll","$15bab56fec6a53f4$var$dropdownKeyHandler","ev","$15bab56fec6a53f4$var$dropdownLayoutHandler","$15bab56fec6a53f4$var$toggleDropdownHandler","$15bab56fec6a53f4$var$dropdownClickHandler","$15bab56fec6a53f4$var$getCurrentOpenDropdown","currentParent","children","hasData","isForm","activeElement","menuItems","firstElementChild","$15bab56fec6a53f4$var$getMenuItems","$15bab56fec6a53f4$var$Dropdown","Dropdown","currentElement","currentInstance","$15bab56fec6a53f4$var$ariaHidden","$15bab56fec6a53f4$var$ariaModal","$15bab56fec6a53f4$var$removeAttribute","removeAttribute","$15bab56fec6a53f4$var$getDocumentBody","body","$15bab56fec6a53f4$var$modalString","$15bab56fec6a53f4$var$modalComponent","$15bab56fec6a53f4$var$isShadowRoot","$15bab56fec6a53f4$var$isTableElement","$15bab56fec6a53f4$var$getElementContainer","getOffset","majorBlockTags","offsetParent","win","containers","parentNode","nodeName","assignedSlot","shadowRoot","push","every","r","$15bab56fec6a53f4$var$stickyTopClass","$15bab56fec6a53f4$var$positionStickyClass","$15bab56fec6a53f4$var$getFixedItems","$15bab56fec6a53f4$var$measureScrollbar","innerWidth","$15bab56fec6a53f4$var$setScrollbar","overflow","bd","bodyPad","parseInt","sbWidth","fixedItems","paddingRight","fixed","itemPadValue","itemMValue","marginRight","$15bab56fec6a53f4$var$createElement","createElement","attr","newElement","$15bab56fec6a53f4$var$offcanvasString","$15bab56fec6a53f4$var$backdropString","$15bab56fec6a53f4$var$modalBackdropClass","$15bab56fec6a53f4$var$offcanvasBackdropClass","$15bab56fec6a53f4$var$modalActiveSelector","$15bab56fec6a53f4$var$offcanvasActiveSelector","$15bab56fec6a53f4$var$overlay","$15bab56fec6a53f4$var$getCurrentOpen","$15bab56fec6a53f4$var$toggleOverlayType","isModal","targetClass","$15bab56fec6a53f4$var$appendOverlay","container","hasFade","append","$15bab56fec6a53f4$var$showOverlay","$15bab56fec6a53f4$var$hideOverlay","$15bab56fec6a53f4$var$removeOverlay","$15bab56fec6a53f4$var$resetScrollbar","$15bab56fec6a53f4$var$isVisible","$15bab56fec6a53f4$var$modalSelector","$15bab56fec6a53f4$var$modalToggleSelector","$15bab56fec6a53f4$var$modalDismissSelector","$15bab56fec6a53f4$var$modalStaticClass","$15bab56fec6a53f4$var$modalDefaults","backdrop","$15bab56fec6a53f4$var$getModalInstance","$15bab56fec6a53f4$var$showModalEvent","$15bab56fec6a53f4$var$shownModalEvent","$15bab56fec6a53f4$var$hideModalEvent","$15bab56fec6a53f4$var$hiddenModalEvent","$15bab56fec6a53f4$var$setModalScrollbar","scrollbarWidth","modalOverflow","padStyle","$15bab56fec6a53f4$var$toggleModalDismiss","$15bab56fec6a53f4$var$modalDismissHandler","update","$15bab56fec6a53f4$var$modalKeyHandler","$15bab56fec6a53f4$var$toggleModalHandler","$15bab56fec6a53f4$var$modalClickHandler","$15bab56fec6a53f4$var$afterModalHide","focusElement","$15bab56fec6a53f4$var$afterModalShow","$15bab56fec6a53f4$var$beforeModalShow","$15bab56fec6a53f4$var$beforeModalHide","isStatic","modalDialog","selectedText","targetInsideDialog","$15bab56fec6a53f4$var$staticTransitionEnd","$15bab56fec6a53f4$var$Modal","Modal","bind","overlayDelay","currentOpen","$15bab56fec6a53f4$var$offcanvasComponent","$15bab56fec6a53f4$var$offcanvasSelector","$15bab56fec6a53f4$var$offcanvasToggleSelector","$15bab56fec6a53f4$var$offcanvasDismissSelector","$15bab56fec6a53f4$var$offcanvasTogglingClass","$15bab56fec6a53f4$var$offcanvasDefaults","scroll","$15bab56fec6a53f4$var$getOffcanvasInstance","$15bab56fec6a53f4$var$showOffcanvasEvent","$15bab56fec6a53f4$var$shownOffcanvasEvent","$15bab56fec6a53f4$var$hideOffcanvasEvent","$15bab56fec6a53f4$var$hiddenOffcanvasEvent","$15bab56fec6a53f4$var$toggleOffcanvasEvents","$15bab56fec6a53f4$var$offcanvasTriggerHandler","$15bab56fec6a53f4$var$toggleOffCanvasDismiss","$15bab56fec6a53f4$var$offcanvasKeyDismissHandler","$15bab56fec6a53f4$var$offcanvasDismissHandler","$15bab56fec6a53f4$var$beforeOffcanvasShow","$15bab56fec6a53f4$var$setOffCanvasScrollbar","visibility","$15bab56fec6a53f4$var$showOffcanvasComplete","$15bab56fec6a53f4$var$beforeOffcanvasHide","blur","$15bab56fec6a53f4$var$hideOffcanvasComplete","offCanvasDismiss","selection","visibleTrigger","$15bab56fec6a53f4$var$Offcanvas","Offcanvas","$15bab56fec6a53f4$var$popoverString","$15bab56fec6a53f4$var$popoverComponent","$15bab56fec6a53f4$var$tooltipString","$15bab56fec6a53f4$var$getTipTemplate","tipType","isTooltip","bodyClass","header","$15bab56fec6a53f4$var$isMedia","s","$15bab56fec6a53f4$var$getRectRelativeToOffsetParent","isParentAnElement","rect","$15bab56fec6a53f4$var$isScaledElement","offsets","offsetRect","clientLeft","clientTop","$15bab56fec6a53f4$var$tipClassPositions","$15bab56fec6a53f4$var$styleTip","tooltip","tipPositions","topPosition","leftPosition","rightPosition","arrowTop","arrowLeft","arrowRight","isPopover","tipWidth","tipHeight","htmlcw","htmlch","placement","ref2","parentLeft","parentRight","parentTop","parentCWidth","parentOWidth","parentPosition","fixedParent","staticParent","isSticky","leftBoundry","rightBoundry","ref3","elemWidth","elemHeight","elemRectLeft","elemRectRight","elemRectTop","isWin","scrollX","scrollLeft","scrollY","scrollTop","$15bab56fec6a53f4$var$getNodeScroll","ref4","arrowWidth","arrowHeight","arrowAdjust","horizontal","vertical","className","eX","eY","pageY","clientX","clientY","$15bab56fec6a53f4$var$tooltipDefaults","template","customClass","sanitizeFn","animation","$15bab56fec6a53f4$var$ariaDescribedBy","$15bab56fec6a53f4$var$focusinEvent","$15bab56fec6a53f4$var$focusoutEvent","$15bab56fec6a53f4$var$touchstartEvent","$15bab56fec6a53f4$var$elementUID","$15bab56fec6a53f4$var$elementMapUID","$15bab56fec6a53f4$var$elementIDMap","$15bab56fec6a53f4$var$getUID","elID","elMap","elkey","$15bab56fec6a53f4$var$isFunction","fn","$15bab56fec6a53f4$var$userAgentData","navigator","userAgentData","$15bab56fec6a53f4$var$userAgent","userAgent","$15bab56fec6a53f4$var$appleBrands","$15bab56fec6a53f4$var$isApple","brands","brand","$15bab56fec6a53f4$var$dataOriginalTitle","$15bab56fec6a53f4$var$tooltipComponent","$15bab56fec6a53f4$var$isString","str","$15bab56fec6a53f4$var$setHtml","content","_element","_element1","dirty","trim","tempDocument","DOMParser","parseFromString","childNodes","$15bab56fec6a53f4$var$isVisibleTip","tip","$15bab56fec6a53f4$var$tooltipSelector","$15bab56fec6a53f4$var$titleAttr","$15bab56fec6a53f4$var$getTooltipInstance","$15bab56fec6a53f4$var$toggleTooltipAction","handleTouch","$15bab56fec6a53f4$var$tooltipShownAction","shownTooltipEvent","$15bab56fec6a53f4$var$tooltipHiddenAction","hiddenTooltipEvent","$15bab56fec6a53f4$var$removeTooltip","$15bab56fec6a53f4$var$toggleTooltipHandlers","dismissible","enabled","triggerOptions","split","elemIsMedia","tr","$15bab56fec6a53f4$var$toggleTooltipOpenHandlers","parentModal","parentOffcanvas","scrollTarget","$15bab56fec6a53f4$var$toggleTooltipTitle","titleAtt","$15bab56fec6a53f4$var$Tooltip","Tooltip","tipString","tipComponent","elem","idealContainer","btnClose","titleParts","contentParts","tooltipTemplate","placementClass","htmlMarkup","firstChild","cloneNode","tooltipHeader","tooltipBody","tempTitle","tempContent","tempBtn","tempBtn1","$15bab56fec6a53f4$var$createTip","outTimer","showTooltipEvent","hideTooltipEvent","disable","enable","$15bab56fec6a53f4$var$disposeTooltipComplete","styleTip","$15bab56fec6a53f4$var$popoverSelector","$15bab56fec6a53f4$var$popoverDefaults","$15bab56fec6a53f4$var$Popover","Popover","$15bab56fec6a53f4$var$getElementsByTagName","getElementsByTagName","$15bab56fec6a53f4$var$scrollspyComponent","$15bab56fec6a53f4$var$scrollspyDefaults","$15bab56fec6a53f4$var$activateScrollSpy","$15bab56fec6a53f4$var$updateSpyTargets","targetItem","itemsLength","links","scrollHEIGHT","$15bab56fec6a53f4$var$getScrollHeight","items","maxScroll","innerHeight","$15bab56fec6a53f4$var$getOffsetHeight","link","charAt","offsetTop","$15bab56fec6a53f4$var$clear","item","$15bab56fec6a53f4$var$activate","parents","parentItem","menuItem","parentLink","previousElementSibling","$15bab56fec6a53f4$var$toggleSpyHandlers","refresh","$15bab56fec6a53f4$var$ScrollSpy","ScrollSpy","newActiveItem","$15bab56fec6a53f4$var$ariaSelected","$15bab56fec6a53f4$var$tabString","$15bab56fec6a53f4$var$tabSelector","$15bab56fec6a53f4$var$getTabInstance","$15bab56fec6a53f4$var$showTabEvent","$15bab56fec6a53f4$var$shownTabEvent","$15bab56fec6a53f4$var$hideTabEvent","$15bab56fec6a53f4$var$hiddenTabEvent","$15bab56fec6a53f4$var$tabPrivate","$15bab56fec6a53f4$var$triggerTabEnd","tabContent","nav","$15bab56fec6a53f4$var$triggerTabShow","nextContent","tab","currentHeight","nextHeight","$15bab56fec6a53f4$var$triggerTabHide","$15bab56fec6a53f4$var$getActiveTab","activeTabs","$15bab56fec6a53f4$var$getParentDropdown","$15bab56fec6a53f4$var$toggleTabHandler","$15bab56fec6a53f4$var$tabClickHandler","$15bab56fec6a53f4$var$Tab","Tab","firstTab","firstTabContent","activeDropdown","toggleTab","$15bab56fec6a53f4$var$toastString","$15bab56fec6a53f4$var$toastComponent","$15bab56fec6a53f4$var$toastSelector","$15bab56fec6a53f4$var$toastDismissSelector","$15bab56fec6a53f4$var$toastToggleSelector","$15bab56fec6a53f4$var$showingClass","$15bab56fec6a53f4$var$hideClass","$15bab56fec6a53f4$var$toastDefaults","autohide","$15bab56fec6a53f4$var$getToastInstance","$15bab56fec6a53f4$var$showToastEvent","$15bab56fec6a53f4$var$shownToastEvent","$15bab56fec6a53f4$var$hideToastEvent","$15bab56fec6a53f4$var$hiddenToastEvent","$15bab56fec6a53f4$var$showToastComplete","$15bab56fec6a53f4$var$hideToastComplete","$15bab56fec6a53f4$var$toggleToastHandlers","$15bab56fec6a53f4$var$interactiveToastHandler","$15bab56fec6a53f4$var$toastClickHandler","$15bab56fec6a53f4$var$Toast","Toast","isShown","$15bab56fec6a53f4$var$showToast","$15bab56fec6a53f4$var$hideToast","$15bab56fec6a53f4$var$completeDisposeToast","$15bab56fec6a53f4$var$componentsList","$15bab56fec6a53f4$var$initCallback","context","lookUp","elemCollection","comp","collection","_comp","matches","$15bab56fec6a53f4$var$matches","$15bab56fec6a53f4$export$2e2bcd8739ae039","initCallback","removeDataAPI","compData","_x","$15bab56fec6a53f4$var$removeComponentDataAPI","Version","EventListener","$35d5f4ff5eb0b214$var$refs","modal","primBtn","$35d5f4ff5eb0b214$var$modal","$35d5f4ff5eb0b214$var$promptCounter","$35d5f4ff5eb0b214$var$hasSubacribed","$35d5f4ff5eb0b214$var$timeoutForModal","alert"],"version":3,"file":"17-modal-spam.3bcc894b.js.map"}