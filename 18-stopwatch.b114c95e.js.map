{"mappings":"AAAA,MAAMA,EAAO,CACXC,UAAWC,SAASC,cAAc,uBAClCC,SAAUF,SAASC,cAAc,6BACjCE,QAASH,SAASC,cAAc,6BA2ClC,MAAMG,EAAY,IAvClB,MAOEC,QACE,GAAIC,KAAKC,SACP,OAEF,MAAMC,EAAYC,KAAKC,MACvBJ,KAAKC,UAAW,EAChBD,KAAKK,WAAaC,aAAY,KAC5B,MAAMC,EAAcJ,KAAKC,MACnBI,EAAgBR,KAAKS,kBAAkBF,EAAcL,GAE3DF,KAAKU,OAAOF,EAAc,GACzB,I,CAELG,OACEC,cAAcd,EAAUO,YACxBL,KAAKC,UAAW,EAChB,MAAMY,EAAOb,KAAKS,kBAAkB,GACpCT,KAAKU,OAAOG,E,CAEdC,IAAIC,GACF,OAAOC,OAAOD,GAAOE,SAAS,EAAG,I,CAEnCR,kBAAkBI,GAMhB,MAAO,C,MALOb,KAAKc,IACjBI,KAAKC,MAAMN,EAAS,MAAyB,O,KAElCb,KAAKc,IAAII,KAAKC,MAAMN,EAAS,KAAoB,M,QAC9Cb,KAAKc,IAAII,KAAKC,MAAMN,EAAS,IAAc,M,CAjC7DO,aAAYV,OAAEA,IACZV,KAAKK,WAAa,KAClBL,KAAKC,UAAW,EAChBD,KAAKU,OAASA,C,GAmCc,CAC9BA,OAOF,UAAyBW,MAAEA,EAAKC,KAAEA,EAAIC,QAAEA,IACtC/B,EAAKC,UAAU+B,YAAc,GAAGH,KAASC,KAAQC,G,IALnD/B,EAAKI,SAAS6B,iBAAiB,QAAS3B,EAAUC,MAAM2B,KAAK5B,IAC7DN,EAAKK,QAAQ4B,iBAAiB,QAAS3B,EAAUa,KAAKe,KAAK5B","sources":["src/js/18-stopwatch.js"],"sourcesContent":["const refs = {\n  clockFace: document.querySelector('.js-clock-stopwatch'),\n  startBtn: document.querySelector('button[data-action-start]'),\n  stopBtn: document.querySelector('button[data-action-stop]'),\n};\n\n\nclass Stopwatch {\n  constructor({ onTick }) {\n    this.intervalId = null;\n    this.isActive = false;\n    this.onTick = onTick;\n  }\n\n  start() {\n    if (this.isActive) {\n      return;\n    }\n    const startTime = Date.now();\n    this.isActive = true;\n    this.intervalId = setInterval(() => {\n      const currentTime = Date.now();\n      const stopwatchTime = this.getTimeComponents(currentTime - startTime);\n\n      this.onTick(stopwatchTime);\n    }, 1000);\n  }\n  stop() {\n    clearInterval(stopwatch.intervalId);\n    this.isActive = false;\n    const time = this.getTimeComponents(0);\n    this.onTick(time);\n  }\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n  getTimeComponents(time) {\n    const hours = this.pad(\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n    );\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const seconds = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n    return { hours, mins, seconds };\n  }\n}\n\nconst stopwatch = new Stopwatch({\n  onTick: updateClockFace,\n});\n\nrefs.startBtn.addEventListener('click', stopwatch.start.bind(stopwatch));\nrefs.stopBtn.addEventListener('click', stopwatch.stop.bind(stopwatch));\n\n\nfunction updateClockFace({ hours, mins, seconds }) {\n  refs.clockFace.textContent = `${hours}:${mins}:${seconds}`;\n}\n"],"names":["$e02864ad1845e0a7$var$refs","clockFace","document","querySelector","startBtn","stopBtn","$e02864ad1845e0a7$var$stopwatch","start","this","isActive","startTime","Date","now","intervalId","setInterval","currentTime","stopwatchTime","getTimeComponents","onTick","stop","clearInterval","time","pad","value","String","padStart","Math","floor","constructor","hours","mins","seconds","textContent","addEventListener","bind"],"version":3,"file":"18-stopwatch.b114c95e.js.map"}