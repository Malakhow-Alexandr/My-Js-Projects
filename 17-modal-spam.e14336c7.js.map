{"mappings":"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","sources":["node_modules/bootstrap.native/dist/bootstrap-native.esm.js"],"sourcesContent":["/*!\n  * Native JavaScript for Bootstrap v4.2.0 (https://thednp.github.io/bootstrap.native/)\n  * Copyright 2015-2022 © dnp_theme\n  * Licensed under MIT (https://github.com/thednp/bootstrap.native/blob/master/LICENSE)\n  */\n/** @type {Record<string, any>} */\nconst EventRegistry = {};\n\n/**\n * The global event listener.\n *\n * @type {EventListener}\n * @this {EventTarget}\n */\nfunction globalListener(e) {\n  const that = this;\n  const { type } = e;\n\n  [...EventRegistry[type]].forEach((elementsMap) => {\n    const [element, listenersMap] = elementsMap;\n    /* istanbul ignore else */\n    if (element === that) {\n      [...listenersMap].forEach((listenerMap) => {\n        const [listener, options] = listenerMap;\n        listener.apply(element, [e]);\n\n        if (options && options.once) {\n          removeListener(element, type, listener, options);\n        }\n      });\n    }\n  });\n}\n\n/**\n * Register a new listener with its options and attach the `globalListener`\n * to the target if this is the first listener.\n *\n * @type {Listener.ListenerAction<EventTarget>}\n */\nconst addListener = (element, eventType, listener, options) => {\n  // get element listeners first\n  if (!EventRegistry[eventType]) {\n    EventRegistry[eventType] = new Map();\n  }\n  const oneEventMap = EventRegistry[eventType];\n\n  if (!oneEventMap.has(element)) {\n    oneEventMap.set(element, new Map());\n  }\n  const oneElementMap = oneEventMap.get(element);\n\n  // get listeners size\n  const { size } = oneElementMap;\n\n  // register listener with its options\n  oneElementMap.set(listener, options);\n\n  // add listener last\n  if (!size) {\n    element.addEventListener(eventType, globalListener, options);\n  }\n};\n\n/**\n * Remove a listener from registry and detach the `globalListener`\n * if no listeners are found in the registry.\n *\n * @type {Listener.ListenerAction<EventTarget>}\n */\nconst removeListener = (element, eventType, listener, options) => {\n  // get listener first\n  const oneEventMap = EventRegistry[eventType];\n  const oneElementMap = oneEventMap && oneEventMap.get(element);\n  const savedOptions = oneElementMap && oneElementMap.get(listener);\n\n  // also recover initial options\n  const { options: eventOptions } = savedOptions !== undefined\n    ? savedOptions\n    : { options };\n\n  // unsubscribe second, remove from registry\n  if (oneElementMap && oneElementMap.has(listener)) oneElementMap.delete(listener);\n  if (oneEventMap && (!oneElementMap || !oneElementMap.size)) oneEventMap.delete(element);\n  if (!oneEventMap || !oneEventMap.size) delete EventRegistry[eventType];\n\n  // remove listener last\n  /* istanbul ignore else */\n  if (!oneElementMap || !oneElementMap.size) {\n    element.removeEventListener(eventType, globalListener, eventOptions);\n  }\n};\n\n/**\n * Advanced event listener based on subscribe / publish pattern.\n * @see https://www.patterns.dev/posts/classic-design-patterns/#observerpatternjavascript\n * @see https://gist.github.com/shystruk/d16c0ee7ac7d194da9644e5d740c8338#file-subpub-js\n * @see https://hackernoon.com/do-you-still-register-window-event-listeners-in-each-component-react-in-example-31a4b1f6f1c8\n */\nconst Listener = {\n  on: addListener,\n  off: removeListener,\n  globalListener,\n  registry: EventRegistry,\n};\n\n/**\n * A global namespace for `click` event.\n * @type {string}\n */\nconst mouseclickEvent = 'click';\n\n/**\n * A global namespace for 'transitionend' string.\n * @type {string}\n */\nconst transitionEndEvent = 'transitionend';\n\n/**\n * A global namespace for 'transitionDelay' string.\n * @type {string}\n */\nconst transitionDelay = 'transitionDelay';\n\n/**\n * A global namespace for `transitionProperty` string for modern browsers.\n *\n * @type {string}\n */\nconst transitionProperty = 'transitionProperty';\n\n/**\n * Shortcut for `window.getComputedStyle(element).propertyName`\n * static method.\n *\n * * If `element` parameter is not an `HTMLElement`, `getComputedStyle`\n * throws a `ReferenceError`.\n *\n * @param {HTMLElement} element target\n * @param {string} property the css property\n * @return {string} the css property value\n */\nfunction getElementStyle(element, property) {\n  const computedStyle = getComputedStyle(element);\n\n  // must use camelcase strings,\n  // or non-camelcase strings with `getPropertyValue`\n  return property.includes('--')\n    ? computedStyle.getPropertyValue(property)\n    : computedStyle[property];\n}\n\n/**\n * Utility to get the computed `transitionDelay`\n * from Element in miliseconds.\n *\n * @param {HTMLElement} element target\n * @return {number} the value in miliseconds\n */\nfunction getElementTransitionDelay(element) {\n  const propertyValue = getElementStyle(element, transitionProperty);\n  const delayValue = getElementStyle(element, transitionDelay);\n  const delayScale = delayValue.includes('ms') ? /* istanbul ignore next */1 : 1000;\n  const duration = propertyValue && propertyValue !== 'none'\n    ? parseFloat(delayValue) * delayScale : 0;\n\n  return !Number.isNaN(duration) ? duration : /* istanbul ignore next */0;\n}\n\n/**\n * A global namespace for 'transitionDuration' string.\n * @type {string}\n */\nconst transitionDuration = 'transitionDuration';\n\n/**\n * Utility to get the computed `transitionDuration`\n * from Element in miliseconds.\n *\n * @param {HTMLElement} element target\n * @return {number} the value in miliseconds\n */\nfunction getElementTransitionDuration(element) {\n  const propertyValue = getElementStyle(element, transitionProperty);\n  const durationValue = getElementStyle(element, transitionDuration);\n  const durationScale = durationValue.includes('ms') ? /* istanbul ignore next */1 : 1000;\n  const duration = propertyValue && propertyValue !== 'none'\n    ? parseFloat(durationValue) * durationScale : 0;\n\n  return !Number.isNaN(duration) ? duration : /* istanbul ignore next */0;\n}\n\n/**\n * Shortcut for the `Element.dispatchEvent(Event)` method.\n *\n * @param {HTMLElement} element is the target\n * @param {Event} event is the `Event` object\n */\nconst dispatchEvent = (element, event) => element.dispatchEvent(event);\n\n/**\n * Utility to make sure callbacks are consistently\n * called when transition ends.\n *\n * @param {HTMLElement} element target\n * @param {EventListener} handler `transitionend` callback\n */\nfunction emulateTransitionEnd(element, handler) {\n  let called = 0;\n  const endEvent = new Event(transitionEndEvent);\n  const duration = getElementTransitionDuration(element);\n  const delay = getElementTransitionDelay(element);\n\n  if (duration) {\n    /**\n     * Wrap the handler in on -> off callback\n     * @type {EventListener} e Event object\n     */\n    const transitionEndWrapper = (e) => {\n      /* istanbul ignore else */\n      if (e.target === element) {\n        handler.apply(element, [e]);\n        element.removeEventListener(transitionEndEvent, transitionEndWrapper);\n        called = 1;\n      }\n    };\n    element.addEventListener(transitionEndEvent, transitionEndWrapper);\n    setTimeout(() => {\n      /* istanbul ignore next */\n      if (!called) dispatchEvent(element, endEvent);\n    }, duration + delay + 17);\n  } else {\n    handler.apply(element, [endEvent]);\n  }\n}\n\n/**\n * Checks if an object is a `Node`.\n *\n * @param {any} node the target object\n * @returns {boolean} the query result\n */\nconst isNode = (element) => (element && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n  .some((x) => +element.nodeType === x)) || false;\n\n/**\n * Check if a target object is `Window`.\n * => equivalent to `object instanceof Window`\n *\n * @param {any} object the target object\n * @returns {boolean} the query result\n */\nconst isWindow = (object) => (object && object.constructor.name === 'Window') || false;\n\n/**\n * Checks if an object is a `Document`.\n * @see https://dom.spec.whatwg.org/#node\n *\n * @param {any} object the target object\n * @returns {boolean} the query result\n */\nconst isDocument = (object) => (object && object.nodeType === 9) || false;\n\n/**\n * Returns the `document` or the `#document` element.\n * @see https://github.com/floating-ui/floating-ui\n * @param {(Node | Window)=} node\n * @returns {Document}\n */\nfunction getDocument(node) {\n  // node instanceof Document\n  if (isDocument(node)) return node;\n  // node instanceof Node\n  if (isNode(node)) return node.ownerDocument;\n  // node instanceof Window\n  if (isWindow(node)) return node.document;\n  // node is undefined | NULL\n  return window.document;\n}\n\n/**\n * Utility to check if target is typeof `HTMLElement`, `Element`, `Node`\n * or find one that matches a selector.\n *\n * @param {Node | string} selector the input selector or target element\n * @param {ParentNode=} parent optional node to look into\n * @return {HTMLElement?} the `HTMLElement` or `querySelector` result\n */\nfunction querySelector(selector, parent) {\n  if (isNode(selector)) {\n    return selector;\n  }\n  const lookUp = isNode(parent) ? parent : getDocument();\n\n  return lookUp.querySelector(selector);\n}\n\n/**\n * Shortcut for `HTMLElement.closest` method which also works\n * with children of `ShadowRoot`. The order of the parameters\n * is intentional since they're both required.\n *\n * @see https://stackoverflow.com/q/54520554/803358\n *\n * @param {HTMLElement} element Element to look into\n * @param {string} selector the selector name\n * @return {HTMLElement?} the query result\n */\nfunction closest(element, selector) {\n  return element ? (element.closest(selector)\n    // break out of `ShadowRoot`\n    || closest(element.getRootNode().host, selector)) : null;\n}\n\n/**\n * Shortcut for `Object.assign()` static method.\n * @param  {Record<string, any>} obj a target object\n * @param  {Record<string, any>} source a source object\n */\nconst ObjectAssign = (obj, source) => Object.assign(obj, source);\n\n/**\n * Check class in `HTMLElement.classList`.\n *\n * @param {HTMLElement} element target\n * @param {string} classNAME to check\n * @returns {boolean}\n */\nfunction hasClass(element, classNAME) {\n  return element.classList.contains(classNAME);\n}\n\n/**\n * Remove class from `HTMLElement.classList`.\n *\n * @param {HTMLElement} element target\n * @param {string} classNAME to remove\n * @returns {void}\n */\nfunction removeClass(element, classNAME) {\n  element.classList.remove(classNAME);\n}\n\n/**\n * Checks if an element is an `HTMLElement`.\n * @see https://dom.spec.whatwg.org/#node\n *\n * @param {any} element the target object\n * @returns {boolean} the query result\n */\nconst isHTMLElement = (element) => (element && element.nodeType === 1) || false;\n\n/** @type {Map<string, Map<HTMLElement, Record<string, any>>>} */\nconst componentData = new Map();\n/**\n * An interface for web components background data.\n * @see https://github.com/thednp/bootstrap.native/blob/master/src/components/base-component.js\n */\nconst Data = {\n  /**\n   * Sets web components data.\n   * @param {HTMLElement} element target element\n   * @param {string} component the component's name or a unique key\n   * @param {Record<string, any>} instance the component instance\n   */\n  set: (element, component, instance) => {\n    if (!isHTMLElement(element)) return;\n\n    /* istanbul ignore else */\n    if (!componentData.has(component)) {\n      componentData.set(component, new Map());\n    }\n\n    const instanceMap = componentData.get(component);\n    // not undefined, but defined right above\n    instanceMap.set(element, instance);\n  },\n\n  /**\n   * Returns all instances for specified component.\n   * @param {string} component the component's name or a unique key\n   * @returns {Map<HTMLElement, Record<string, any>>?} all the component instances\n   */\n  getAllFor: (component) => {\n    const instanceMap = componentData.get(component);\n\n    return instanceMap || null;\n  },\n\n  /**\n   * Returns the instance associated with the target.\n   * @param {HTMLElement} element target element\n   * @param {string} component the component's name or a unique key\n   * @returns {Record<string, any>?} the instance\n   */\n  get: (element, component) => {\n    if (!isHTMLElement(element) || !component) return null;\n    const allForC = Data.getAllFor(component);\n    const instance = element && allForC && allForC.get(element);\n\n    return instance || null;\n  },\n\n  /**\n   * Removes web components data.\n   * @param {HTMLElement} element target element\n   * @param {string} component the component's name or a unique key\n   */\n  remove: (element, component) => {\n    const instanceMap = componentData.get(component);\n    if (!instanceMap || !isHTMLElement(element)) return;\n\n    instanceMap.delete(element);\n\n    /* istanbul ignore else */\n    if (instanceMap.size === 0) {\n      componentData.delete(component);\n    }\n  },\n};\n\n/**\n * An alias for `Data.get()`.\n * @type {SHORTY.getInstance<any>}\n */\nconst getInstance = (target, component) => Data.get(target, component);\n\n/**\n * Checks if an object is an `Object`.\n *\n * @param {any} obj the target object\n * @returns {boolean} the query result\n */\nconst isObject = (obj) => (typeof obj === 'object') || false;\n\n/**\n * Returns a namespaced `CustomEvent` specific to each component.\n * @param {string} EventType Event.type\n * @param {Record<string, any>=} config Event.options | Event.properties\n * @returns {SHORTY.OriginalEvent} a new namespaced event\n */\nfunction OriginalEvent(EventType, config) {\n  const OriginalCustomEvent = new CustomEvent(EventType, {\n    cancelable: true, bubbles: true,\n  });\n\n  /* istanbul ignore else */\n  if (isObject(config)) {\n    ObjectAssign(OriginalCustomEvent, config);\n  }\n  return OriginalCustomEvent;\n}\n\n/**\n * Global namespace for most components `fade` class.\n */\nconst fadeClass = 'fade';\n\n/**\n * Global namespace for most components `show` class.\n */\nconst showClass = 'show';\n\n/**\n * Global namespace for most components `dismiss` option.\n */\nconst dataBsDismiss = 'data-bs-dismiss';\n\n/** @type {string} */\nconst alertString = 'alert';\n\n/** @type {string} */\nconst alertComponent = 'Alert';\n\n/**\n * Shortcut for `HTMLElement.getAttribute()` method.\n * @param {HTMLElement} element target element\n * @param {string} attribute attribute name\n * @returns {string?} attribute value\n */\nconst getAttribute = (element, attribute) => element.getAttribute(attribute);\n\n/**\n * The raw value or a given component option.\n *\n * @typedef {string | HTMLElement | Function | number | boolean | null} niceValue\n */\n\n/**\n * Utility to normalize component options\n *\n * @param {any} value the input value\n * @return {niceValue} the normalized value\n */\nfunction normalizeValue(value) {\n  if (['true', true].includes(value)) { // boolean\n  // if ('true' === value) { // boolean\n    return true;\n  }\n\n  if (['false', false].includes(value)) { // boolean\n  // if ('false' === value) { // boolean\n    return false;\n  }\n\n  if (value === '' || value === 'null') { // null\n    return null;\n  }\n\n  if (value !== '' && !Number.isNaN(+value)) { // number\n    return +value;\n  }\n\n  // string / function / HTMLElement / object\n  return value;\n}\n\n/**\n * Shortcut for `Object.keys()` static method.\n * @param  {Record<string, any>} obj a target object\n * @returns {string[]}\n */\nconst ObjectKeys = (obj) => Object.keys(obj);\n\n/**\n * Shortcut for `String.toLowerCase()`.\n *\n * @param {string} source input string\n * @returns {string} lowercase output string\n */\nconst toLowerCase = (source) => source.toLowerCase();\n\n/**\n * Utility to normalize component options.\n *\n * @param {HTMLElement} element target\n * @param {Record<string, any>} defaultOps component default options\n * @param {Record<string, any>} inputOps component instance options\n * @param {string=} ns component namespace\n * @return {Record<string, any>} normalized component options object\n */\nfunction normalizeOptions(element, defaultOps, inputOps, ns) {\n  const data = { ...element.dataset };\n  /** @type {Record<string, any>} */\n  const normalOps = {};\n  /** @type {Record<string, any>} */\n  const dataOps = {};\n  const title = 'title';\n\n  ObjectKeys(data).forEach((k) => {\n    const key = ns && k.includes(ns)\n      ? k.replace(ns, '').replace(/[A-Z]/, (match) => toLowerCase(match))\n      : k;\n\n    dataOps[key] = normalizeValue(data[k]);\n  });\n\n  ObjectKeys(inputOps).forEach((k) => {\n    inputOps[k] = normalizeValue(inputOps[k]);\n  });\n\n  ObjectKeys(defaultOps).forEach((k) => {\n    /* istanbul ignore else */\n    if (k in inputOps) {\n      normalOps[k] = inputOps[k];\n    } else if (k in dataOps) {\n      normalOps[k] = dataOps[k];\n    } else {\n      normalOps[k] = k === title\n        ? getAttribute(element, title)\n        : defaultOps[k];\n    }\n  });\n\n  return normalOps;\n}\n\nvar version = \"4.2.0\";\n\nconst Version = version;\n\n/* Native JavaScript for Bootstrap 5 | Base Component\n----------------------------------------------------- */\n\n/** Returns a new `BaseComponent` instance. */\nclass BaseComponent {\n  /**\n   * @param {HTMLElement | string} target `Element` or selector string\n   * @param {BSN.ComponentOptions=} config component instance options\n   */\n  constructor(target, config) {\n    const self = this;\n    const element = querySelector(target);\n\n    if (!element) {\n      throw Error(`${self.name} Error: \"${target}\" is not a valid selector.`);\n    }\n\n    /** @static @type {BSN.ComponentOptions} */\n    self.options = {};\n\n    const prevInstance = Data.get(element, self.name);\n    if (prevInstance) prevInstance.dispose();\n\n    /** @type {HTMLElement} */\n    self.element = element;\n\n    /* istanbul ignore else */\n    if (self.defaults && ObjectKeys(self.defaults).length) {\n      self.options = normalizeOptions(element, self.defaults, (config || {}), 'bs');\n    }\n\n    Data.set(element, self.name, self);\n  }\n\n  /* eslint-disable */\n  /* istanbul ignore next */\n  /** @static */\n  get version() { return Version; }\n\n  /* eslint-enable */\n  /* istanbul ignore next */\n  /** @static */\n  get name() { return this.constructor.name; }\n\n  /* istanbul ignore next */\n  /** @static */\n  get defaults() { return this.constructor.defaults; }\n\n  /**\n   * Removes component from target element;\n   */\n  dispose() {\n    const self = this;\n    Data.remove(self.element, self.name);\n    ObjectKeys(self).forEach((prop) => { self[prop] = null; });\n  }\n}\n\n/* Native JavaScript for Bootstrap 5 | Alert\n-------------------------------------------- */\n\n// ALERT PRIVATE GC\n// ================\nconst alertSelector = `.${alertString}`;\nconst alertDismissSelector = `[${dataBsDismiss}=\"${alertString}\"]`;\n\n/**\n * Static method which returns an existing `Alert` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Alert>}\n */\nconst getAlertInstance = (element) => getInstance(element, alertComponent);\n\n/**\n* An `Alert` initialization callback.\n* @type {BSN.InitCallback<Alert>}\n*/\nconst alertInitCallback = (element) => new Alert(element);\n\n// ALERT CUSTOM EVENTS\n// ===================\nconst closeAlertEvent = OriginalEvent(`close.bs.${alertString}`);\nconst closedAlertEvent = OriginalEvent(`closed.bs.${alertString}`);\n\n// ALERT EVENT HANDLER\n// ===================\n/**\n * Alert `transitionend` callback.\n * @param {Alert} self target Alert instance\n */\nfunction alertTransitionEnd(self) {\n  const { element } = self;\n  toggleAlertHandler(self);\n\n  dispatchEvent(element, closedAlertEvent);\n\n  self.dispose();\n  element.remove();\n}\n\n// ALERT PRIVATE METHOD\n// ====================\n/**\n * Toggle on / off the `click` event listener.\n * @param {Alert} self the target alert instance\n * @param {boolean=} add when `true`, event listener is added\n */\nfunction toggleAlertHandler(self, add) {\n  const action = add ? addListener : removeListener;\n  const { dismiss } = self;\n  /* istanbul ignore else */\n  if (dismiss) action(dismiss, mouseclickEvent, self.close);\n}\n\n// ALERT DEFINITION\n// ================\n/** Creates a new Alert instance. */\nclass Alert extends BaseComponent {\n  /** @param {HTMLElement | string} target element or selector */\n  constructor(target) {\n    super(target);\n    // bind\n    const self = this;\n\n    // initialization element\n    const { element } = self;\n\n    // the dismiss button\n    /** @static @type {HTMLElement?} */\n    self.dismiss = querySelector(alertDismissSelector, element);\n\n    // add event listener\n    toggleAlertHandler(self, true);\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() { return alertComponent; }\n  /* eslint-enable */\n\n  // ALERT PUBLIC METHODS\n  // ====================\n  /**\n   * Public method that hides the `.alert` element from the user,\n   * disposes the instance once animation is complete, then\n   * removes the element from the DOM.\n   *\n   * @param {Event=} e most likely the `click` event\n   * @this {Alert} the `Alert` instance or `EventTarget`\n   */\n  close(e) {\n    const self = e ? getAlertInstance(closest(this, alertSelector)) : this;\n    const { element } = self;\n\n    /* istanbul ignore else */\n    if (element && hasClass(element, showClass)) {\n      dispatchEvent(element, closeAlertEvent);\n      if (closeAlertEvent.defaultPrevented) return;\n\n      removeClass(element, showClass);\n\n      if (hasClass(element, fadeClass)) {\n        emulateTransitionEnd(element, () => alertTransitionEnd(self));\n      } else alertTransitionEnd(self);\n    }\n  }\n\n  /** Remove the component from target element. */\n  dispose() {\n    toggleAlertHandler(this);\n    super.dispose();\n  }\n}\n\nObjectAssign(Alert, {\n  selector: alertSelector,\n  init: alertInitCallback,\n  getInstance: getAlertInstance,\n});\n\n/**\n * A global namespace for aria-pressed.\n * @type {string}\n */\nconst ariaPressed = 'aria-pressed';\n\n/**\n * Shortcut for `HTMLElement.setAttribute()` method.\n * @param  {HTMLElement} element target element\n * @param  {string} attribute attribute name\n * @param  {string} value attribute value\n * @returns {void}\n */\nconst setAttribute = (element, attribute, value) => element.setAttribute(attribute, value);\n\n/**\n * Add class to `HTMLElement.classList`.\n *\n * @param {HTMLElement} element target\n * @param {string} classNAME to add\n * @returns {void}\n */\nfunction addClass(element, classNAME) {\n  element.classList.add(classNAME);\n}\n\n/**\n * Global namespace for most components active class.\n */\nconst activeClass = 'active';\n\n/**\n * Global namespace for most components `toggle` option.\n */\nconst dataBsToggle = 'data-bs-toggle';\n\n/** @type {string} */\nconst buttonString = 'button';\n\n/** @type {string} */\nconst buttonComponent = 'Button';\n\n/* Native JavaScript for Bootstrap 5 | Button\n---------------------------------------------*/\n\n// BUTTON PRIVATE GC\n// =================\nconst buttonSelector = `[${dataBsToggle}=\"${buttonString}\"]`;\n\n/**\n * Static method which returns an existing `Button` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Button>}\n */\nconst getButtonInstance = (element) => getInstance(element, buttonComponent);\n\n/**\n * A `Button` initialization callback.\n * @type {BSN.InitCallback<Button>}\n */\nconst buttonInitCallback = (element) => new Button(element);\n\n// BUTTON PRIVATE METHOD\n// =====================\n/**\n * Toggles on/off the `click` event listener.\n * @param {Button} self the `Button` instance\n * @param {boolean=} add when `true`, event listener is added\n */\nfunction toggleButtonHandler(self, add) {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, self.toggle);\n}\n\n// BUTTON DEFINITION\n// =================\n/** Creates a new `Button` instance. */\nclass Button extends BaseComponent {\n  /**\n   * @param {HTMLElement | string} target usually a `.btn` element\n   */\n  constructor(target) {\n    super(target);\n    const self = this;\n\n    // initialization element\n    const { element } = self;\n\n    // set initial state\n    /** @type {boolean} */\n    self.isActive = hasClass(element, activeClass);\n    setAttribute(element, ariaPressed, `${!!self.isActive}`);\n\n    // add event listener\n    toggleButtonHandler(self, true);\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() { return buttonComponent; }\n  /* eslint-enable */\n\n  // BUTTON PUBLIC METHODS\n  // =====================\n  /**\n   * Toggles the state of the target button.\n   * @param {MouseEvent} e usually `click` Event object\n   */\n  toggle(e) {\n    if (e) e.preventDefault();\n    const self = e ? getButtonInstance(this) : this;\n    if (!self.element) return;\n    const { element, isActive } = self;\n\n    if (hasClass(element, 'disabled')) return;\n\n    const action = isActive ? removeClass : addClass;\n    action(element, activeClass);\n    setAttribute(element, ariaPressed, isActive ? 'false' : 'true');\n    self.isActive = hasClass(element, activeClass);\n  }\n\n  /** Removes the `Button` component from the target element. */\n  dispose() {\n    toggleButtonHandler(this);\n    super.dispose();\n  }\n}\n\nObjectAssign(Button, {\n  selector: buttonSelector,\n  init: buttonInitCallback,\n  getInstance: getButtonInstance,\n});\n\n/**\n * A global namespace for `mouseenter` event.\n * @type {string}\n */\nconst mouseenterEvent = 'mouseenter';\n\n/**\n * A global namespace for `mouseleave` event.\n * @type {string}\n */\nconst mouseleaveEvent = 'mouseleave';\n\n/**\n * A global namespace for `keydown` event.\n * @type {string}\n */\nconst keydownEvent = 'keydown';\n\n/**\n * A global namespace for `ArrowLeft` key.\n * @type {string} e.which = 37 equivalent\n */\nconst keyArrowLeft = 'ArrowLeft';\n\n/**\n * A global namespace for `ArrowRight` key.\n * @type {string} e.which = 39 equivalent\n */\nconst keyArrowRight = 'ArrowRight';\n\n/**\n * A global namespace for `pointerdown` event.\n * @type {string}\n */\nconst pointerdownEvent = 'pointerdown';\n\n/**\n * A global namespace for `pointermove` event.\n * @type {string}\n */\nconst pointermoveEvent = 'pointermove';\n\n/**\n * A global namespace for `pointerup` event.\n * @type {string}\n */\nconst pointerupEvent = 'pointerup';\n\n/**\n * Returns the bounding client rect of a target `HTMLElement`.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param {HTMLElement} element event.target\n * @param {boolean=} includeScale when *true*, the target scale is also computed\n * @returns {SHORTY.BoundingClientRect} the bounding client rect object\n */\nfunction getBoundingClientRect(element, includeScale) {\n  const {\n    width, height, top, right, bottom, left,\n  } = element.getBoundingClientRect();\n  let scaleX = 1;\n  let scaleY = 1;\n\n  if (includeScale && isHTMLElement(element)) {\n    const { offsetWidth, offsetHeight } = element;\n    scaleX = offsetWidth > 0 ? Math.round(width) / offsetWidth\n      : /* istanbul ignore next */1;\n    scaleY = offsetHeight > 0 ? Math.round(height) / offsetHeight\n      : /* istanbul ignore next */1;\n  }\n\n  return {\n    width: width / scaleX,\n    height: height / scaleY,\n    top: top / scaleY,\n    right: right / scaleX,\n    bottom: bottom / scaleY,\n    left: left / scaleX,\n    x: left / scaleX,\n    y: top / scaleY,\n  };\n}\n\n/**\n * Returns the `document.documentElement` or the `<html>` element.\n *\n * @param {(Node | Window)=} node\n * @returns {HTMLHtmlElement}\n */\nfunction getDocumentElement(node) {\n  return getDocument(node).documentElement;\n}\n\n/**\n * Utility to determine if an `HTMLElement`\n * is partially visible in viewport.\n *\n * @param {HTMLElement} element target\n * @return {boolean} the query result\n */\nconst isElementInScrollRange = (element) => {\n  if (!element || !isNode(element)) return false;\n\n  const { top, bottom } = getBoundingClientRect(element);\n  const { clientHeight } = getDocumentElement(element);\n  return top <= clientHeight && bottom >= 0;\n};\n\n/**\n * Checks if a page is Right To Left.\n * @param {HTMLElement=} node the target\n * @returns {boolean} the query result\n */\nconst isRTL = (node) => getDocumentElement(node).dir === 'rtl';\n\n/**\n * A shortcut for `(document|Element).querySelectorAll`.\n *\n * @param {string} selector the input selector\n * @param {ParentNode=} parent optional node to look into\n * @return {NodeListOf<HTMLElement>} the query result\n */\nfunction querySelectorAll(selector, parent) {\n  const lookUp = isNode(parent) ? parent : getDocument();\n  return lookUp.querySelectorAll(selector);\n}\n\n/**\n * Shortcut for `HTMLElement.getElementsByClassName` method. Some `Node` elements\n * like `ShadowRoot` do not support `getElementsByClassName`.\n *\n * @param {string} selector the class name\n * @param {ParentNode=} parent optional Element to look into\n * @return {HTMLCollectionOf<HTMLElement>} the 'HTMLCollection'\n */\nfunction getElementsByClassName(selector, parent) {\n  const lookUp = isNode(parent) ? parent : getDocument();\n  return lookUp.getElementsByClassName(selector);\n}\n\n/** @type {Map<HTMLElement, any>} */\nconst TimeCache = new Map();\n/**\n * An interface for one or more `TimerHandler`s per `Element`.\n * @see https://github.com/thednp/navbar.js/\n */\nconst Timer = {\n  /**\n   * Sets a new timeout timer for an element, or element -> key association.\n   * @param {HTMLElement} element target element\n   * @param {ReturnType<TimerHandler>} callback the callback\n   * @param {number} delay the execution delay\n   * @param {string=} key a unique key\n   */\n  set: (element, callback, delay, key) => {\n    if (!isHTMLElement(element)) return;\n\n    /* istanbul ignore else */\n    if (key && key.length) {\n      /* istanbul ignore else */\n      if (!TimeCache.has(element)) {\n        TimeCache.set(element, new Map());\n      }\n      const keyTimers = TimeCache.get(element);\n      keyTimers.set(key, setTimeout(callback, delay));\n    } else {\n      TimeCache.set(element, setTimeout(callback, delay));\n    }\n  },\n\n  /**\n   * Returns the timer associated with the target.\n   * @param {HTMLElement} element target element\n   * @param {string=} key a unique\n   * @returns {number?} the timer\n   */\n  get: (element, key) => {\n    if (!isHTMLElement(element)) return null;\n    const keyTimers = TimeCache.get(element);\n\n    if (key && key.length && keyTimers && keyTimers.get) {\n      return keyTimers.get(key) || /* istanbul ignore next */null;\n    }\n    return keyTimers || null;\n  },\n\n  /**\n   * Clears the element's timer.\n   * @param {HTMLElement} element target element\n   * @param {string=} key a unique key\n   */\n  clear: (element, key) => {\n    if (!isHTMLElement(element)) return;\n\n    if (key && key.length) {\n      const keyTimers = TimeCache.get(element);\n      /* istanbul ignore else */\n      if (keyTimers && keyTimers.get) {\n        clearTimeout(keyTimers.get(key));\n        keyTimers.delete(key);\n        /* istanbul ignore else */\n        if (keyTimers.size === 0) {\n          TimeCache.delete(element);\n        }\n      }\n    } else {\n      clearTimeout(TimeCache.get(element));\n      TimeCache.delete(element);\n    }\n  },\n};\n\n/**\n * Utility to force re-paint of an `HTMLElement` target.\n *\n * @param {HTMLElement} element is the target\n * @return {number} the `Element.offsetHeight` value\n */\nconst reflow = (element) => element.offsetHeight;\n\n/**\n * A global namespace for most scroll event listeners.\n * @type {Partial<AddEventListenerOptions>}\n */\nconst passiveHandler = { passive: true };\n\n/**\n * Global namespace for most components `target` option.\n */\nconst dataBsTarget = 'data-bs-target';\n\n/** @type {string} */\nconst carouselString = 'carousel';\n\n/** @type {string} */\nconst carouselComponent = 'Carousel';\n\n/**\n * Global namespace for most components `parent` option.\n */\nconst dataBsParent = 'data-bs-parent';\n\n/**\n * Global namespace for most components `container` option.\n */\nconst dataBsContainer = 'data-bs-container';\n\n/**\n * Returns the `Element` that THIS one targets\n * via `data-bs-target`, `href`, `data-bs-parent` or `data-bs-container`.\n *\n * @param {HTMLElement} element the target element\n * @returns {HTMLElement?} the query result\n */\nfunction getTargetElement(element) {\n  const targetAttr = [dataBsTarget, dataBsParent, dataBsContainer, 'href'];\n  const doc = getDocument(element);\n\n  return targetAttr.map((att) => {\n    const attValue = getAttribute(element, att);\n    if (attValue) {\n      return att === dataBsParent ? closest(element, attValue) : querySelector(attValue, doc);\n    }\n    return null;\n  }).filter((x) => x)[0];\n}\n\n/* Native JavaScript for Bootstrap 5 | Carousel\n----------------------------------------------- */\n\n// CAROUSEL PRIVATE GC\n// ===================\nconst carouselSelector = `[data-bs-ride=\"${carouselString}\"]`;\nconst carouselItem = `${carouselString}-item`;\nconst dataBsSlideTo = 'data-bs-slide-to';\nconst dataBsSlide = 'data-bs-slide';\nconst pausedClass = 'paused';\n\nconst carouselDefaults = {\n  pause: 'hover',\n  keyboard: false,\n  touch: true,\n  interval: 5000,\n};\n\n/**\n * Static method which returns an existing `Carousel` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Carousel>}\n */\nconst getCarouselInstance = (element) => getInstance(element, carouselComponent);\n\n/**\n * A `Carousel` initialization callback.\n * @type {BSN.InitCallback<Carousel>}\n */\nconst carouselInitCallback = (element) => new Carousel(element);\n\nlet startX = 0;\nlet currentX = 0;\nlet endX = 0;\n\n// CAROUSEL CUSTOM EVENTS\n// ======================\nconst carouselSlideEvent = OriginalEvent(`slide.bs.${carouselString}`);\nconst carouselSlidEvent = OriginalEvent(`slid.bs.${carouselString}`);\n\n// CAROUSEL EVENT HANDLERS\n// =======================\n/**\n * The `transitionend` event listener of the `Carousel`.\n * @param {Carousel} self the `Carousel` instance\n */\nfunction carouselTransitionEndHandler(self) {\n  const {\n    index, direction, element, slides, options,\n  } = self;\n\n  // discontinue disposed instances\n  /* istanbul ignore else */\n  if (self.isAnimating && getCarouselInstance(element)) {\n    const activeItem = getActiveIndex(self);\n    const orientation = direction === 'left' ? 'next' : 'prev';\n    const directionClass = direction === 'left' ? 'start' : 'end';\n\n    addClass(slides[index], activeClass);\n    removeClass(slides[index], `${carouselItem}-${orientation}`);\n    removeClass(slides[index], `${carouselItem}-${directionClass}`);\n\n    removeClass(slides[activeItem], activeClass);\n    removeClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n    dispatchEvent(element, carouselSlidEvent);\n    Timer.clear(element, dataBsSlide);\n\n    // check for element, might have been disposed\n    if (!getDocument(element).hidden && options.interval\n      && !self.isPaused) {\n      self.cycle();\n    }\n  }\n}\n\n/**\n * Handles the `mouseenter` events when *options.pause*\n * is set to `hover`.\n *\n * @this {HTMLElement}\n */\nfunction carouselPauseHandler() {\n  const element = this;\n  const self = getCarouselInstance(element);\n  /* istanbul ignore else */\n  if (self && !self.isPaused && !Timer.get(element, pausedClass)) {\n    addClass(element, pausedClass);\n  }\n}\n\n/**\n * Handles the `mouseleave` events when *options.pause*\n * is set to `hover`.\n *\n * @this {HTMLElement}\n */\nfunction carouselResumeHandler() {\n  const element = this;\n  const self = getCarouselInstance(element);\n  /* istanbul ignore else */\n  if (self && self.isPaused && !Timer.get(element, pausedClass)) {\n    self.cycle();\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` indicators.\n *\n * @this {HTMLElement}\n * @param {MouseEvent} e the `Event` object\n */\nfunction carouselIndicatorHandler(e) {\n  e.preventDefault();\n  const indicator = this;\n  const element = closest(indicator, carouselSelector) || getTargetElement(indicator);\n  const self = getCarouselInstance(element);\n\n  if (!self || self.isAnimating) return;\n\n  const newIndex = +getAttribute(indicator, dataBsSlideTo);\n\n  if (indicator && !hasClass(indicator, activeClass) // event target is not active\n    && !Number.isNaN(newIndex)) { // AND has the specific attribute\n    self.to(newIndex); // do the slide\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` arrows.\n *\n * @this {HTMLElement}\n * @param {MouseEvent} e the `Event` object\n */\nfunction carouselControlsHandler(e) {\n  e.preventDefault();\n  const control = this;\n  const element = closest(control, carouselSelector) || getTargetElement(control);\n  const self = getCarouselInstance(element);\n\n  if (!self || self.isAnimating) return;\n  const orientation = getAttribute(control, dataBsSlide);\n\n  /* istanbul ignore else */\n  if (orientation === 'next') {\n    self.next();\n  } else if (orientation === 'prev') {\n    self.prev();\n  }\n}\n\n/**\n * Handles the keyboard `keydown` event for the visible `Carousel` elements.\n *\n * @param {KeyboardEvent} e the `Event` object\n */\nfunction carouselKeyHandler({ code, target }) {\n  const doc = getDocument(target);\n  const [element] = [...querySelectorAll(carouselSelector, doc)]\n    .filter((x) => isElementInScrollRange(x));\n  const self = getCarouselInstance(element);\n\n  /* istanbul ignore next */\n  if (!self || self.isAnimating || /textarea|input/i.test(target.tagName)) return;\n  const RTL = isRTL(element);\n  const arrowKeyNext = !RTL ? keyArrowRight : keyArrowLeft;\n  const arrowKeyPrev = !RTL ? keyArrowLeft : keyArrowRight;\n\n  /* istanbul ignore else */\n  if (code === arrowKeyPrev) self.prev();\n  else if (code === arrowKeyNext) self.next();\n}\n\n// CAROUSEL TOUCH HANDLERS\n// =======================\n/**\n * Handles the `pointerdown` event for the `Carousel` element.\n *\n * @this {HTMLElement}\n * @param {PointerEvent} e the `Event` object\n */\nfunction carouselPointerDownHandler(e) {\n  const element = this;\n  const { target } = e;\n  const self = getCarouselInstance(element);\n\n  // filter pointer event on controls & indicators\n  const { controls, indicators } = self;\n  if ([...controls, ...indicators].some((el) => (el === target || el.contains(target)))) {\n    return;\n  }\n\n  if (!self || self.isAnimating || self.isTouch) { return; }\n\n  startX = e.pageX;\n\n  /* istanbul ignore else */\n  if (element.contains(target)) {\n    self.isTouch = true;\n    toggleCarouselTouchHandlers(self, true);\n  }\n}\n\n/**\n * Handles the `pointermove` event for the `Carousel` element.\n *\n * @this {HTMLElement}\n * @param {PointerEvent} e\n */\nfunction carouselPointerMoveHandler(e) {\n  // const self = getCarouselInstance(this);\n\n  // if (!self || !self.isTouch) { return; }\n\n  currentX = e.pageX;\n}\n\n/**\n * Handles the `pointerup` event for the `Carousel` element.\n *\n * @this {HTMLElement}\n\n * @param {PointerEvent} e\n */\nfunction carouselPointerUpHandler(e) {\n  const { target } = e;\n  const doc = getDocument(target);\n  const self = [...querySelectorAll(carouselSelector, doc)]\n    .map((c) => getCarouselInstance(c)).find((i) => i.isTouch);\n\n  // impossible to satisfy\n  /* istanbul ignore next */\n  if (!self) { return; }\n\n  const { element, index } = self;\n  const RTL = isRTL(target);\n\n  self.isTouch = false;\n  toggleCarouselTouchHandlers(self);\n\n  if (doc.getSelection().toString().length) {\n    // reset pointer position\n    startX = 0; currentX = 0; endX = 0;\n    return;\n  }\n\n  endX = e.pageX;\n\n  // the event target is outside the carousel context\n  // OR swipe distance is less than 120px\n  /* istanbul ignore else */\n  if (!element.contains(target) || Math.abs(startX - endX) < 120) {\n    // reset pointer position\n    startX = 0; currentX = 0; endX = 0;\n    return;\n  }\n  // OR determine next index to slide to\n  /* istanbul ignore else */\n  if (currentX < startX) {\n    self.to(index + (RTL ? -1 : 1));\n  } else if (currentX > startX) {\n    self.to(index + (RTL ? 1 : -1));\n  }\n  // reset pointer position\n  startX = 0; currentX = 0; endX = 0;\n}\n\n// CAROUSEL PRIVATE METHODS\n// ========================\n/**\n * Sets active indicator for the `Carousel` instance.\n * @param {Carousel} self the `Carousel` instance\n * @param {number} pageIndex the index of the new active indicator\n */\nfunction activateCarouselIndicator(self, pageIndex) {\n  const { indicators } = self;\n  [...indicators].forEach((x) => removeClass(x, activeClass));\n\n  /* istanbul ignore else */\n  if (self.indicators[pageIndex]) addClass(indicators[pageIndex], activeClass);\n}\n\n/**\n * Toggles the pointer event listeners for a given `Carousel` instance.\n * @param {Carousel} self the `Carousel` instance\n * @param {boolean=} add when `TRUE` event listeners are added\n */\nfunction toggleCarouselTouchHandlers(self, add) {\n  const { element } = self;\n  const action = add ? addListener : removeListener;\n  action(getDocument(element), pointermoveEvent, carouselPointerMoveHandler, passiveHandler);\n  action(getDocument(element), pointerupEvent, carouselPointerUpHandler, passiveHandler);\n}\n\n/**\n * Toggles all event listeners for a given `Carousel` instance.\n * @param {Carousel} self the `Carousel` instance\n * @param {boolean=} add when `TRUE` event listeners are added\n */\nfunction toggleCarouselHandlers(self, add) {\n  const {\n    element, options, slides, controls, indicators,\n  } = self;\n  const {\n    touch, pause, interval, keyboard,\n  } = options;\n  const action = add ? addListener : removeListener;\n\n  if (pause && interval) {\n    action(element, mouseenterEvent, carouselPauseHandler);\n    action(element, mouseleaveEvent, carouselResumeHandler);\n  }\n\n  if (touch && slides.length > 2) {\n    action(element, pointerdownEvent, carouselPointerDownHandler, passiveHandler);\n  }\n\n  /* istanbul ignore else */\n  if (controls.length) {\n    controls.forEach((arrow) => {\n      /* istanbul ignore else */\n      if (arrow) action(arrow, mouseclickEvent, carouselControlsHandler);\n    });\n  }\n\n  /* istanbul ignore else */\n  if (indicators.length) {\n    indicators.forEach((indicator) => {\n      action(indicator, mouseclickEvent, carouselIndicatorHandler);\n    });\n  }\n\n  if (keyboard) action(getDocument(element), keydownEvent, carouselKeyHandler);\n}\n\n/**\n * Returns the index of the current active item.\n * @param {Carousel} self the `Carousel` instance\n * @returns {number} the query result\n */\nfunction getActiveIndex(self) {\n  const { slides, element } = self;\n  const activeItem = querySelector(`.${carouselItem}.${activeClass}`, element);\n  return [...slides].indexOf(activeItem);\n}\n\n// CAROUSEL DEFINITION\n// ===================\n/** Creates a new `Carousel` instance. */\nclass Carousel extends BaseComponent {\n  /**\n   * @param {HTMLElement | string} target mostly a `.carousel` element\n   * @param {BSN.Options.Carousel=} config instance options\n   */\n  constructor(target, config) {\n    super(target, config);\n    // bind\n    const self = this;\n    // initialization element\n    const { element } = self;\n\n    // additional properties\n    /** @type {string} */\n    self.direction = isRTL(element) ? 'right' : 'left';\n    /** @type {number} */\n    self.index = 0;\n    /** @type {boolean} */\n    self.isTouch = false;\n\n    // carousel elements\n    // a LIVE collection is prefferable\n    self.slides = getElementsByClassName(carouselItem, element);\n    const { slides } = self;\n\n    // invalidate when not enough items\n    // no need to go further\n    if (slides.length < 2) { return; }\n    // external controls must be within same document context\n    const doc = getDocument(element);\n\n    self.controls = [\n      ...querySelectorAll(`[${dataBsSlide}]`, element),\n      ...querySelectorAll(`[${dataBsSlide}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n    ];\n\n    /** @type {HTMLElement?} */\n    self.indicator = querySelector(`.${carouselString}-indicators`, element);\n\n    // a LIVE collection is prefferable\n    /** @type {HTMLElement[]} */\n    self.indicators = [\n      ...(self.indicator ? querySelectorAll(`[${dataBsSlideTo}]`, self.indicator) : []),\n      ...querySelectorAll(`[${dataBsSlideTo}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n    ];\n\n    // set JavaScript and DATA API options\n    const { options } = self;\n\n    // don't use TRUE as interval, it's actually 0, use the default 5000ms better\n    self.options.interval = options.interval === true\n      ? carouselDefaults.interval\n      : options.interval;\n\n    // set first slide active if none\n    /* istanbul ignore else */\n    if (getActiveIndex(self) < 0) {\n      addClass(slides[0], activeClass);\n      /* istanbul ignore else */\n      if (self.indicators.length) activateCarouselIndicator(self, 0);\n    }\n\n    // attach event handlers\n    toggleCarouselHandlers(self, true);\n\n    // start to cycle if interval is set\n    if (options.interval) self.cycle();\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() { return carouselComponent; }\n  /**\n   * Returns component default options.\n   */\n  get defaults() { return carouselDefaults; }\n  /* eslint-enable */\n\n  /**\n   * Check if instance is paused.\n   * @returns {boolean}\n  */\n  get isPaused() {\n    return hasClass(this.element, pausedClass);\n  }\n\n  /**\n   * Check if instance is animating.\n   * @returns {boolean}\n  */\n  get isAnimating() {\n    return querySelector(`.${carouselItem}-next,.${carouselItem}-prev`, this.element) !== null;\n  }\n\n  // CAROUSEL PUBLIC METHODS\n  // =======================\n  /** Slide automatically through items. */\n  cycle() {\n    const self = this;\n    const {\n      element, options, isPaused, index,\n    } = self;\n\n    Timer.clear(element, carouselString);\n    if (isPaused) {\n      Timer.clear(element, pausedClass);\n      removeClass(element, pausedClass);\n    }\n\n    Timer.set(element, () => {\n      // it's very important to check self.element\n      // where instance might have been disposed\n      /* istanbul ignore else */\n      if (self.element && !self.isPaused && !self.isTouch\n        && isElementInScrollRange(element)) {\n        self.to(index + 1);\n      }\n    }, options.interval, carouselString);\n  }\n\n  /** Pause the automatic cycle. */\n  pause() {\n    const self = this;\n    const { element, options } = self;\n    /* istanbul ignore else */\n    if (!self.isPaused && options.interval) {\n      addClass(element, pausedClass);\n      Timer.set(element, () => {}, 1, pausedClass);\n    }\n  }\n\n  /** Slide to the next item. */\n  next() {\n    const self = this;\n    /* istanbul ignore else */\n    if (!self.isAnimating) { self.to(self.index + 1); }\n  }\n\n  /** Slide to the previous item. */\n  prev() {\n    const self = this;\n    /* istanbul ignore else */\n    if (!self.isAnimating) { self.to(self.index - 1); }\n  }\n\n  /**\n   * Jump to the item with the `idx` index.\n   * @param {number} idx the index of the item to jump to\n   */\n  to(idx) {\n    const self = this;\n    const {\n      element, slides, options,\n    } = self;\n    const activeItem = getActiveIndex(self);\n    const RTL = isRTL(element);\n    let next = idx;\n\n    // when controled via methods, make sure to check again\n    // first return if we're on the same item #227\n    // `to()` must be SPAM protected by Timer\n    if (self.isAnimating || activeItem === next || Timer.get(element, dataBsSlide)) return;\n\n    // determine transition direction\n    /* istanbul ignore else */\n    if ((activeItem < next) || (activeItem === 0 && next === slides.length - 1)) {\n      self.direction = RTL ? 'right' : 'left'; // next\n    } else if ((activeItem > next) || (activeItem === slides.length - 1 && next === 0)) {\n      self.direction = RTL ? 'left' : 'right'; // prev\n    }\n    const { direction } = self;\n\n    // find the right next index\n    if (next < 0) { next = slides.length - 1; } else if (next >= slides.length) { next = 0; }\n\n    // orientation, class name, eventProperties\n    const orientation = direction === 'left' ? 'next' : 'prev';\n    const directionClass = direction === 'left' ? 'start' : 'end';\n\n    const eventProperties = {\n      relatedTarget: slides[next],\n      from: activeItem,\n      to: next,\n      direction,\n    };\n\n    // update event properties\n    ObjectAssign(carouselSlideEvent, eventProperties);\n    ObjectAssign(carouselSlidEvent, eventProperties);\n\n    // discontinue when prevented\n    dispatchEvent(element, carouselSlideEvent);\n    if (carouselSlideEvent.defaultPrevented) return;\n\n    // update index\n    self.index = next;\n    activateCarouselIndicator(self, next);\n\n    if (getElementTransitionDuration(slides[next]) && hasClass(element, 'slide')) {\n      Timer.set(element, () => {\n        addClass(slides[next], `${carouselItem}-${orientation}`);\n        reflow(slides[next]);\n        addClass(slides[next], `${carouselItem}-${directionClass}`);\n        addClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n        emulateTransitionEnd(slides[next], () => carouselTransitionEndHandler(self));\n      }, 0, dataBsSlide);\n    } else {\n      addClass(slides[next], activeClass);\n      removeClass(slides[activeItem], activeClass);\n\n      Timer.set(element, () => {\n        Timer.clear(element, dataBsSlide);\n        // check for element, might have been disposed\n        /* istanbul ignore else */\n        if (element && options.interval && !self.isPaused) {\n          self.cycle();\n        }\n\n        dispatchEvent(element, carouselSlidEvent);\n      }, 0, dataBsSlide);\n    }\n  }\n\n  /** Remove `Carousel` component from target. */\n  dispose() {\n    const self = this;\n    const { slides } = self;\n    const itemClasses = ['start', 'end', 'prev', 'next'];\n\n    [...slides].forEach((slide, idx) => {\n      if (hasClass(slide, activeClass)) activateCarouselIndicator(self, idx);\n      itemClasses.forEach((c) => removeClass(slide, `${carouselItem}-${c}`));\n    });\n\n    toggleCarouselHandlers(self);\n    super.dispose();\n  }\n}\n\nObjectAssign(Carousel, {\n  selector: carouselSelector,\n  init: carouselInitCallback,\n  getInstance: getCarouselInstance,\n});\n\n/**\n * A global namespace for aria-expanded.\n * @type {string}\n */\nconst ariaExpanded = 'aria-expanded';\n\n/**\n * Shortcut for `Object.entries()` static method.\n * @param  {Record<string, any>} obj a target object\n * @returns {[string, any][]}\n */\nconst ObjectEntries = (obj) => Object.entries(obj);\n\n/**\n * Shortcut for multiple uses of `HTMLElement.style.propertyName` method.\n * @param  {HTMLElement} element target element\n * @param  {Partial<CSSStyleDeclaration>} styles attribute value\n */\nconst setElementStyle = (element, styles) => {\n  ObjectEntries(styles).forEach(([key, value]) => {\n    if (key.includes('--')) {\n      element.style.setProperty(key, value);\n    } else {\n      const propObject = {}; propObject[key] = value;\n      ObjectAssign(element.style, propObject);\n    }\n  });\n};\n\n/**\n * Global namespace for most components `collapsing` class.\n * As used by `Collapse` / `Tab`.\n */\nconst collapsingClass = 'collapsing';\n\n/** @type {string} */\nconst collapseString = 'collapse';\n\n/** @type {string} */\nconst collapseComponent = 'Collapse';\n\n/* Native JavaScript for Bootstrap 5 | Collapse\n----------------------------------------------- */\n\n// COLLAPSE GC\n// ===========\nconst collapseSelector = `.${collapseString}`;\nconst collapseToggleSelector = `[${dataBsToggle}=\"${collapseString}\"]`;\nconst collapseDefaults = { parent: null };\n\n/**\n * Static method which returns an existing `Collapse` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Collapse>}\n */\nconst getCollapseInstance = (element) => getInstance(element, collapseComponent);\n\n/**\n * A `Collapse` initialization callback.\n * @type {BSN.InitCallback<Collapse>}\n */\nconst collapseInitCallback = (element) => new Collapse(element);\n\n// COLLAPSE CUSTOM EVENTS\n// ======================\nconst showCollapseEvent = OriginalEvent(`show.bs.${collapseString}`);\nconst shownCollapseEvent = OriginalEvent(`shown.bs.${collapseString}`);\nconst hideCollapseEvent = OriginalEvent(`hide.bs.${collapseString}`);\nconst hiddenCollapseEvent = OriginalEvent(`hidden.bs.${collapseString}`);\n\n// COLLAPSE PRIVATE METHODS\n// ========================\n/**\n * Expand the designated `Element`.\n * @param {Collapse} self the `Collapse` instance\n */\nfunction expandCollapse(self) {\n  const {\n    element, parent, triggers,\n  } = self;\n\n  dispatchEvent(element, showCollapseEvent);\n  if (showCollapseEvent.defaultPrevented) return;\n\n  Timer.set(element, () => {}, 17);\n  if (parent) Timer.set(parent, () => {}, 17);\n\n  addClass(element, collapsingClass);\n  removeClass(element, collapseString);\n\n  setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n  emulateTransitionEnd(element, () => {\n    Timer.clear(element);\n    if (parent) Timer.clear(parent);\n\n    triggers.forEach((btn) => setAttribute(btn, ariaExpanded, 'true'));\n\n    removeClass(element, collapsingClass);\n    addClass(element, collapseString);\n    addClass(element, showClass);\n\n    setElementStyle(element, { height: '' });\n\n    dispatchEvent(element, shownCollapseEvent);\n  });\n}\n\n/**\n * Collapse the designated `Element`.\n * @param {Collapse} self the `Collapse` instance\n */\nfunction collapseContent(self) {\n  const {\n    element, parent, triggers,\n  } = self;\n\n  dispatchEvent(element, hideCollapseEvent);\n\n  if (hideCollapseEvent.defaultPrevented) return;\n\n  Timer.set(element, () => {}, 17);\n  if (parent) Timer.set(parent, () => {}, 17);\n\n  setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n  removeClass(element, collapseString);\n  removeClass(element, showClass);\n  addClass(element, collapsingClass);\n\n  reflow(element);\n  setElementStyle(element, { height: '0px' });\n\n  emulateTransitionEnd(element, () => {\n    Timer.clear(element);\n    /* istanbul ignore else */\n    if (parent) Timer.clear(parent);\n\n    triggers.forEach((btn) => setAttribute(btn, ariaExpanded, 'false'));\n\n    removeClass(element, collapsingClass);\n    addClass(element, collapseString);\n\n    setElementStyle(element, { height: '' });\n\n    dispatchEvent(element, hiddenCollapseEvent);\n  });\n}\n\n/**\n * Toggles on/off the event listener(s) of the `Collapse` instance.\n * @param {Collapse} self the `Collapse` instance\n * @param {boolean=} add when `true`, the event listener is added\n */\nfunction toggleCollapseHandler(self, add) {\n  const action = add ? addListener : removeListener;\n  const { triggers } = self;\n\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach((btn) => action(btn, mouseclickEvent, collapseClickHandler));\n  }\n}\n\n// COLLAPSE EVENT HANDLER\n// ======================\n/**\n * Handles the `click` event for the `Collapse` instance.\n * @param {MouseEvent} e the `Event` object\n */\nfunction collapseClickHandler(e) {\n  const { target } = e; // our target is `HTMLElement`\n  const trigger = target && closest(target, collapseToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getCollapseInstance(element);\n  /* istanbul ignore else */\n  if (self) self.toggle();\n\n  // event target is anchor link #398\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n}\n\n// COLLAPSE DEFINITION\n// ===================\n\n/** Returns a new `Colapse` instance. */\nclass Collapse extends BaseComponent {\n  /**\n   * @param {HTMLElement | string} target and `Element` that matches the selector\n   * @param {BSN.Options.Collapse=} config instance options\n   */\n  constructor(target, config) {\n    super(target, config);\n    // bind\n    const self = this;\n\n    // initialization element\n    const { element, options } = self;\n    const doc = getDocument(element);\n\n    // set triggering elements\n    /** @type {HTMLElement[]} */\n    self.triggers = [...querySelectorAll(collapseToggleSelector, doc)]\n      .filter((btn) => getTargetElement(btn) === element);\n\n    // set parent accordion\n    /** @type {HTMLElement?} */\n    self.parent = querySelector(options.parent, doc)\n      || getTargetElement(element) || null;\n\n    // add event listeners\n    toggleCollapseHandler(self, true);\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() { return collapseComponent; }\n  /**\n   * Returns component default options.\n   */\n  get defaults() { return collapseDefaults; }\n  /* eslint-enable */\n\n  // COLLAPSE PUBLIC METHODS\n  // =======================\n  /** Toggles the visibility of the collapse. */\n  toggle() {\n    const self = this;\n    if (!hasClass(self.element, showClass)) self.show();\n    else self.hide();\n  }\n\n  /** Hides the collapse. */\n  hide() {\n    const self = this;\n    const { triggers, element } = self;\n    if (Timer.get(element)) return;\n\n    collapseContent(self);\n    /* istanbul ignore else */\n    if (triggers.length) {\n      triggers.forEach((btn) => addClass(btn, `${collapseString}d`));\n    }\n  }\n\n  /** Shows the collapse. */\n  show() {\n    const self = this;\n    const {\n      element, parent, triggers,\n    } = self;\n    let activeCollapse;\n    let activeCollapseInstance;\n\n    if (parent) {\n      activeCollapse = [...querySelectorAll(`.${collapseString}.${showClass}`, parent)]\n        .find((i) => getCollapseInstance(i));\n      activeCollapseInstance = activeCollapse && getCollapseInstance(activeCollapse);\n    }\n\n    if ((!parent || !Timer.get(parent)) && !Timer.get(element)) {\n      if (activeCollapseInstance && activeCollapse !== element) {\n        collapseContent(activeCollapseInstance);\n        activeCollapseInstance.triggers.forEach((btn) => {\n          addClass(btn, `${collapseString}d`);\n        });\n      }\n\n      expandCollapse(self);\n      /* istanbul ignore else */\n      if (triggers.length) {\n        triggers.forEach((btn) => removeClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Remove the `Collapse` component from the target `Element`. */\n  dispose() {\n    const self = this;\n    toggleCollapseHandler(self);\n\n    super.dispose();\n  }\n}\n\nObjectAssign(Collapse, {\n  selector: collapseSelector,\n  init: collapseInitCallback,\n  getInstance: getCollapseInstance,\n});\n\n/**\n * A global namespace for `focus` event.\n * @type {string}\n */\nconst focusEvent = 'focus';\n\n/**\n * A global namespace for `keyup` event.\n * @type {string}\n */\nconst keyupEvent = 'keyup';\n\n/**\n * A global namespace for `scroll` event.\n * @type {string}\n */\nconst scrollEvent = 'scroll';\n\n/**\n * A global namespace for `resize` event.\n * @type {string}\n */\nconst resizeEvent = 'resize';\n\n/**\n * A global namespace for `ArrowUp` key.\n * @type {string} e.which = 38 equivalent\n */\nconst keyArrowUp = 'ArrowUp';\n\n/**\n * A global namespace for `ArrowDown` key.\n * @type {string} e.which = 40 equivalent\n */\nconst keyArrowDown = 'ArrowDown';\n\n/**\n * A global namespace for `Escape` key.\n * @type {string} e.which = 27 equivalent\n */\nconst keyEscape = 'Escape';\n\n/**\n * Shortcut for `HTMLElement.hasAttribute()` method.\n * @param  {HTMLElement} element target element\n * @param  {string} attribute attribute name\n * @returns {boolean} the query result\n */\nconst hasAttribute = (element, attribute) => element.hasAttribute(attribute);\n\n/**\n * Utility to focus an `HTMLElement` target.\n *\n * @param {HTMLElement} element is the target\n */\nconst focus = (element) => element.focus();\n\n/**\n * Returns the `Window` object of a target node.\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param {(Node | Window)=} node target node\n * @returns {Window} the `Window` object\n */\nfunction getWindow(node) {\n  // node is undefined | NULL\n  if (!node) return window;\n  // node instanceof Document\n  if (isDocument(node)) return node.defaultView;\n  // node instanceof Node\n  if (isNode(node)) return node.ownerDocument.defaultView;\n  // node is instanceof Window\n  return node;\n}\n\n/**\n * Global namespace for `Dropdown` types / classes.\n */\nconst dropdownMenuClasses = ['dropdown', 'dropup', 'dropstart', 'dropend'];\n\n/** @type {string} */\nconst dropdownComponent = 'Dropdown';\n\n/**\n * Global namespace for `.dropdown-menu`.\n */\nconst dropdownMenuClass = 'dropdown-menu';\n\n/**\n * Checks if an *event.target* or its parent has an `href=\"#\"` value.\n * We need to prevent jumping around onclick, don't we?\n *\n * @param {Node} element the target element\n * @returns {boolean} the query result\n */\nfunction isEmptyAnchor(element) {\n  // `EventTarget` must be `HTMLElement`\n  const parentAnchor = closest(element, 'A');\n  return isHTMLElement(element)\n    // anchor href starts with #\n    && ((hasAttribute(element, 'href') && element.href.slice(-1) === '#')\n    // OR a child of an anchor with href starts with #\n    || (parentAnchor && hasAttribute(parentAnchor, 'href')\n    && parentAnchor.href.slice(-1) === '#'));\n}\n\n/* Native JavaScript for Bootstrap 5 | Dropdown\n----------------------------------------------- */\n\n// DROPDOWN PRIVATE GC\n// ===================\nconst [\n  dropdownString,\n  dropupString,\n  dropstartString,\n  dropendString,\n] = dropdownMenuClasses;\nconst dropdownSelector = `[${dataBsToggle}=\"${dropdownString}\"]`;\n\n/**\n * Static method which returns an existing `Dropdown` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Dropdown>}\n */\nconst getDropdownInstance = (element) => getInstance(element, dropdownComponent);\n\n/**\n * A `Dropdown` initialization callback.\n * @type {BSN.InitCallback<Dropdown>}\n */\nconst dropdownInitCallback = (element) => new Dropdown(element);\n\n// DROPDOWN PRIVATE GC\n// ===================\n// const dropdownMenuStartClass = `${dropdownMenuClass}-start`;\nconst dropdownMenuEndClass = `${dropdownMenuClass}-end`;\nconst verticalClass = [dropdownString, dropupString];\nconst horizontalClass = [dropstartString, dropendString];\nconst menuFocusTags = ['A', 'BUTTON'];\n\nconst dropdownDefaults = {\n  offset: 5, // [number] 5(px)\n  display: 'dynamic', // [dynamic|static]\n};\n\n// DROPDOWN CUSTOM EVENTS\n// ======================\nconst showDropdownEvent = OriginalEvent(`show.bs.${dropdownString}`);\nconst shownDropdownEvent = OriginalEvent(`shown.bs.${dropdownString}`);\nconst hideDropdownEvent = OriginalEvent(`hide.bs.${dropdownString}`);\nconst hiddenDropdownEvent = OriginalEvent(`hidden.bs.${dropdownString}`);\n\n// DROPDOWN PRIVATE METHODS\n// ========================\n/**\n * Apply specific style or class names to a `.dropdown-menu` to automatically\n * accomodate the layout and the page scroll.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nfunction styleDropdown(self) {\n  const {\n    element, menu, parentElement, options,\n  } = self;\n  const { offset } = options;\n\n  // don't apply any style on mobile view\n  /* istanbul ignore next: this test requires a navbar */\n  if (getElementStyle(menu, 'position') === 'static') return;\n\n  const RTL = isRTL(element);\n  // const menuStart = hasClass(menu, dropdownMenuStartClass);\n  const menuEnd = hasClass(menu, dropdownMenuEndClass);\n\n  // reset menu offset and position\n  const resetProps = ['margin', 'top', 'bottom', 'left', 'right'];\n  resetProps.forEach((p) => { menu.style[p] = ''; });\n\n  // set initial position class\n  // take into account .btn-group parent as .dropdown\n  // this requires navbar/btn-group/input-group\n  let positionClass = dropdownMenuClasses.find((c) => hasClass(parentElement, c))\n    || /* istanbul ignore next: fallback position */ dropdownString;\n\n  /** @type {Record<string, Record<string, any>>} */\n  let dropdownMargin = {\n    dropdown: [offset, 0, 0],\n    dropup: [0, 0, offset],\n    dropstart: RTL ? [-1, 0, 0, offset] : [-1, offset, 0],\n    dropend: RTL ? [-1, offset, 0] : [-1, 0, 0, offset],\n  };\n\n  /** @type {Record<string, Record<string, any>>} */\n  const dropdownPosition = {\n    dropdown: { top: '100%' },\n    dropup: { top: 'auto', bottom: '100%' },\n    dropstart: RTL ? { left: '100%', right: 'auto' } : { left: 'auto', right: '100%' },\n    dropend: RTL ? { left: 'auto', right: '100%' } : { left: '100%', right: 'auto' },\n    menuStart: RTL ? { right: 0, left: 'auto' } : { right: 'auto', left: 0 },\n    menuEnd: RTL ? { right: 'auto', left: 0 } : { right: 0, left: 'auto' },\n  };\n\n  const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menu;\n\n  const { clientWidth, clientHeight } = getDocumentElement(element);\n  const {\n    left: targetLeft, top: targetTop,\n    width: targetWidth, height: targetHeight,\n  } = getBoundingClientRect(element);\n\n  // dropstart | dropend\n  const leftFullExceed = targetLeft - menuWidth - offset < 0;\n  // dropend\n  const rightFullExceed = targetLeft + menuWidth + targetWidth + offset >= clientWidth;\n  // dropstart | dropend\n  const bottomExceed = targetTop + menuHeight + offset >= clientHeight;\n  // dropdown\n  const bottomFullExceed = targetTop + menuHeight + targetHeight + offset >= clientHeight;\n  // dropup\n  const topExceed = targetTop - menuHeight - offset < 0;\n  // dropdown / dropup\n  const leftExceed = ((!RTL && menuEnd) || (RTL && !menuEnd))\n    && targetLeft + targetWidth - menuWidth < 0;\n  const rightExceed = ((RTL && menuEnd) || (!RTL && !menuEnd))\n    && targetLeft + menuWidth >= clientWidth;\n\n  // recompute position\n  // handle RTL as well\n  if (horizontalClass.includes(positionClass) && leftFullExceed && rightFullExceed) {\n    positionClass = dropdownString;\n  }\n  if (positionClass === dropstartString && (!RTL ? leftFullExceed : rightFullExceed)) {\n    positionClass = dropendString;\n  }\n  if (positionClass === dropendString && (RTL ? leftFullExceed : rightFullExceed)) {\n    positionClass = dropstartString;\n  }\n  if (positionClass === dropupString && topExceed && !bottomFullExceed) {\n    positionClass = dropdownString;\n  }\n  if (positionClass === dropdownString && bottomFullExceed && !topExceed) {\n    positionClass = dropupString;\n  }\n\n  // override position for horizontal classes\n  if (horizontalClass.includes(positionClass) && bottomExceed) {\n    ObjectAssign(dropdownPosition[positionClass], {\n      top: 'auto', bottom: 0,\n    });\n  }\n\n  // override position for vertical classes\n  if (verticalClass.includes(positionClass) && (leftExceed || rightExceed)) {\n    // don't realign when menu is wider than window\n    // in both RTL and non-RTL readability is KING\n    let posAjust;\n    if (!leftExceed && rightExceed && !RTL) posAjust = { left: 'auto', right: 0 };\n    if (leftExceed && !rightExceed && RTL) posAjust = { left: 0, right: 'auto' };\n    if (posAjust) ObjectAssign(dropdownPosition[positionClass], posAjust);\n  }\n\n  dropdownMargin = dropdownMargin[positionClass];\n  setElementStyle(menu, {\n    ...dropdownPosition[positionClass],\n    margin: `${dropdownMargin.map((x) => (x ? `${x}px` : x)).join(' ')}`,\n  });\n\n  // override dropdown-menu-start | dropdown-menu-end\n  if (verticalClass.includes(positionClass) && menuEnd) {\n    /* istanbul ignore else */\n    if (menuEnd) {\n      const endAdjust = (!RTL && leftExceed) || (RTL && rightExceed)\n        ? 'menuStart' : /* istanbul ignore next */'menuEnd';\n      setElementStyle(menu, dropdownPosition[endAdjust]);\n    }\n  }\n}\n\n/**\n * Returns an `Array` of focusable items in the given dropdown-menu.\n * @param {HTMLElement} menu\n * @returns {HTMLElement[]}\n */\nfunction getMenuItems(menu) {\n  return [...menu.children].map((c) => {\n    if (c && menuFocusTags.includes(c.tagName)) return c;\n    const { firstElementChild } = c;\n    if (firstElementChild && menuFocusTags.includes(firstElementChild.tagName)) {\n      return firstElementChild;\n    }\n    return null;\n  }).filter((c) => c);\n}\n\n/**\n * Toggles on/off the listeners for the events that close the dropdown\n * as well as event that request a new position for the dropdown.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nfunction toggleDropdownDismiss(self) {\n  const { element, options } = self;\n  const action = self.open ? addListener : removeListener;\n  const doc = getDocument(element);\n\n  action(doc, mouseclickEvent, dropdownDismissHandler);\n  action(doc, focusEvent, dropdownDismissHandler);\n  action(doc, keydownEvent, dropdownPreventScroll);\n  action(doc, keyupEvent, dropdownKeyHandler);\n\n  /* istanbul ignore else */\n  if (options.display === 'dynamic') {\n    [scrollEvent, resizeEvent].forEach((ev) => {\n      action(getWindow(element), ev, dropdownLayoutHandler, passiveHandler);\n    });\n  }\n}\n\n/**\n * Toggles on/off the `click` event listener of the `Dropdown`.\n *\n * @param {Dropdown} self the `Dropdown` instance\n * @param {boolean=} add when `true`, it will add the event listener\n */\nfunction toggleDropdownHandler(self, add) {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, dropdownClickHandler);\n}\n\n/**\n * Returns the currently open `.dropdown` element.\n *\n * @param {(Node | Window)=} element target\n * @returns {HTMLElement?} the query result\n */\nfunction getCurrentOpenDropdown(element) {\n  const currentParent = [...dropdownMenuClasses, 'btn-group', 'input-group']\n    .map((c) => getElementsByClassName(`${c} ${showClass}`, getDocument(element)))\n    .find((x) => x.length);\n\n  if (currentParent && currentParent.length) {\n    return [...currentParent[0].children]\n      .find((x) => hasAttribute(x, dataBsToggle));\n  }\n  return null;\n}\n\n// DROPDOWN EVENT HANDLERS\n// =======================\n/**\n * Handles the `click` event for the `Dropdown` instance.\n *\n * @param {MouseEvent} e event object\n * @this {Document}\n */\nfunction dropdownDismissHandler(e) {\n  const { target, type } = e;\n\n  /* istanbul ignore next: impossible to satisfy */\n  if (!target || !target.closest) return; // some weird FF bug #409\n\n  const element = getCurrentOpenDropdown(target);\n  const self = getDropdownInstance(element);\n\n  /* istanbul ignore next */\n  if (!self) return;\n\n  const { parentElement, menu } = self;\n\n  const hasData = closest(target, dropdownSelector) !== null;\n  const isForm = parentElement && parentElement.contains(target)\n    && (target.tagName === 'form' || closest(target, 'form') !== null);\n\n  if (type === mouseclickEvent && isEmptyAnchor(target)) {\n    e.preventDefault();\n  }\n  if (type === focusEvent\n    && (target === element || target === menu || menu.contains(target))) {\n    return;\n  }\n\n  /* istanbul ignore else */\n  if (isForm || hasData) ; else if (self) {\n    self.hide();\n  }\n}\n\n/**\n * Handles `click` event listener for `Dropdown`.\n * @this {HTMLElement}\n * @param {MouseEvent} e event object\n */\nfunction dropdownClickHandler(e) {\n  const element = this;\n  const { target } = e;\n  const self = getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    self.toggle();\n    /* istanbul ignore else */\n    if (target && isEmptyAnchor(target)) e.preventDefault();\n  }\n}\n\n/**\n * Prevents scroll when dropdown-menu is visible.\n * @param {KeyboardEvent} e event object\n */\nfunction dropdownPreventScroll(e) {\n  /* istanbul ignore else */\n  if ([keyArrowDown, keyArrowUp].includes(e.code)) e.preventDefault();\n}\n\n/**\n * Handles keyboard `keydown` events for `Dropdown`.\n * @param {KeyboardEvent} e keyboard key\n * @this {Document}\n */\nfunction dropdownKeyHandler(e) {\n  const { code } = e;\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n  const { activeElement } = element && getDocument(element);\n  /* istanbul ignore next: impossible to satisfy */\n  if (!self || !activeElement) return;\n  const { menu, open } = self;\n  const menuItems = getMenuItems(menu);\n\n  // arrow up & down\n  if (menuItems && menuItems.length && [keyArrowDown, keyArrowUp].includes(code)) {\n    let idx = menuItems.indexOf(activeElement);\n    /* istanbul ignore else */\n    if (activeElement === element) {\n      idx = 0;\n    } else if (code === keyArrowUp) {\n      idx = idx > 1 ? idx - 1 : 0;\n    } else if (code === keyArrowDown) {\n      idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n    }\n    /* istanbul ignore else */\n    if (menuItems[idx]) focus(menuItems[idx]);\n  }\n\n  if (keyEscape === code && open) {\n    self.toggle();\n    focus(element);\n  }\n}\n\n/**\n * @this {globalThis}\n * @returns {void}\n */\nfunction dropdownLayoutHandler() {\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self && self.open) styleDropdown(self);\n}\n\n// DROPDOWN DEFINITION\n// ===================\n/** Returns a new Dropdown instance. */\nclass Dropdown extends BaseComponent {\n  /**\n   * @param {HTMLElement | string} target Element or string selector\n   * @param {BSN.Options.Dropdown=} config the instance options\n   */\n  constructor(target, config) {\n    super(target, config);\n    // bind\n    const self = this;\n\n    // initialization element\n    const { element } = self;\n    const { parentElement } = element;\n\n    // set targets\n    /** @type {(Element | HTMLElement)} */\n    self.parentElement = parentElement;\n    /** @type {(Element | HTMLElement)} */\n    self.menu = querySelector(`.${dropdownMenuClass}`, parentElement);\n\n    // set initial state to closed\n    /** @type {boolean} */\n    self.open = false;\n\n    // add event listener\n    toggleDropdownHandler(self, true);\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() { return dropdownComponent; }\n  /**\n   * Returns component default options.\n   */\n  get defaults() { return dropdownDefaults; }\n  /* eslint-enable */\n\n  // DROPDOWN PUBLIC METHODS\n  // =======================\n  /** Shows/hides the dropdown menu to the user. */\n  toggle() {\n    const self = this;\n\n    if (self.open) self.hide();\n    else self.show();\n  }\n\n  /** Shows the dropdown menu to the user. */\n  show() {\n    const self = this;\n    const {\n      element, open, menu, parentElement,\n    } = self;\n\n    /* istanbul ignore next */\n    if (open) return;\n\n    const currentElement = getCurrentOpenDropdown(element);\n    const currentInstance = currentElement && getDropdownInstance(currentElement);\n    if (currentInstance) currentInstance.hide();\n\n    // dispatch event\n    [showDropdownEvent, shownDropdownEvent].forEach((e) => {\n      e.relatedTarget = element;\n    });\n    dispatchEvent(parentElement, showDropdownEvent);\n    if (showDropdownEvent.defaultPrevented) return;\n\n    addClass(menu, showClass);\n    addClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, 'true');\n\n    // change menu position\n    styleDropdown(self);\n\n    self.open = !open;\n\n    focus(element); // focus the element\n    toggleDropdownDismiss(self);\n    dispatchEvent(parentElement, shownDropdownEvent);\n  }\n\n  /** Hides the dropdown menu from the user. */\n  hide() {\n    const self = this;\n    const {\n      element, open, menu, parentElement,\n    } = self;\n\n    /* istanbul ignore next */\n    if (!open) return;\n\n    [hideDropdownEvent, hiddenDropdownEvent].forEach((e) => {\n      e.relatedTarget = element;\n    });\n    dispatchEvent(parentElement, hideDropdownEvent);\n    if (hideDropdownEvent.defaultPrevented) return;\n\n    removeClass(menu, showClass);\n    removeClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, 'false');\n\n    self.open = !open;\n    // only re-attach handler if the instance is not disposed\n    toggleDropdownDismiss(self);\n    dispatchEvent(parentElement, hiddenDropdownEvent);\n  }\n\n  /** Removes the `Dropdown` component from the target element. */\n  dispose() {\n    const self = this;\n    if (self.open) self.hide();\n\n    toggleDropdownHandler(self);\n\n    super.dispose();\n  }\n}\n\nObjectAssign(Dropdown, {\n  selector: dropdownSelector,\n  init: dropdownInitCallback,\n  getInstance: getDropdownInstance,\n});\n\n/**\n * A global namespace for aria-hidden.\n * @type {string}\n */\nconst ariaHidden = 'aria-hidden';\n\n/**\n * A global namespace for aria-modal.\n * @type {string}\n */\nconst ariaModal = 'aria-modal';\n\n/**\n * Shortcut for `HTMLElement.removeAttribute()` method.\n * @param  {HTMLElement} element target element\n * @param  {string} attribute attribute name\n * @returns {void}\n */\nconst removeAttribute = (element, attribute) => element.removeAttribute(attribute);\n\n/**\n * Returns the `document.body` or the `<body>` element.\n *\n * @param {(Node | Window)=} node\n * @returns {HTMLBodyElement}\n */\nfunction getDocumentBody(node) {\n  return getDocument(node).body;\n}\n\n/** @type {string} */\nconst modalString = 'modal';\n\n/** @type {string} */\nconst modalComponent = 'Modal';\n\n/**\n * Check if target is a `ShadowRoot`.\n *\n * @param {any} element target\n * @returns {boolean} the query result\n */\nconst isShadowRoot = (element) => (element && element.constructor.name === 'ShadowRoot')\n  || false;\n\n/**\n * Returns the `parentNode` also going through `ShadowRoot`.\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param {Node} node the target node\n * @returns {Node} the apropriate parent node\n */\nfunction getParentNode(node) {\n  if (node.nodeName === 'HTML') {\n    return node;\n  }\n\n  // this is a quicker (but less type safe) way to save quite some bytes from the bundle\n  return (\n    node.assignedSlot // step into the shadow DOM of the parent of a slotted node\n    || node.parentNode // DOM Element detected\n    || (isShadowRoot(node) && node.host) // ShadowRoot detected\n    || getDocumentElement(node) // fallback\n  );\n}\n\n/**\n * Check if a target element is a `<table>`, `<td>` or `<th>`.\n * This specific check is important for determining\n * the `offsetParent` of a given element.\n *\n * @param {any} element the target element\n * @returns {boolean} the query result\n */\nconst isTableElement = (element) => (element && ['TABLE', 'TD', 'TH'].includes(element.tagName))\n  || false;\n\n/**\n * Returns an `HTMLElement` to be used as default value for *options.container*\n * for `Tooltip` / `Popover` components.\n *\n * When `getOffset` is *true*, it returns the `offsetParent` for tooltip/popover\n * offsets computation similar to **floating-ui**.\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param {HTMLElement} element the target\n * @param {boolean=} getOffset when *true* it will return an `offsetParent`\n * @returns {ParentNode | Window} the query result\n */\nfunction getElementContainer(element, getOffset) {\n  const majorBlockTags = ['HTML', 'BODY'];\n\n  if (getOffset) {\n    /** @type {any} */\n    let { offsetParent } = element;\n    const win = getWindow(element);\n\n    while (offsetParent && (isTableElement(offsetParent)\n      || (isHTMLElement(offsetParent)\n        // we must count for both fixed & sticky\n        && !['sticky', 'fixed'].includes(getElementStyle(offsetParent, 'position'))))) {\n      offsetParent = offsetParent.offsetParent;\n    }\n\n    if (!offsetParent || (majorBlockTags.includes(offsetParent.tagName)\n        || getElementStyle(offsetParent, 'position') === 'static')) {\n      offsetParent = win;\n    }\n    return offsetParent;\n  }\n\n  /** @type {ParentNode[]} */\n  const containers = [];\n  /** @type {ParentNode} */\n  let { parentNode } = element;\n\n  while (parentNode && !majorBlockTags.includes(parentNode.nodeName)) {\n    parentNode = getParentNode(parentNode);\n    /* istanbul ignore else */\n    if (!(isShadowRoot(parentNode) || !!parentNode.shadowRoot\n      || isTableElement(parentNode))) {\n      containers.push(parentNode);\n    }\n  }\n\n  return containers.find((c, i) => {\n    if (getElementStyle(c, 'position') !== 'relative'\n      && containers.slice(i + 1).every((r) => getElementStyle(r, 'position') === 'static')) {\n      return c;\n    }\n    return null;\n  }) || getDocumentBody(element);\n}\n\n/**\n * Global namespace for components `fixed-top` class.\n */\nconst fixedTopClass = 'fixed-top';\n\n/**\n * Global namespace for components `fixed-bottom` class.\n */\nconst fixedBottomClass = 'fixed-bottom';\n\n/**\n * Global namespace for components `sticky-top` class.\n */\nconst stickyTopClass = 'sticky-top';\n\n/**\n * Global namespace for components `position-sticky` class.\n */\nconst positionStickyClass = 'position-sticky';\n\n/** @param {(HTMLElement | Document)=} parent */\nconst getFixedItems = (parent) => [\n  ...getElementsByClassName(fixedTopClass, parent),\n  ...getElementsByClassName(fixedBottomClass, parent),\n  ...getElementsByClassName(stickyTopClass, parent),\n  ...getElementsByClassName(positionStickyClass, parent),\n  ...getElementsByClassName('is-fixed', parent),\n];\n\n/**\n * Removes *padding* and *overflow* from the `<body>`\n * and all spacing from fixed items.\n * @param {HTMLElement=} element the target modal/offcanvas\n */\nfunction resetScrollbar(element) {\n  const bd = getDocumentBody(element);\n  setElementStyle(bd, {\n    paddingRight: '',\n    overflow: '',\n  });\n\n  const fixedItems = getFixedItems(bd);\n\n  if (fixedItems.length) {\n    fixedItems.forEach((fixed) => {\n      setElementStyle(fixed, {\n        paddingRight: '',\n        marginRight: '',\n      });\n    });\n  }\n}\n\n/**\n * Returns the scrollbar width if the body does overflow\n * the window.\n * @param {HTMLElement=} element\n * @returns {number} the value\n */\nfunction measureScrollbar(element) {\n  const { clientWidth } = getDocumentElement(element);\n  const { innerWidth } = getWindow(element);\n  return Math.abs(innerWidth - clientWidth);\n}\n\n/**\n * Sets the `<body>` and fixed items style when modal / offcanvas\n * is shown to the user.\n *\n * @param {HTMLElement} element the target modal/offcanvas\n * @param {boolean=} overflow body does overflow or not\n */\nfunction setScrollbar(element, overflow) {\n  const bd = getDocumentBody(element);\n  const bodyPad = parseInt(getElementStyle(bd, 'paddingRight'), 10);\n  const isOpen = getElementStyle(bd, 'overflow') === 'hidden';\n  const sbWidth = isOpen && bodyPad ? 0 : measureScrollbar(element);\n  const fixedItems = getFixedItems(bd);\n\n  /* istanbul ignore else */\n  if (overflow) {\n    setElementStyle(bd, {\n      overflow: 'hidden',\n      paddingRight: `${bodyPad + sbWidth}px`,\n    });\n\n    /* istanbul ignore else */\n    if (fixedItems.length) {\n      fixedItems.forEach((fixed) => {\n        const itemPadValue = getElementStyle(fixed, 'paddingRight');\n        fixed.style.paddingRight = `${parseInt(itemPadValue, 10) + sbWidth}px`;\n        /* istanbul ignore else */\n        if ([stickyTopClass, positionStickyClass].some((c) => hasClass(fixed, c))) {\n          const itemMValue = getElementStyle(fixed, 'marginRight');\n          fixed.style.marginRight = `${parseInt(itemMValue, 10) - sbWidth}px`;\n        }\n      });\n    }\n  }\n}\n\n/**\n * This is a shortie for `document.createElement` method\n * which allows you to create a new `HTMLElement` for a given `tagName`\n * or based on an object with specific non-readonly attributes:\n * `id`, `className`, `textContent`, `style`, etc.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/createElement\n *\n * @param {Record<string, string> | string} param `tagName` or object\n * @return {HTMLElement} a new `HTMLElement` or `Element`\n */\nfunction createElement(param) {\n  if (!param) return null;\n\n  if (typeof param === 'string') {\n    return getDocument().createElement(param);\n  }\n\n  const { tagName } = param;\n  const attr = { ...param };\n  const newElement = createElement(tagName);\n  delete attr.tagName;\n  ObjectAssign(newElement, attr);\n  return newElement;\n}\n\n/** @type {string} */\nconst offcanvasString = 'offcanvas';\n\nconst backdropString = 'backdrop';\nconst modalBackdropClass = `${modalString}-${backdropString}`;\nconst offcanvasBackdropClass = `${offcanvasString}-${backdropString}`;\nconst modalActiveSelector = `.${modalString}.${showClass}`;\nconst offcanvasActiveSelector = `.${offcanvasString}.${showClass}`;\n\n// any document would suffice\nconst overlay = createElement('div');\n\n/**\n * Returns the current active modal / offcancas element.\n * @param {HTMLElement=} element the context element\n * @returns {HTMLElement?} the requested element\n */\nfunction getCurrentOpen(element) {\n  return querySelector(`${modalActiveSelector},${offcanvasActiveSelector}`, getDocument(element));\n}\n\n/**\n * Toogles from a Modal overlay to an Offcanvas, or vice-versa.\n * @param {boolean=} isModal\n */\nfunction toggleOverlayType(isModal) {\n  const targetClass = isModal ? modalBackdropClass : offcanvasBackdropClass;\n  [modalBackdropClass, offcanvasBackdropClass].forEach((c) => {\n    removeClass(overlay, c);\n  });\n  addClass(overlay, targetClass);\n}\n\n/**\n * Append the overlay to DOM.\n * @param {HTMLElement} container\n * @param {boolean} hasFade\n * @param {boolean=} isModal\n */\nfunction appendOverlay(container, hasFade, isModal) {\n  toggleOverlayType(isModal);\n  container.append(overlay);\n  if (hasFade) addClass(overlay, fadeClass);\n}\n\n/**\n * Shows the overlay to the user.\n */\nfunction showOverlay() {\n  if (!hasClass(overlay, showClass)) {\n    addClass(overlay, showClass);\n    reflow(overlay);\n  }\n}\n\n/**\n * Hides the overlay from the user.\n */\nfunction hideOverlay() {\n  removeClass(overlay, showClass);\n}\n\n/**\n * Removes the overlay from DOM.\n * @param {HTMLElement=} element\n */\nfunction removeOverlay(element) {\n  if (!getCurrentOpen(element)) {\n    removeClass(overlay, fadeClass);\n    overlay.remove();\n    resetScrollbar(element);\n  }\n}\n\n/**\n * @param {HTMLElement} element target\n * @returns {boolean}\n */\nfunction isVisible(element) {\n  return isHTMLElement(element)\n    && getElementStyle(element, 'visibility') !== 'hidden'\n    && element.offsetParent !== null;\n}\n\n/* Native JavaScript for Bootstrap 5 | Modal\n-------------------------------------------- */\n\n// MODAL PRIVATE GC\n// ================\nconst modalSelector = `.${modalString}`;\nconst modalToggleSelector = `[${dataBsToggle}=\"${modalString}\"]`;\nconst modalDismissSelector = `[${dataBsDismiss}=\"${modalString}\"]`;\nconst modalStaticClass = `${modalString}-static`;\n\nconst modalDefaults = {\n  backdrop: true, // boolean|string\n  keyboard: true, // boolean\n};\n\n/**\n * Static method which returns an existing `Modal` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Modal>}\n */\nconst getModalInstance = (element) => getInstance(element, modalComponent);\n\n/**\n * A `Modal` initialization callback.\n * @type {BSN.InitCallback<Modal>}\n */\nconst modalInitCallback = (element) => new Modal(element);\n\n// MODAL CUSTOM EVENTS\n// ===================\nconst showModalEvent = OriginalEvent(`show.bs.${modalString}`);\nconst shownModalEvent = OriginalEvent(`shown.bs.${modalString}`);\nconst hideModalEvent = OriginalEvent(`hide.bs.${modalString}`);\nconst hiddenModalEvent = OriginalEvent(`hidden.bs.${modalString}`);\n\n// MODAL PRIVATE METHODS\n// =====================\n/**\n * Applies special style for the `<body>` and fixed elements\n * when a modal instance is shown to the user.\n *\n * @param {Modal} self the `Modal` instance\n */\nfunction setModalScrollbar(self) {\n  const { element } = self;\n  const scrollbarWidth = measureScrollbar(element);\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  const { clientHeight: modalHeight, scrollHeight: modalScrollHeight } = element;\n  const modalOverflow = modalHeight !== modalScrollHeight;\n\n  /* istanbul ignore else */\n  if (!modalOverflow && scrollbarWidth) {\n    const pad = !isRTL(element) ? 'paddingRight' : /* istanbul ignore next */'paddingLeft';\n    const padStyle = {};\n    padStyle[pad] = `${scrollbarWidth}px`;\n    setElementStyle(element, padStyle);\n  }\n  setScrollbar(element, (modalOverflow || clientHeight !== scrollHeight));\n}\n\n/**\n * Toggles on/off the listeners of events that close the modal.\n *\n * @param {Modal} self the `Modal` instance\n * @param {boolean=} add when `true`, event listeners are added\n */\nfunction toggleModalDismiss(self, add) {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n  action(element, mouseclickEvent, modalDismissHandler);\n  action(getWindow(element), resizeEvent, self.update, passiveHandler);\n  action(getDocument(element), keydownEvent, modalKeyHandler);\n}\n\n/**\n * Toggles on/off the `click` event listener of the `Modal` instance.\n * @param {Modal} self the `Modal` instance\n * @param {boolean=} add when `true`, event listener is added\n */\nfunction toggleModalHandler(self, add) {\n  const action = add ? addListener : removeListener;\n  const { triggers } = self;\n\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach((btn) => action(btn, mouseclickEvent, modalClickHandler));\n  }\n}\n\n/**\n * Executes after a modal is hidden to the user.\n * @param {Modal} self the `Modal` instance\n * @param {Function} callback the `Modal` instance\n */\nfunction afterModalHide(self, callback) {\n  const { triggers, element, relatedTarget } = self;\n  removeOverlay(element);\n  setElementStyle(element, { paddingRight: '', display: '' });\n  toggleModalDismiss(self);\n\n  const focusElement = showModalEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (focusElement) focus(focusElement);\n\n  /* istanbul ignore else */\n  if (callback) callback();\n\n  hiddenModalEvent.relatedTarget = relatedTarget;\n  dispatchEvent(element, hiddenModalEvent);\n}\n\n/**\n * Executes after a modal is shown to the user.\n * @param {Modal} self the `Modal` instance\n */\nfunction afterModalShow(self) {\n  const { element, relatedTarget } = self;\n  focus(element);\n  toggleModalDismiss(self, true);\n\n  shownModalEvent.relatedTarget = relatedTarget;\n  dispatchEvent(element, shownModalEvent);\n}\n\n/**\n * Executes before a modal is shown to the user.\n * @param {Modal} self the `Modal` instance\n */\nfunction beforeModalShow(self) {\n  const { element, hasFade } = self;\n  setElementStyle(element, { display: 'block' });\n\n  setModalScrollbar(self);\n  /* istanbul ignore else */\n  if (!getCurrentOpen(element)) {\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, showClass);\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n\n  if (hasFade) emulateTransitionEnd(element, () => afterModalShow(self));\n  else afterModalShow(self);\n}\n\n/**\n * Executes before a modal is hidden to the user.\n * @param {Modal} self the `Modal` instance\n * @param {Function=} callback when `true` skip animation\n */\nfunction beforeModalHide(self, callback) {\n  const {\n    element, options, hasFade,\n  } = self;\n\n  // callback can also be the transitionEvent object, we wanna make sure it's not\n  // call is not forced and overlay is visible\n  if (options.backdrop && !callback && hasFade && hasClass(overlay, showClass)\n    && !getCurrentOpen(element)) { // AND no modal is visible\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => afterModalHide(self));\n  } else {\n    afterModalHide(self, callback);\n  }\n}\n\n// MODAL EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for modal.\n * @param {MouseEvent} e the `Event` object\n */\nfunction modalClickHandler(e) {\n  const { target } = e;\n\n  const trigger = target && closest(target, modalToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getModalInstance(element);\n\n  /* istanbul ignore else */\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n  self.relatedTarget = trigger;\n  self.toggle();\n}\n\n/**\n * Handles the `keydown` event listener for modal\n * to hide the modal when user type the `ESC` key.\n *\n * @param {KeyboardEvent} e the `Event` object\n */\nfunction modalKeyHandler({ code, target }) {\n  const element = querySelector(modalActiveSelector, getDocument(target));\n  const self = element && getModalInstance(element);\n\n  const { options } = self;\n  /* istanbul ignore else */\n  if (options.keyboard && code === keyEscape // the keyboard option is enabled and the key is 27\n    && hasClass(element, showClass)) { // the modal is not visible\n    self.relatedTarget = null;\n    self.hide();\n  }\n}\n\n/**\n * Handles the `click` event listeners that hide the modal.\n *\n * @this {HTMLElement}\n * @param {MouseEvent} e the `Event` object\n */\nfunction modalDismissHandler(e) {\n  const element = this;\n  const self = getModalInstance(element);\n\n  // this timer is needed\n  /* istanbul ignore next: must have a filter */\n  if (!self || Timer.get(element)) return;\n\n  const { options, isStatic, modalDialog } = self;\n  const { backdrop } = options;\n  const { target } = e;\n\n  const selectedText = getDocument(element).getSelection().toString().length;\n  const targetInsideDialog = modalDialog.contains(target);\n  const dismiss = target && closest(target, modalDismissSelector);\n\n  /* istanbul ignore else */\n  if (isStatic && !targetInsideDialog) {\n    Timer.set(element, () => {\n      addClass(element, modalStaticClass);\n      emulateTransitionEnd(modalDialog, () => staticTransitionEnd(self));\n    }, 17);\n  } else if (dismiss || (!selectedText && !isStatic && !targetInsideDialog && backdrop)) {\n    self.relatedTarget = dismiss || null;\n    self.hide();\n    e.preventDefault();\n  }\n}\n\n/**\n * Handles the `transitionend` event listeners for `Modal`.\n *\n * @param {Modal} self the `Modal` instance\n */\nfunction staticTransitionEnd(self) {\n  const { element, modalDialog } = self;\n  const duration = getElementTransitionDuration(modalDialog) + 17;\n  removeClass(element, modalStaticClass);\n  // user must wait for zoom out transition\n  Timer.set(element, () => Timer.clear(element), duration);\n}\n\n// MODAL DEFINITION\n// ================\n/** Returns a new `Modal` instance. */\nclass Modal extends BaseComponent {\n  /**\n   * @param {HTMLElement | string} target usually the `.modal` element\n   * @param {BSN.Options.Modal=} config instance options\n   */\n  constructor(target, config) {\n    super(target, config);\n\n    // bind\n    const self = this;\n\n    // the modal\n    const { element } = self;\n\n    // the modal-dialog\n    /** @type {(HTMLElement)} */\n    self.modalDialog = querySelector(`.${modalString}-dialog`, element);\n\n    // modal can have multiple triggering elements\n    /** @type {HTMLElement[]} */\n    self.triggers = [...querySelectorAll(modalToggleSelector, getDocument(element))]\n      .filter((btn) => getTargetElement(btn) === element);\n\n    // additional internals\n    /** @type {boolean} */\n    self.isStatic = self.options.backdrop === 'static';\n    /** @type {boolean} */\n    self.hasFade = hasClass(element, fadeClass);\n    /** @type {HTMLElement?} */\n    self.relatedTarget = null;\n    /** @type {HTMLBodyElement | HTMLElement} */\n    self.container = getElementContainer(element);\n\n    // attach event listeners\n    toggleModalHandler(self, true);\n\n    // bind\n    self.update = self.update.bind(self);\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() { return modalComponent; }\n  /**\n   * Returns component default options.\n   */\n  get defaults() { return modalDefaults; }\n  /* eslint-enable */\n\n  // MODAL PUBLIC METHODS\n  // ====================\n  /** Toggles the visibility of the modal. */\n  toggle() {\n    const self = this;\n    if (hasClass(self.element, showClass)) self.hide();\n    else self.show();\n  }\n\n  /** Shows the modal to the user. */\n  show() {\n    const self = this;\n    const {\n      element, options, hasFade, relatedTarget, container,\n    } = self;\n    const { backdrop } = options;\n    let overlayDelay = 0;\n\n    if (hasClass(element, showClass)) return;\n\n    showModalEvent.relatedTarget = relatedTarget || null;\n    dispatchEvent(element, showModalEvent);\n    if (showModalEvent.defaultPrevented) return;\n\n    // we elegantly hide any opened modal/offcanvas\n    const currentOpen = getCurrentOpen(element);\n    if (currentOpen && currentOpen !== element) {\n      const this1 = getModalInstance(currentOpen);\n      const that1 = this1\n        || /* istanbul ignore next */getInstance(currentOpen, 'Offcanvas');\n      that1.hide();\n    }\n\n    if (backdrop) {\n      if (!container.contains(overlay)) {\n        appendOverlay(container, hasFade, true);\n      } else {\n        toggleOverlayType(true);\n      }\n\n      overlayDelay = getElementTransitionDuration(overlay);\n\n      showOverlay();\n      setTimeout(() => beforeModalShow(self), overlayDelay);\n    } else {\n      beforeModalShow(self);\n      /* istanbul ignore else */\n      if (currentOpen && hasClass(overlay, showClass)) {\n        hideOverlay();\n      }\n    }\n  }\n\n  /**\n   * Hide the modal from the user.\n   * @param {Function=} callback when defined it will skip animation\n   */\n  hide(callback) {\n    const self = this;\n    const {\n      element, hasFade, relatedTarget,\n    } = self;\n\n    if (!hasClass(element, showClass)) return;\n\n    hideModalEvent.relatedTarget = relatedTarget || null;\n    dispatchEvent(element, hideModalEvent);\n    if (hideModalEvent.defaultPrevented) return;\n    removeClass(element, showClass);\n    setAttribute(element, ariaHidden, 'true');\n    removeAttribute(element, ariaModal);\n\n    // if (hasFade && callback) {\n    /* istanbul ignore else */\n    if (hasFade) {\n      emulateTransitionEnd(element, () => beforeModalHide(self, callback));\n    } else {\n      beforeModalHide(self, callback);\n    }\n  }\n\n  /**\n   * Updates the modal layout.\n   * @this {Modal} the modal instance\n   */\n  update() {\n    const self = this;\n    /* istanbul ignore else */\n    if (hasClass(self.element, showClass)) setModalScrollbar(self);\n  }\n\n  /** Removes the `Modal` component from target element. */\n  dispose() {\n    const self = this;\n    toggleModalHandler(self);\n    // use callback\n    self.hide(() => super.dispose());\n  }\n}\n\nObjectAssign(Modal, {\n  selector: modalSelector,\n  init: modalInitCallback,\n  getInstance: getModalInstance,\n});\n\n/** @type {string} */\nconst offcanvasComponent = 'Offcanvas';\n\n/* Native JavaScript for Bootstrap 5 | OffCanvas\n------------------------------------------------ */\n\n// OFFCANVAS PRIVATE GC\n// ====================\nconst offcanvasSelector = `.${offcanvasString}`;\nconst offcanvasToggleSelector = `[${dataBsToggle}=\"${offcanvasString}\"]`;\nconst offcanvasDismissSelector = `[${dataBsDismiss}=\"${offcanvasString}\"]`;\nconst offcanvasTogglingClass = `${offcanvasString}-toggling`;\n\nconst offcanvasDefaults = {\n  backdrop: true, // boolean\n  keyboard: true, // boolean\n  scroll: false, // boolean\n};\n\n/**\n * Static method which returns an existing `Offcanvas` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Offcanvas>}\n */\nconst getOffcanvasInstance = (element) => getInstance(element, offcanvasComponent);\n\n/**\n * An `Offcanvas` initialization callback.\n * @type {BSN.InitCallback<Offcanvas>}\n */\nconst offcanvasInitCallback = (element) => new Offcanvas(element);\n\n// OFFCANVAS CUSTOM EVENTS\n// =======================\nconst showOffcanvasEvent = OriginalEvent(`show.bs.${offcanvasString}`);\nconst shownOffcanvasEvent = OriginalEvent(`shown.bs.${offcanvasString}`);\nconst hideOffcanvasEvent = OriginalEvent(`hide.bs.${offcanvasString}`);\nconst hiddenOffcanvasEvent = OriginalEvent(`hidden.bs.${offcanvasString}`);\n\n// OFFCANVAS PRIVATE METHODS\n// =========================\n/**\n * Sets additional style for the `<body>` and other elements\n * when showing an offcanvas to the user.\n *\n * @param {Offcanvas} self the `Offcanvas` instance\n */\nfunction setOffCanvasScrollbar(self) {\n  const { element } = self;\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  setScrollbar(element, clientHeight !== scrollHeight);\n}\n\n/**\n * Toggles on/off the `click` event listeners.\n *\n * @param {Offcanvas} self the `Offcanvas` instance\n * @param {boolean=} add when *true*, listeners are added\n */\nfunction toggleOffcanvasEvents(self, add) {\n  const action = add ? addListener : removeListener;\n  self.triggers.forEach((btn) => action(btn, mouseclickEvent, offcanvasTriggerHandler));\n}\n\n/**\n * Toggles on/off the listeners of the events that close the offcanvas.\n *\n * @param {Offcanvas} self the `Offcanvas` instance\n * @param {boolean=} add when *true* listeners are added\n */\nfunction toggleOffCanvasDismiss(self, add) {\n  const action = add ? addListener : removeListener;\n  const doc = getDocument(self.element);\n  action(doc, keydownEvent, offcanvasKeyDismissHandler);\n  action(doc, mouseclickEvent, offcanvasDismissHandler);\n}\n\n/**\n * Executes before showing the offcanvas.\n *\n * @param {Offcanvas} self the `Offcanvas` instance\n */\nfunction beforeOffcanvasShow(self) {\n  const { element, options } = self;\n\n  /* istanbul ignore else */\n  if (!options.scroll) {\n    setOffCanvasScrollbar(self);\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, offcanvasTogglingClass);\n  addClass(element, showClass);\n  setElementStyle(element, { visibility: 'visible' });\n\n  emulateTransitionEnd(element, () => showOffcanvasComplete(self));\n}\n\n/**\n * Executes before hiding the offcanvas.\n *\n * @param {Offcanvas} self the `Offcanvas` instance\n * @param {Function=} callback the hide callback\n */\nfunction beforeOffcanvasHide(self, callback) {\n  const { element, options } = self;\n  const currentOpen = getCurrentOpen(element);\n\n  element.blur();\n\n  if (!currentOpen && options.backdrop && hasClass(overlay, showClass)) {\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => hideOffcanvasComplete(self, callback));\n  } else hideOffcanvasComplete(self, callback);\n}\n\n// OFFCANVAS EVENT HANDLERS\n// ========================\n/**\n * Handles the `click` event listeners.\n *\n * @this {HTMLElement}\n * @param {MouseEvent} e the `Event` object\n */\nfunction offcanvasTriggerHandler(e) {\n  const trigger = closest(this, offcanvasToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    self.relatedTarget = trigger;\n    self.toggle();\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') {\n      e.preventDefault();\n    }\n  }\n}\n\n/**\n * Handles the event listeners that close the offcanvas.\n *\n * @param {MouseEvent} e the `Event` object\n */\nfunction offcanvasDismissHandler(e) {\n  const { target } = e;\n  const element = querySelector(offcanvasActiveSelector, getDocument(target));\n  const offCanvasDismiss = querySelector(offcanvasDismissSelector, element);\n  const self = getOffcanvasInstance(element);\n\n  /* istanbul ignore next: must have a filter */\n  if (!self) return;\n\n  const { options, triggers } = self;\n  const { backdrop } = options;\n  const trigger = closest(target, offcanvasToggleSelector);\n  const selection = getDocument(element).getSelection();\n\n  if (overlay.contains(target) && backdrop === 'static') return;\n\n  /* istanbul ignore else */\n  if (!(selection && selection.toString().length)\n    && ((!element.contains(target) && backdrop\n    && /* istanbul ignore next */(!trigger || triggers.includes(target)))\n    || (offCanvasDismiss && offCanvasDismiss.contains(target)))) {\n    self.relatedTarget = offCanvasDismiss && offCanvasDismiss.contains(target)\n      ? offCanvasDismiss : null;\n    self.hide();\n  }\n\n  /* istanbul ignore next */\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n}\n\n/**\n * Handles the `keydown` event listener for offcanvas\n * to hide it when user type the `ESC` key.\n *\n * @param {KeyboardEvent} e the `Event` object\n */\nfunction offcanvasKeyDismissHandler({ code, target }) {\n  const element = querySelector(offcanvasActiveSelector, getDocument(target));\n\n  const self = getOffcanvasInstance(element);\n\n  /* istanbul ignore next: must filter */\n  if (!self) return;\n\n  /* istanbul ignore else */\n  if (self.options.keyboard && code === keyEscape) {\n    self.relatedTarget = null;\n    self.hide();\n  }\n}\n\n/**\n * Handles the `transitionend` when showing the offcanvas.\n *\n * @param {Offcanvas} self the `Offcanvas` instance\n */\nfunction showOffcanvasComplete(self) {\n  const { element } = self;\n  removeClass(element, offcanvasTogglingClass);\n\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n  setAttribute(element, 'role', 'dialog');\n\n  dispatchEvent(element, shownOffcanvasEvent);\n\n  toggleOffCanvasDismiss(self, true);\n  focus(element);\n}\n\n/**\n * Handles the `transitionend` when hiding the offcanvas.\n *\n * @param {Offcanvas} self the `Offcanvas` instance\n * @param {Function} callback the hide callback\n */\nfunction hideOffcanvasComplete(self, callback) {\n  const { element, triggers } = self;\n\n  setAttribute(element, ariaHidden, 'true');\n  removeAttribute(element, ariaModal);\n  removeAttribute(element, 'role');\n  setElementStyle(element, { visibility: '' });\n\n  const visibleTrigger = showOffcanvasEvent.relatedTarget || triggers.find((x) => isVisible(x));\n  /* istanbul ignore else */\n  if (visibleTrigger) focus(visibleTrigger);\n\n  removeOverlay(element);\n\n  dispatchEvent(element, hiddenOffcanvasEvent);\n  removeClass(element, offcanvasTogglingClass);\n\n  // must check for open instances\n  if (!getCurrentOpen(element)) {\n    toggleOffCanvasDismiss(self);\n  }\n  // callback\n  if (callback) callback();\n}\n\n// OFFCANVAS DEFINITION\n// ====================\n/** Returns a new `Offcanvas` instance. */\nclass Offcanvas extends BaseComponent {\n  /**\n   * @param {HTMLElement | string} target usually an `.offcanvas` element\n   * @param {BSN.Options.Offcanvas=} config instance options\n   */\n  constructor(target, config) {\n    super(target, config);\n    const self = this;\n\n    // instance element\n    const { element } = self;\n\n    // all the triggering buttons\n    /** @type {HTMLElement[]} */\n    self.triggers = [...querySelectorAll(offcanvasToggleSelector, getDocument(element))]\n      .filter((btn) => getTargetElement(btn) === element);\n\n    // additional instance property\n    /** @type {HTMLBodyElement | HTMLElement} */\n    self.container = getElementContainer(element);\n    /** @type {HTMLElement?} */\n    self.relatedTarget = null;\n\n    // attach event listeners\n    toggleOffcanvasEvents(self, true);\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() { return offcanvasComponent; }\n  /**\n   * Returns component default options.\n   */\n  get defaults() { return offcanvasDefaults; }\n  /* eslint-enable */\n\n  // OFFCANVAS PUBLIC METHODS\n  // ========================\n  /** Shows or hides the offcanvas from the user. */\n  toggle() {\n    const self = this;\n    if (hasClass(self.element, showClass)) self.hide();\n    else self.show();\n  }\n\n  /** Shows the offcanvas to the user. */\n  show() {\n    const self = this;\n    const {\n      element, options, container, relatedTarget,\n    } = self;\n    let overlayDelay = 0;\n\n    if (hasClass(element, showClass)) return;\n\n    showOffcanvasEvent.relatedTarget = relatedTarget;\n    shownOffcanvasEvent.relatedTarget = relatedTarget;\n    dispatchEvent(element, showOffcanvasEvent);\n    if (showOffcanvasEvent.defaultPrevented) return;\n\n    // we elegantly hide any opened modal/offcanvas\n    const currentOpen = getCurrentOpen(element);\n    if (currentOpen && currentOpen !== element) {\n      const this1 = getOffcanvasInstance(currentOpen);\n      const that1 = this1\n        || /* istanbul ignore next */getInstance(currentOpen, 'Modal');\n      that1.hide();\n    }\n\n    if (options.backdrop) {\n      if (!container.contains(overlay)) {\n        appendOverlay(container, true);\n      } else {\n        toggleOverlayType();\n      }\n\n      overlayDelay = getElementTransitionDuration(overlay);\n      showOverlay();\n\n      setTimeout(() => beforeOffcanvasShow(self), overlayDelay);\n    } else {\n      beforeOffcanvasShow(self);\n      /* istanbul ignore else */\n      if (currentOpen && hasClass(overlay, showClass)) {\n        hideOverlay();\n      }\n    }\n  }\n\n  /**\n   * Hides the offcanvas from the user.\n   * @param {Function=} callback when `true` it will skip animation\n   */\n  hide(callback) {\n    const self = this;\n    const { element, relatedTarget } = self;\n\n    if (!hasClass(element, showClass)) return;\n\n    hideOffcanvasEvent.relatedTarget = relatedTarget;\n    hiddenOffcanvasEvent.relatedTarget = relatedTarget;\n    dispatchEvent(element, hideOffcanvasEvent);\n    if (hideOffcanvasEvent.defaultPrevented) return;\n\n    addClass(element, offcanvasTogglingClass);\n    removeClass(element, showClass);\n\n    if (!callback) {\n      emulateTransitionEnd(element, () => beforeOffcanvasHide(self, callback));\n    } else beforeOffcanvasHide(self, callback);\n  }\n\n  /** Removes the `Offcanvas` from the target element. */\n  dispose() {\n    const self = this;\n    toggleOffcanvasEvents(self);\n    self.hide(() => super.dispose());\n  }\n}\n\nObjectAssign(Offcanvas, {\n  selector: offcanvasSelector,\n  init: offcanvasInitCallback,\n  getInstance: getOffcanvasInstance,\n});\n\n/** @type {string} */\nconst popoverString = 'popover';\n\n/** @type {string} */\nconst popoverComponent = 'Popover';\n\n/** @type {string} */\nconst tooltipString = 'tooltip';\n\n/**\n * Returns a template for Popover / Tooltip.\n *\n * @param {string} tipType the expected markup type\n * @returns {string} the template markup\n */\nfunction getTipTemplate(tipType) {\n  const isTooltip = tipType === tooltipString;\n  const bodyClass = isTooltip ? `${tipType}-inner` : `${tipType}-body`;\n  const header = !isTooltip ? `<h3 class=\"${tipType}-header\"></h3>` : '';\n  const arrow = `<div class=\"${tipType}-arrow\"></div>`;\n  const body = `<div class=\"${bodyClass}\"></div>`;\n  return `<div class=\"${tipType}\" role=\"${tooltipString}\">${header + arrow + body}</div>`;\n}\n\n/**\n * Checks if an element is an `<svg>` (or any type of SVG element),\n * `<img>` or `<video>`.\n *\n * *Tooltip* / *Popover* works different with media elements.\n * @param {any} element the target element\n * @returns {boolean} the query result\n */\n\nconst isMedia = (element) => (\n  element\n  && element.nodeType === 1\n  && ['SVG', 'Image', 'Video'].some((s) => element.constructor.name.includes(s))) || false;\n\n/**\n * Returns an `{x,y}` object with the target\n * `HTMLElement` / `Node` scroll position.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param {HTMLElement | Window} element target node / element\n * @returns {{x: number, y: number}} the scroll tuple\n */\nfunction getNodeScroll(element) {\n  const isWin = 'scrollX' in element;\n  const x = isWin ? element.scrollX : element.scrollLeft;\n  const y = isWin ? element.scrollY : element.scrollTop;\n\n  return { x, y };\n}\n\n/**\n * Checks if a target `HTMLElement` is affected by scale.\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param {HTMLElement} element target\n * @returns {boolean} the query result\n */\nfunction isScaledElement(element) {\n  if (!element || !isHTMLElement(element)) return false;\n  const { width, height } = getBoundingClientRect(element);\n  const { offsetWidth, offsetHeight } = element;\n  return Math.round(width) !== offsetWidth\n    || Math.round(height) !== offsetHeight;\n}\n\n/**\n * Returns the rect relative to an offset parent.\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param {HTMLElement} element target\n * @param {ParentNode | Window} offsetParent the container / offset parent\n * @param {{x: number, y: number}} scroll the offsetParent scroll position\n * @returns {SHORTY.OffsetRect}\n */\nfunction getRectRelativeToOffsetParent(element, offsetParent, scroll) {\n  const isParentAnElement = isHTMLElement(offsetParent);\n  const rect = getBoundingClientRect(element, isParentAnElement && isScaledElement(offsetParent));\n  const offsets = { x: 0, y: 0 };\n\n  /* istanbul ignore next */\n  if (isParentAnElement) {\n    const offsetRect = getBoundingClientRect(offsetParent, true);\n    offsets.x = offsetRect.x + offsetParent.clientLeft;\n    offsets.y = offsetRect.y + offsetParent.clientTop;\n  }\n\n  return {\n    x: rect.left + scroll.x - offsets.x,\n    y: rect.top + scroll.y - offsets.y,\n    width: rect.width,\n    height: rect.height,\n  };\n}\n\n/** @type {Record<string, string>} */\nconst tipClassPositions = {\n  top: 'top',\n  bottom: 'bottom',\n  left: 'start',\n  right: 'end',\n};\n\n/**\n * Style popovers and tooltips.\n * @param {BSN.Tooltip | BSN.Popover} self the `Popover` / `Tooltip` instance\n * @param {PointerEvent=} e event object\n */\nfunction styleTip(self, e) {\n  const tipClasses = /\\b(top|bottom|start|end)+/;\n  const {\n    element, tooltip, options, arrow, offsetParent,\n  } = self;\n  const tipPositions = { ...tipClassPositions };\n\n  const RTL = isRTL(element);\n  if (RTL) {\n    tipPositions.left = 'end';\n    tipPositions.right = 'start';\n  }\n\n  // reset tooltip style (top: 0, left: 0 works best)\n  setElementStyle(tooltip, {\n    // top: '0px', left: '0px', right: '', bottom: '',\n    top: '', left: '', right: '', bottom: '',\n  });\n  const isPopover = self.name === popoverComponent;\n  const {\n    offsetWidth: tipWidth, offsetHeight: tipHeight,\n  } = tooltip;\n  const {\n    clientWidth: htmlcw, clientHeight: htmlch,\n  } = getDocumentElement(element);\n  const { container } = options;\n  let { placement } = options;\n  const {\n    left: parentLeft, right: parentRight, top: parentTop,\n  } = getBoundingClientRect(container, true);\n  const {\n    clientWidth: parentCWidth, offsetWidth: parentOWidth,\n  } = container;\n  const scrollbarWidth = Math.abs(parentCWidth - parentOWidth);\n  // const tipAbsolute = getElementStyle(tooltip, 'position') === 'absolute';\n  const parentPosition = getElementStyle(container, 'position');\n  // const absoluteParent = parentPosition === 'absolute';\n  const fixedParent = parentPosition === 'fixed';\n  const staticParent = parentPosition === 'static';\n  const stickyParent = parentPosition === 'sticky';\n  const isSticky = stickyParent && parentTop === parseFloat(getElementStyle(container, 'top'));\n  // const absoluteTarget = getElementStyle(element, 'position') === 'absolute';\n  // const stickyFixedParent = ['sticky', 'fixed'].includes(parentPosition);\n  const leftBoundry = RTL && fixedParent ? scrollbarWidth : 0;\n  const rightBoundry = fixedParent ? parentCWidth + parentLeft + (RTL ? scrollbarWidth : 0)\n    : parentCWidth + parentLeft + (htmlcw - parentRight) - 1;\n  const {\n    width: elemWidth,\n    height: elemHeight,\n    left: elemRectLeft,\n    right: elemRectRight,\n    top: elemRectTop,\n  } = getBoundingClientRect(element, true);\n\n  const scroll = getNodeScroll(offsetParent);\n  const { x, y } = getRectRelativeToOffsetParent(element, offsetParent, scroll);\n  // reset arrow style\n  setElementStyle(arrow, {\n    top: '', left: '', right: '', bottom: '',\n  });\n  let topPosition;\n  let leftPosition;\n  let rightPosition;\n  let arrowTop;\n  let arrowLeft;\n  let arrowRight;\n\n  const arrowWidth = arrow.offsetWidth || 0;\n  const arrowHeight = arrow.offsetHeight || 0;\n  const arrowAdjust = arrowWidth / 2;\n\n  // check placement\n  let topExceed = elemRectTop - tipHeight - arrowHeight < 0;\n  let bottomExceed = elemRectTop + tipHeight + elemHeight\n    + arrowHeight >= htmlch;\n  let leftExceed = elemRectLeft - tipWidth - arrowWidth < leftBoundry;\n  let rightExceed = elemRectLeft + tipWidth + elemWidth\n    + arrowWidth >= rightBoundry;\n\n  const horizontal = ['left', 'right'];\n  const vertical = ['top', 'bottom'];\n\n  topExceed = horizontal.includes(placement)\n    ? elemRectTop + elemHeight / 2 - tipHeight / 2 - arrowHeight < 0\n    : topExceed;\n  bottomExceed = horizontal.includes(placement)\n    ? elemRectTop + tipHeight / 2 + elemHeight / 2 + arrowHeight >= htmlch\n    : bottomExceed;\n  leftExceed = vertical.includes(placement)\n    ? elemRectLeft + elemWidth / 2 - tipWidth / 2 < leftBoundry\n    : leftExceed;\n  rightExceed = vertical.includes(placement)\n    ? elemRectLeft + tipWidth / 2 + elemWidth / 2 >= rightBoundry\n    : rightExceed;\n\n  // first remove side positions if both left and right limits are exceeded\n  // we usually fall back to top|bottom\n  placement = (horizontal.includes(placement)) && leftExceed && rightExceed ? 'top' : placement;\n  // second, recompute placement\n  placement = placement === 'top' && topExceed ? 'bottom' : placement;\n  placement = placement === 'bottom' && bottomExceed ? 'top' : placement;\n  placement = placement === 'left' && leftExceed ? 'right' : placement;\n  placement = placement === 'right' && rightExceed ? 'left' : placement;\n\n  // update tooltip/popover class\n  if (!tooltip.className.includes(placement)) {\n    tooltip.className = tooltip.className.replace(tipClasses, tipPositions[placement]);\n  }\n\n  // compute tooltip / popover coordinates\n  /* istanbul ignore else */\n  if (horizontal.includes(placement)) { // secondary|side positions\n    if (placement === 'left') { // LEFT\n      leftPosition = x - tipWidth - (isPopover ? arrowWidth : 0);\n    } else { // RIGHT\n      leftPosition = x + elemWidth + (isPopover ? arrowWidth : 0);\n    }\n\n    // adjust top and arrow\n    if (topExceed) {\n      topPosition = y;\n      topPosition += (isSticky ? -parentTop - scroll.y : 0);\n\n      arrowTop = elemHeight / 2 - arrowWidth;\n    } else if (bottomExceed) {\n      topPosition = y - tipHeight + elemHeight;\n      topPosition += (isSticky ? -parentTop - scroll.y : 0);\n\n      arrowTop = tipHeight - elemHeight / 2 - arrowWidth;\n    } else {\n      topPosition = y - tipHeight / 2 + elemHeight / 2;\n      topPosition += (isSticky ? -parentTop - scroll.y : 0);\n\n      arrowTop = tipHeight / 2 - arrowHeight / 2;\n    }\n  } else if (vertical.includes(placement)) {\n    if (e && isMedia(element)) {\n      let eX = 0;\n      let eY = 0;\n      if (staticParent) {\n        eX = e.pageX;\n        eY = e.pageY;\n      } else { // fixedParent | stickyParent\n        eX = e.clientX - parentLeft + (fixedParent ? scroll.x : 0);\n        eY = e.clientY - parentTop + (fixedParent ? scroll.y : 0);\n      }\n\n      // some weird RTL bug\n      eX -= RTL && fixedParent && scrollbarWidth ? scrollbarWidth : 0;\n\n      if (placement === 'top') {\n        topPosition = eY - tipHeight - arrowWidth;\n      } else {\n        topPosition = eY + arrowWidth;\n      }\n\n      // adjust (left | right) and also the arrow\n      if (e.clientX - tipWidth / 2 < leftBoundry) {\n        leftPosition = 0;\n        arrowLeft = eX - arrowAdjust;\n      } else if (e.clientX + tipWidth / 2 > rightBoundry) {\n        leftPosition = 'auto';\n        rightPosition = 0;\n        arrowRight = rightBoundry - eX - arrowAdjust;\n        arrowRight -= fixedParent ? parentLeft + (RTL ? scrollbarWidth : 0) : 0;\n\n      // normal top/bottom\n      } else {\n        leftPosition = eX - tipWidth / 2;\n        arrowLeft = tipWidth / 2 - arrowAdjust;\n      }\n    } else {\n      if (placement === 'top') {\n        topPosition = y - tipHeight - (isPopover ? arrowHeight : 0);\n      } else { // BOTTOM\n        topPosition = y + elemHeight + (isPopover ? arrowHeight : 0);\n      }\n\n      // adjust left | right and also the arrow\n      if (leftExceed) {\n        leftPosition = 0;\n        arrowLeft = x + elemWidth / 2 - arrowAdjust;\n      } else if (rightExceed) {\n        leftPosition = 'auto';\n        rightPosition = 0;\n        arrowRight = elemWidth / 2 + rightBoundry - elemRectRight - arrowAdjust;\n      } else {\n        leftPosition = x - tipWidth / 2 + elemWidth / 2;\n        arrowLeft = tipWidth / 2 - arrowAdjust;\n      }\n    }\n  }\n\n  // apply style to tooltip/popover\n  setElementStyle(tooltip, {\n    top: `${topPosition}px`,\n    left: leftPosition === 'auto' ? leftPosition : `${leftPosition}px`,\n    right: rightPosition !== undefined ? `${rightPosition}px` : '',\n  });\n\n  // update arrow placement\n  /* istanbul ignore else */\n  if (isHTMLElement(arrow)) {\n    if (arrowTop !== undefined) {\n      arrow.style.top = `${arrowTop}px`;\n    }\n    if (arrowLeft !== undefined) {\n      arrow.style.left = `${arrowLeft}px`;\n    } else if (arrowRight !== undefined) {\n      arrow.style.right = `${arrowRight}px`;\n    }\n  }\n}\n\nconst tooltipDefaults = {\n  /** @type {string} */\n  template: getTipTemplate(tooltipString),\n  /** @type {string?} */\n  title: null, // string\n  /** @type {string?} */\n  customClass: null, // string | null\n  /** @type {string} */\n  trigger: 'hover focus',\n  /** @type {string?} */\n  placement: 'top', // string\n  /** @type {((c:string)=>string)?} */\n  sanitizeFn: null, // function\n  /** @type {boolean} */\n  animation: true, // bool\n  /** @type {number} */\n  delay: 200, // number\n  /** @type {HTMLElement?} */\n  container: null,\n};\n\n/**\n * A global namespace for aria-describedby.\n * @type {string}\n */\nconst ariaDescribedBy = 'aria-describedby';\n\n/**\n * A global namespace for `mousedown` event.\n * @type {string}\n */\nconst mousedownEvent = 'mousedown';\n\n/**\n * A global namespace for `mousemove` event.\n * @type {string}\n */\nconst mousemoveEvent = 'mousemove';\n\n/**\n * A global namespace for `focusin` event.\n * @type {string}\n */\nconst focusinEvent = 'focusin';\n\n/**\n * A global namespace for `focusout` event.\n * @type {string}\n */\nconst focusoutEvent = 'focusout';\n\n/**\n * A global namespace for `hover` event.\n * @type {string}\n */\nconst mousehoverEvent = 'hover';\n\n/**\n * A global namespace for `touchstart` event.\n * @type {string}\n */\nconst touchstartEvent = 'touchstart';\n\nlet elementUID = 0;\nlet elementMapUID = 0;\nconst elementIDMap = new Map();\n\n/**\n * Returns a unique identifier for popover, tooltip, scrollspy.\n *\n * @param {HTMLElement} element target element\n * @param {string=} key predefined key\n * @returns {number} an existing or new unique ID\n */\nfunction getUID(element, key) {\n  let result = key ? elementUID : elementMapUID;\n\n  if (key) {\n    const elID = getUID(element);\n    const elMap = elementIDMap.get(elID) || new Map();\n    if (!elementIDMap.has(elID)) {\n      elementIDMap.set(elID, elMap);\n    }\n    if (!elMap.has(key)) {\n      elMap.set(key, result);\n      elementUID += 1;\n    } else result = elMap.get(key);\n  } else {\n    const elkey = element.id || element;\n\n    if (!elementIDMap.has(elkey)) {\n      elementIDMap.set(elkey, result);\n      elementMapUID += 1;\n    } else result = elementIDMap.get(elkey);\n  }\n  return result;\n}\n\n/**\n * Checks if an object is a `Function`.\n *\n * @param {any} fn the target object\n * @returns {boolean} the query result\n */\nconst isFunction = (fn) => (fn && fn.constructor.name === 'Function') || false;\n\nconst { userAgentData: uaDATA } = navigator;\n\n/**\n * A global namespace for `userAgentData` object.\n */\nconst userAgentData = uaDATA;\n\nconst { userAgent: userAgentString } = navigator;\n\n/**\n * A global namespace for `navigator.userAgent` string.\n */\nconst userAgent = userAgentString;\n\nconst appleBrands = /(iPhone|iPod|iPad)/;\n\n/**\n * A global `boolean` for Apple browsers.\n * @type {boolean}\n */\nconst isApple = userAgentData ? userAgentData.brands.some((x) => appleBrands.test(x.brand))\n  : /* istanbul ignore next */appleBrands.test(userAgent);\n\n/**\n * Global namespace for `data-bs-title` attribute.\n */\nconst dataOriginalTitle = 'data-original-title';\n\n/** @type {string} */\nconst tooltipComponent = 'Tooltip';\n\n/**\n * Checks if an object is a `NodeList`.\n * => equivalent to `object instanceof NodeList`\n *\n * @param {any} object the target object\n * @returns {boolean} the query result\n */\nconst isNodeList = (object) => (object && object.constructor.name === 'NodeList') || false;\n\n/**\n * Shortcut for `typeof SOMETHING === \"string\"`.\n *\n * @param  {any} str input value\n * @returns {boolean} the query result\n */\nconst isString = (str) => typeof str === 'string';\n\n/**\n * Shortcut for `Array.isArray()` static method.\n *\n * @param  {any} arr array-like iterable object\n * @returns {boolean} the query result\n */\nconst isArray = (arr) => Array.isArray(arr);\n\n/**\n * Append an existing `Element` to Popover / Tooltip component or HTML\n * markup string to be parsed & sanitized to be used as popover / tooltip content.\n *\n * @param {HTMLElement} element target\n * @param {Node | string} content the `Element` to append / string\n * @param {ReturnType<any>} sanitizeFn a function to sanitize string content\n */\nfunction setHtml(element, content, sanitizeFn) {\n  /* istanbul ignore next */\n  if (!isHTMLElement(element) || (isString(content) && !content.length)) return;\n\n  /* istanbul ignore else */\n  if (isString(content)) {\n    let dirty = content.trim(); // fixing #233\n    if (isFunction(sanitizeFn)) dirty = sanitizeFn(dirty);\n\n    const win = getWindow(element);\n    const domParser = new win.DOMParser();\n    const tempDocument = domParser.parseFromString(dirty, 'text/html');\n    element.append(...[...tempDocument.body.childNodes]);\n  } else if (isHTMLElement(content)) {\n    element.append(content);\n  } else if (isNodeList(content)\n    || (isArray(content) && content.every(isNode))) {\n    element.append(...[...content]);\n  }\n}\n\n/**\n * Creates a new tooltip / popover.\n *\n * @param {BSN.Popover | BSN.Tooltip} self the `Tooltip` / `Popover` instance\n */\nfunction createTip(self) {\n  const { id, element, options } = self;\n  const {\n    animation, customClass, sanitizeFn, placement, dismissible,\n    title, content, template, btnClose,\n  } = options;\n  const isTooltip = self.name === tooltipComponent;\n  const tipString = isTooltip ? tooltipString : popoverString;\n  const tipPositions = { ...tipClassPositions };\n  let titleParts = [];\n  let contentParts = [];\n\n  if (isRTL(element)) {\n    tipPositions.left = 'end';\n    tipPositions.right = 'start';\n  }\n\n  // set initial popover class\n  const placementClass = `bs-${tipString}-${tipPositions[placement]}`;\n\n  // load template\n  /** @type {HTMLElement?} */\n  let tooltipTemplate;\n  if (isHTMLElement(template)) {\n    tooltipTemplate = template;\n  } else {\n    const htmlMarkup = createElement('div');\n    setHtml(htmlMarkup, template, sanitizeFn);\n    tooltipTemplate = htmlMarkup.firstChild;\n  }\n\n  // set popover markup\n  self.tooltip = isHTMLElement(tooltipTemplate) && tooltipTemplate.cloneNode(true);\n\n  const { tooltip } = self;\n\n  // set id and role attributes\n  setAttribute(tooltip, 'id', id);\n  setAttribute(tooltip, 'role', tooltipString);\n\n  const bodyClass = isTooltip ? `${tooltipString}-inner` : `${popoverString}-body`;\n  const tooltipHeader = isTooltip ? null : querySelector(`.${popoverString}-header`, tooltip);\n  const tooltipBody = querySelector(`.${bodyClass}`, tooltip);\n\n  // set arrow and enable access for styleTip\n  self.arrow = querySelector(`.${tipString}-arrow`, tooltip);\n  const { arrow } = self;\n\n  if (isHTMLElement(title)) titleParts = [title.cloneNode(true)];\n  else {\n    const tempTitle = createElement('div');\n    setHtml(tempTitle, title, sanitizeFn);\n    titleParts = [...[...tempTitle.childNodes]];\n  }\n\n  if (isHTMLElement(content)) contentParts = [content.cloneNode(true)];\n  else {\n    const tempContent = createElement('div');\n    setHtml(tempContent, content, sanitizeFn);\n    contentParts = [...[...tempContent.childNodes]];\n  }\n\n  // set dismissible button\n  if (dismissible) {\n    if (title) {\n      if (isHTMLElement(btnClose)) titleParts = [...titleParts, btnClose.cloneNode(true)];\n      else {\n        const tempBtn = createElement('div');\n        setHtml(tempBtn, btnClose, sanitizeFn);\n        titleParts = [...titleParts, tempBtn.firstChild];\n      }\n    } else {\n      /* istanbul ignore else */\n      if (tooltipHeader) tooltipHeader.remove();\n      if (isHTMLElement(btnClose)) contentParts = [...contentParts, btnClose.cloneNode(true)];\n      else {\n        const tempBtn = createElement('div');\n        setHtml(tempBtn, btnClose, sanitizeFn);\n        contentParts = [...contentParts, tempBtn.firstChild];\n      }\n    }\n  }\n\n  // fill the template with content from options / data attributes\n  // also sanitize title && content\n  /* istanbul ignore else */\n  if (!isTooltip) {\n    /* istanbul ignore else */\n    if (title && tooltipHeader) setHtml(tooltipHeader, titleParts, sanitizeFn);\n    /* istanbul ignore else */\n    if (content && tooltipBody) setHtml(tooltipBody, contentParts, sanitizeFn);\n    // set btn\n    self.btn = querySelector('.btn-close', tooltip);\n  } else if (title && tooltipBody) setHtml(tooltipBody, title, sanitizeFn);\n\n  // Bootstrap 5.2.x\n  addClass(tooltip, 'position-absolute');\n  addClass(arrow, 'position-absolute');\n\n  // set popover animation and placement\n  /* istanbul ignore else */\n  if (!hasClass(tooltip, tipString)) addClass(tooltip, tipString);\n  /* istanbul ignore else */\n  if (animation && !hasClass(tooltip, fadeClass)) addClass(tooltip, fadeClass);\n  /* istanbul ignore else */\n  if (customClass && !hasClass(tooltip, customClass)) {\n    addClass(tooltip, customClass);\n  }\n  /* istanbul ignore else */\n  if (!hasClass(tooltip, placementClass)) addClass(tooltip, placementClass);\n}\n\n/**\n * @param {HTMLElement} tip target\n * @param {ParentNode} container parent container\n * @returns {boolean}\n */\nfunction isVisibleTip(tip, container) {\n  return isHTMLElement(tip) && container.contains(tip);\n}\n\n/* Native JavaScript for Bootstrap 5 | Tooltip\n---------------------------------------------- */\n\n// TOOLTIP PRIVATE GC\n// ==================\nconst tooltipSelector = `[${dataBsToggle}=\"${tooltipString}\"],[data-tip=\"${tooltipString}\"]`;\nconst titleAttr = 'title';\n\n/**\n * Static method which returns an existing `Tooltip` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Tooltip>}\n */\nlet getTooltipInstance = (element) => getInstance(element, tooltipComponent);\n\n/**\n * A `Tooltip` initialization callback.\n * @type {BSN.InitCallback<Tooltip>}\n */\nconst tooltipInitCallback = (element) => new Tooltip(element);\n\n// TOOLTIP PRIVATE METHODS\n// =======================\n/**\n * Removes the tooltip from the DOM.\n *\n * @param {Tooltip} self the `Tooltip` instance\n */\nfunction removeTooltip(self) {\n  const { element, tooltip } = self;\n  removeAttribute(element, ariaDescribedBy);\n  tooltip.remove();\n}\n\n/**\n * Executes after the instance has been disposed.\n *\n * @param {Tooltip} self the `Tooltip` instance\n * @param {Function=} callback the parent dispose callback\n */\nfunction disposeTooltipComplete(self, callback) {\n  const { element } = self;\n  toggleTooltipHandlers(self);\n\n  /* istanbul ignore else */\n  if (hasAttribute(element, dataOriginalTitle) && self.name === tooltipComponent) {\n    toggleTooltipTitle(self);\n  }\n  /* istanbul ignore else */\n  if (callback) callback();\n}\n\n/**\n * Toggles on/off the special `Tooltip` event listeners.\n *\n * @param {Tooltip} self the `Tooltip` instance\n * @param {boolean=} add when `true`, event listeners are added\n */\nfunction toggleTooltipAction(self, add) {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n\n  action(getDocument(element), touchstartEvent, self.handleTouch, passiveHandler);\n\n  /* istanbul ignore else */\n  if (!isMedia(element)) {\n    [scrollEvent, resizeEvent].forEach((ev) => {\n      action(getWindow(element), ev, self.update, passiveHandler);\n    });\n  }\n}\n\n/**\n * Executes after the tooltip was shown to the user.\n *\n * @param {Tooltip} self the `Tooltip` instance\n */\nfunction tooltipShownAction(self) {\n  const { element } = self;\n  const shownTooltipEvent = OriginalEvent(`shown.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self, true);\n  dispatchEvent(element, shownTooltipEvent);\n  Timer.clear(element, 'in');\n}\n\n/**\n * Executes after the tooltip was hidden to the user.\n *\n * @param {Tooltip} self the `Tooltip` instance\n * @param {Function=} callback the dispose callback\n */\nfunction tooltipHiddenAction(self, callback) {\n  const { element } = self;\n  const hiddenTooltipEvent = OriginalEvent(`hidden.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self);\n  removeTooltip(self);\n  dispatchEvent(element, hiddenTooltipEvent);\n  if (isFunction(callback)) callback();\n  Timer.clear(element, 'out');\n}\n\n/**\n * Toggles on/off the `Tooltip` event listeners.\n *\n * @param {Tooltip} self the `Tooltip` instance\n * @param {boolean=} add when `true`, event listeners are added\n */\nfunction toggleTooltipHandlers(self, add) {\n  const action = add ? addListener : removeListener;\n  // btn is only for dismissible popover\n  const { element, options, btn } = self;\n  const { trigger, dismissible } = options;\n\n  if (trigger.includes('manual')) return;\n\n  self.enabled = !!add;\n\n  /** @type {string[]} */\n  const triggerOptions = trigger.split(' ');\n  const elemIsMedia = isMedia(element);\n\n  if (elemIsMedia) {\n    action(element, mousemoveEvent, self.update, passiveHandler);\n  }\n\n  triggerOptions.forEach((tr) => {\n    /* istanbul ignore else */\n    if (elemIsMedia || tr === mousehoverEvent) {\n      action(element, mousedownEvent, self.show);\n      action(element, mouseenterEvent, self.show);\n\n      /* istanbul ignore else */\n      if (dismissible && btn) {\n        action(btn, mouseclickEvent, self.hide);\n      } else {\n        action(element, mouseleaveEvent, self.hide);\n        action(getDocument(element), touchstartEvent, self.handleTouch, passiveHandler);\n      }\n    } else if (tr === mouseclickEvent) {\n      action(element, tr, (!dismissible ? self.toggle : self.show));\n    } else if (tr === focusEvent) {\n      action(element, focusinEvent, self.show);\n      /* istanbul ignore else */\n      if (!dismissible) action(element, focusoutEvent, self.hide);\n      /* istanbul ignore else */\n      if (isApple) {\n        action(element, mouseclickEvent, () => focus(element));\n      }\n    }\n  });\n}\n\n/**\n * Toggles on/off the `Tooltip` event listeners that hide/update the tooltip.\n *\n * @param {Tooltip} self the `Tooltip` instance\n * @param {boolean=} add when `true`, event listeners are added\n */\nfunction toggleTooltipOpenHandlers(self, add) {\n  const action = add ? addListener : removeListener;\n  const { element, options, offsetParent } = self;\n  const { container } = options;\n  const { offsetHeight, scrollHeight } = container;\n  const parentModal = closest(element, `.${modalString}`);\n  const parentOffcanvas = closest(element, `.${offcanvasString}`);\n\n  /* istanbul ignore else */\n  if (!isMedia(element)) {\n    const win = getWindow(element);\n    const overflow = offsetHeight !== scrollHeight;\n    const scrollTarget = overflow || offsetParent !== win ? container : win;\n    action(win, resizeEvent, self.update, passiveHandler);\n    action(scrollTarget, scrollEvent, self.update, passiveHandler);\n  }\n\n  // dismiss tooltips inside modal / offcanvas\n  if (parentModal) action(parentModal, `hide.bs.${modalString}`, self.hide);\n  if (parentOffcanvas) action(parentOffcanvas, `hide.bs.${offcanvasString}`, self.hide);\n}\n\n/**\n * Toggles the `title` and `data-original-title` attributes.\n *\n * @param {Tooltip} self the `Tooltip` instance\n * @param {string=} content when `true`, event listeners are added\n */\nfunction toggleTooltipTitle(self, content) {\n  // [0 - add, 1 - remove] | [0 - remove, 1 - add]\n  const titleAtt = [dataOriginalTitle, titleAttr];\n  const { element } = self;\n\n  setAttribute(element, titleAtt[content ? 0 : 1],\n    (content || getAttribute(element, titleAtt[0])));\n  removeAttribute(element, titleAtt[content ? 1 : 0]);\n}\n\n// TOOLTIP DEFINITION\n// ==================\n/** Creates a new `Tooltip` instance. */\nclass Tooltip extends BaseComponent {\n  /**\n   * @param {HTMLElement | string} target the target element\n   * @param {BSN.Options.Tooltip=} config the instance options\n   */\n  constructor(target, config) {\n    super(target, config);\n\n    // bind\n    const self = this;\n    const { element } = self;\n    const isTooltip = self.name === tooltipComponent;\n    const tipString = isTooltip ? tooltipString : popoverString;\n    const tipComponent = isTooltip ? tooltipComponent : popoverComponent;\n\n    /* istanbul ignore next: this is to set Popover too */\n    getTooltipInstance = (elem) => getInstance(elem, tipComponent);\n\n    // additional properties\n    /** @type {any} */\n    self.tooltip = {};\n    if (!isTooltip) {\n      /** @type {any?} */\n      self.btn = null;\n    }\n    /** @type {any} */\n    self.arrow = {};\n    /** @type {any} */\n    self.offsetParent = {};\n    /** @type {boolean} */\n    self.enabled = true;\n    /** @type {string} Set unique ID for `aria-describedby`. */\n    self.id = `${tipString}-${getUID(element, tipString)}`;\n\n    // instance options\n    const { options } = self;\n\n    // invalidate\n    if ((!options.title && isTooltip) || (!isTooltip && !options.content)) {\n      // throw Error(`${this.name} Error: target has no content set.`);\n      return;\n    }\n\n    const container = querySelector(options.container, getDocument(element));\n    const idealContainer = getElementContainer(element);\n\n    // bypass container option when its position is static/relative\n    self.options.container = !container || (container\n      && ['static', 'relative'].includes(getElementStyle(container, 'position')))\n      ? idealContainer\n      : /* istanbul ignore next */container || getDocumentBody(element);\n\n    // reset default options\n    tooltipDefaults[titleAttr] = null;\n\n    // all functions bind\n    self.handleTouch = self.handleTouch.bind(self);\n    self.update = self.update.bind(self);\n    self.show = self.show.bind(self);\n    self.hide = self.hide.bind(self);\n    self.toggle = self.toggle.bind(self);\n\n    // set title attributes and add event listeners\n    /* istanbul ignore else */\n    if (hasAttribute(element, titleAttr) && isTooltip) {\n      toggleTooltipTitle(self, options.title);\n    }\n\n    // create tooltip here\n    createTip(self);\n\n    // attach events\n    toggleTooltipHandlers(self, true);\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() { return tooltipComponent; }\n  /**\n   * Returns component default options.\n   */\n  get defaults() { return tooltipDefaults; }\n  /* eslint-enable */\n\n  // TOOLTIP PUBLIC METHODS\n  // ======================\n  /**\n   * Shows the tooltip.\n   *\n   * @param {Event=} e the `Event` object\n   * @this {Tooltip}\n   */\n  show(e) {\n    const self = this;\n    const {\n      options, tooltip, element, id,\n    } = self;\n    const { container, animation } = options;\n    const outTimer = Timer.get(element, 'out');\n\n    Timer.clear(element, 'out');\n\n    if (tooltip && !outTimer && !isVisibleTip(tooltip, container)) {\n      Timer.set(element, () => {\n        const showTooltipEvent = OriginalEvent(`show.bs.${toLowerCase(self.name)}`);\n        dispatchEvent(element, showTooltipEvent);\n        if (showTooltipEvent.defaultPrevented) return;\n\n        // append to container\n        container.append(tooltip);\n        setAttribute(element, ariaDescribedBy, `#${id}`);\n        // set offsetParent\n        self.offsetParent = getElementContainer(tooltip, true);\n\n        self.update(e);\n        toggleTooltipOpenHandlers(self, true);\n\n        /* istanbul ignore else */\n        if (!hasClass(tooltip, showClass)) addClass(tooltip, showClass);\n        /* istanbul ignore else */\n        if (animation) emulateTransitionEnd(tooltip, () => tooltipShownAction(self));\n        else tooltipShownAction(self);\n      }, 17, 'in');\n    }\n  }\n\n  /**\n   * Hides the tooltip.\n   *\n   * @this {Tooltip} the Tooltip instance\n   * @param {Function=} callback the dispose callback\n   */\n  hide(callback) {\n    const self = this;\n    const { options, tooltip, element } = self;\n    const { container, animation, delay } = options;\n\n    Timer.clear(element, 'in');\n\n    /* istanbul ignore else */\n    if (tooltip && isVisibleTip(tooltip, container)) {\n      Timer.set(element, () => {\n        const hideTooltipEvent = OriginalEvent(`hide.bs.${toLowerCase(self.name)}`);\n        dispatchEvent(element, hideTooltipEvent);\n\n        if (hideTooltipEvent.defaultPrevented) return;\n\n        removeClass(tooltip, showClass);\n        toggleTooltipOpenHandlers(self);\n\n        /* istanbul ignore else */\n        if (animation) emulateTransitionEnd(tooltip, () => tooltipHiddenAction(self, callback));\n        else tooltipHiddenAction(self, callback);\n      }, delay + 17, 'out');\n    }\n  }\n\n  /**\n   * Updates the tooltip position.\n   *\n   * @param {Event=} e the `Event` object\n   * @this {Tooltip} the `Tooltip` instance\n   */\n  update(e) {\n    styleTip(this, e);\n  }\n\n  /**\n   * Toggles the tooltip visibility.\n   *\n   * @param {Event=} e the `Event` object\n   * @this {Tooltip} the instance\n   */\n  toggle(e) {\n    const self = this;\n    const { tooltip, options } = self;\n\n    if (!isVisibleTip(tooltip, options.container)) self.show(e);\n    else self.hide();\n  }\n\n  /** Enables the tooltip. */\n  enable() {\n    const self = this;\n    const { enabled } = self;\n    /* istanbul ignore else */\n    if (!enabled) {\n      toggleTooltipHandlers(self, true);\n      self.enabled = !enabled;\n    }\n  }\n\n  /** Disables the tooltip. */\n  disable() {\n    const self = this;\n    const {\n      tooltip, options, enabled,\n    } = self;\n    const { animation, container } = options;\n    /* istanbul ignore else */\n    if (enabled) {\n      if (isVisibleTip(tooltip, container) && animation) {\n        self.hide(() => toggleTooltipHandlers(self));\n      } else {\n        toggleTooltipHandlers(self);\n      }\n      self.enabled = !enabled;\n    }\n  }\n\n  /** Toggles the `disabled` property. */\n  toggleEnabled() {\n    const self = this;\n    if (!self.enabled) self.enable();\n    else self.disable();\n  }\n\n  /**\n   * Handles the `touchstart` event listener for `Tooltip`\n   * @this {Tooltip}\n   * @param {TouchEvent} e the `Event` object\n   */\n  handleTouch({ target }) {\n    const { tooltip, element } = this;\n\n    /* istanbul ignore next */\n    if (tooltip.contains(target) || target === element\n      || (target && element.contains(target))) ; else {\n      this.hide();\n    }\n  }\n\n  /** Removes the `Tooltip` from the target element. */\n  dispose() {\n    const self = this;\n    const { tooltip, options } = self;\n    const callback = () => disposeTooltipComplete(self, () => super.dispose());\n\n    if (options.animation && isVisibleTip(tooltip, options.container)) {\n      self.options.delay = 0; // reset delay\n      self.hide(callback);\n    } else {\n      callback();\n    }\n  }\n}\n\nObjectAssign(Tooltip, {\n  selector: tooltipSelector,\n  init: tooltipInitCallback,\n  getInstance: getTooltipInstance,\n  styleTip,\n});\n\n/* Native JavaScript for Bootstrap 5 | Popover\n---------------------------------------------- */\n\n// POPOVER PRIVATE GC\n// ==================\nconst popoverSelector = `[${dataBsToggle}=\"${popoverString}\"],[data-tip=\"${popoverString}\"]`;\n\nconst popoverDefaults = {\n  ...tooltipDefaults,\n  /** @type {string} */\n  template: getTipTemplate(popoverString),\n  /** @type {string} */\n  btnClose: '<button class=\"btn-close\" aria-label=\"Close\"></button>',\n  /** @type {boolean} */\n  dismissible: false,\n  /** @type {string?} */\n  content: null,\n};\n\n// POPOVER DEFINITION\n// ==================\n/** Returns a new `Popover` instance. */\nclass Popover extends Tooltip {\n  /* eslint-disable -- we want to specify Popover Options */\n  /**\n   * @param {HTMLElement | string} target the target element\n   * @param {BSN.Options.Popover=} config the instance options\n   */\n  constructor(target, config) {\n    super(target, config);\n  }\n  /**\n   * Returns component name string.\n   */ \n  get name() { return popoverComponent; }\n  /**\n   * Returns component default options.\n   */\n  get defaults() { return popoverDefaults; }\n  /* eslint-enable */\n\n  /* extend original `show()` */\n  show() {\n    super.show();\n    // btn only exists within dismissible popover\n    const { options, btn } = this;\n    /* istanbul ignore else */\n    if (options.dismissible && btn) setTimeout(() => focus(btn), 17);\n  }\n}\n\n/**\n * Static method which returns an existing `Popover` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Popover>}\n */\nconst getPopoverInstance = (element) => getInstance(element, popoverComponent);\n\n/**\n * A `Popover` initialization callback.\n * @type {BSN.InitCallback<Popover>}\n */\nconst popoverInitCallback = (element) => new Popover(element);\n\nObjectAssign(Popover, {\n  selector: popoverSelector,\n  init: popoverInitCallback,\n  getInstance: getPopoverInstance,\n  styleTip,\n});\n\n/**\n * Shortcut for `HTMLElement.getElementsByTagName` method. Some `Node` elements\n * like `ShadowRoot` do not support `getElementsByTagName`.\n *\n * @param {string} selector the tag name\n * @param {ParentNode=} parent optional Element to look into\n * @return {HTMLCollectionOf<HTMLElement>} the 'HTMLCollection'\n */\nfunction getElementsByTagName(selector, parent) {\n  const lookUp = isNode(parent) ? parent : getDocument();\n  return lookUp.getElementsByTagName(selector);\n}\n\n/** @type {string} */\nconst scrollspyString = 'scrollspy';\n\n/** @type {string} */\nconst scrollspyComponent = 'ScrollSpy';\n\n/* Native JavaScript for Bootstrap 5 | ScrollSpy\n------------------------------------------------ */\n\n// SCROLLSPY PRIVATE GC\n// ====================\nconst scrollspySelector = '[data-bs-spy=\"scroll\"]';\n\nconst scrollspyDefaults = {\n  offset: 10,\n  target: null,\n};\n\n/**\n * Static method which returns an existing `ScrollSpy` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<ScrollSpy>}\n */\nconst getScrollSpyInstance = (element) => getInstance(element, scrollspyComponent);\n\n/**\n * A `ScrollSpy` initialization callback.\n * @type {BSN.InitCallback<ScrollSpy>}\n */\nconst scrollspyInitCallback = (element) => new ScrollSpy(element);\n\n// SCROLLSPY CUSTOM EVENT\n// ======================\nconst activateScrollSpy = OriginalEvent(`activate.bs.${scrollspyString}`);\n\n// SCROLLSPY PRIVATE METHODS\n// =========================\n/**\n * Update the state of all items.\n * @param {ScrollSpy} self the `ScrollSpy` instance\n */\nfunction updateSpyTargets(self) {\n  const {\n    target, scrollTarget, options, itemsLength, scrollHeight, element,\n  } = self;\n  const { offset } = options;\n  const isWin = isWindow(scrollTarget);\n\n  const links = target && getElementsByTagName('A', target);\n  const scrollHEIGHT = scrollTarget && getScrollHeight(scrollTarget);\n\n  self.scrollTop = isWin ? scrollTarget.scrollY : scrollTarget.scrollTop;\n\n  // only update items/offsets once or with each mutation\n  /* istanbul ignore else */\n  if (links && (itemsLength !== links.length || scrollHEIGHT !== scrollHeight)) {\n    let href;\n    let targetItem;\n    let rect;\n\n    // reset arrays & update\n    self.items = [];\n    self.offsets = [];\n    self.scrollHeight = scrollHEIGHT;\n    self.maxScroll = self.scrollHeight - getOffsetHeight(self);\n\n    [...links].forEach((link) => {\n      href = getAttribute(link, 'href');\n      targetItem = href && href.charAt(0) === '#' && href.slice(-1) !== '#'\n        && querySelector(href, getDocument(element));\n\n      if (targetItem) {\n        self.items.push(link);\n        rect = getBoundingClientRect(targetItem);\n        self.offsets.push((isWin ? rect.top + self.scrollTop : targetItem.offsetTop) - offset);\n      }\n    });\n    self.itemsLength = self.items.length;\n  }\n}\n\n/**\n * Returns the `scrollHeight` property of the scrolling element.\n * @param {Node | Window} scrollTarget the `ScrollSpy` instance\n * @return {number} `scrollTarget` height\n */\nfunction getScrollHeight(scrollTarget) {\n  return isHTMLElement(scrollTarget)\n    ? scrollTarget.scrollHeight\n    : getDocumentElement(scrollTarget).scrollHeight;\n}\n\n/**\n * Returns the height property of the scrolling element.\n * @param {ScrollSpy} params the `ScrollSpy` instance\n * @returns {number}\n */\nfunction getOffsetHeight({ element, scrollTarget }) {\n  return (isWindow(scrollTarget))\n    ? scrollTarget.innerHeight\n    : getBoundingClientRect(element).height;\n}\n\n/**\n * Clear all items of the target.\n * @param {HTMLElement} target a single item\n */\nfunction clear(target) {\n  [...getElementsByTagName('A', target)].forEach((item) => {\n    if (hasClass(item, activeClass)) removeClass(item, activeClass);\n  });\n}\n\n/**\n * Activates a new item.\n * @param {ScrollSpy} self the `ScrollSpy` instance\n * @param {HTMLElement} item a single item\n */\nfunction activate(self, item) {\n  const { target, element } = self;\n  clear(target);\n  self.activeItem = item;\n  addClass(item, activeClass);\n\n  // activate all parents\n  const parents = [];\n  let parentItem = item;\n  while (parentItem !== getDocumentBody(element)) {\n    parentItem = parentItem.parentElement;\n    if (hasClass(parentItem, 'nav') || hasClass(parentItem, 'dropdown-menu')) parents.push(parentItem);\n  }\n\n  parents.forEach((menuItem) => {\n    /** @type {HTMLElement?} */\n    const parentLink = menuItem.previousElementSibling;\n\n    /* istanbul ignore else */\n    if (parentLink && !hasClass(parentLink, activeClass)) {\n      addClass(parentLink, activeClass);\n    }\n  });\n\n  // dispatch\n  activateScrollSpy.relatedTarget = item;\n  dispatchEvent(element, activateScrollSpy);\n}\n\n/**\n * Toggles on/off the component event listener.\n * @param {ScrollSpy} self the `ScrollSpy` instance\n * @param {boolean=} add when `true`, listener is added\n */\nfunction toggleSpyHandlers(self, add) {\n  const action = add ? addListener : removeListener;\n  action(self.scrollTarget, scrollEvent, self.refresh, passiveHandler);\n}\n\n// SCROLLSPY DEFINITION\n// ====================\n/** Returns a new `ScrollSpy` instance. */\nclass ScrollSpy extends BaseComponent {\n  /**\n   * @param {HTMLElement | string} target the target element\n   * @param {BSN.Options.ScrollSpy=} config the instance options\n   */\n  constructor(target, config) {\n    super(target, config);\n    // bind\n    const self = this;\n\n    // initialization element & options\n    const { element, options } = self;\n\n    // additional properties\n    /** @type {HTMLElement?} */\n    self.target = querySelector(options.target, getDocument(element));\n\n    // invalidate\n    if (!self.target) return;\n\n    // set initial state\n    /** @type {HTMLElement | Window} */\n    self.scrollTarget = element.clientHeight < element.scrollHeight\n      ? element : getWindow(element);\n    /** @type {number} */\n    self.scrollTop = 0;\n    /** @type {number} */\n    self.maxScroll = 0;\n    /** @type {number} */\n    self.scrollHeight = 0;\n    /** @type {HTMLElement?} */\n    self.activeItem = null;\n    /** @type {HTMLElement[]} */\n    self.items = [];\n    /** @type {number} */\n    self.itemsLength = 0;\n    /** @type {number[]} */\n    self.offsets = [];\n\n    // bind events\n    self.refresh = self.refresh.bind(self);\n\n    // add event handlers\n    toggleSpyHandlers(self, true);\n\n    self.refresh();\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() { return scrollspyComponent; }\n  /**\n   * Returns component default options.\n   */\n  get defaults() { return scrollspyDefaults; }\n  /* eslint-enable */\n\n  // SCROLLSPY PUBLIC METHODS\n  // ========================\n  /** Updates all items. */\n  refresh() {\n    const self = this;\n    const { target } = self;\n\n    // check if target is visible and invalidate\n    /* istanbul ignore next */\n    if (target.offsetHeight === 0) return;\n\n    updateSpyTargets(self);\n\n    const {\n      scrollTop, maxScroll, itemsLength, items, activeItem,\n    } = self;\n\n    if (scrollTop >= maxScroll) {\n      const newActiveItem = items[itemsLength - 1];\n\n      /* istanbul ignore else */\n      if (activeItem !== newActiveItem) {\n        activate(self, newActiveItem);\n      }\n      return;\n    }\n\n    const { offsets } = self;\n\n    if (activeItem && scrollTop < offsets[0] && offsets[0] > 0) {\n      self.activeItem = null;\n      clear(target);\n      return;\n    }\n\n    items.forEach((item, i) => {\n      if (activeItem !== item && scrollTop >= offsets[i]\n        && (typeof offsets[i + 1] === 'undefined' || scrollTop < offsets[i + 1])) {\n        activate(self, item);\n      }\n    });\n  }\n\n  /** Removes `ScrollSpy` from the target element. */\n  dispose() {\n    toggleSpyHandlers(this);\n    super.dispose();\n  }\n}\n\nObjectAssign(ScrollSpy, {\n  selector: scrollspySelector,\n  init: scrollspyInitCallback,\n  getInstance: getScrollSpyInstance,\n});\n\n/**\n * A global namespace for aria-selected.\n * @type {string}\n */\nconst ariaSelected = 'aria-selected';\n\n/** @type {string} */\nconst tabString = 'tab';\n\n/** @type {string} */\nconst tabComponent = 'Tab';\n\n/* Native JavaScript for Bootstrap 5 | Tab\n------------------------------------------ */\n\n// TAB PRIVATE GC\n// ================\nconst tabSelector = `[${dataBsToggle}=\"${tabString}\"]`;\n\n/**\n * Static method which returns an existing `Tab` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Tab>}\n */\nconst getTabInstance = (element) => getInstance(element, tabComponent);\n\n/**\n * A `Tab` initialization callback.\n * @type {BSN.InitCallback<Tab>}\n */\nconst tabInitCallback = (element) => new Tab(element);\n\n// TAB CUSTOM EVENTS\n// =================\nconst showTabEvent = OriginalEvent(`show.bs.${tabString}`);\nconst shownTabEvent = OriginalEvent(`shown.bs.${tabString}`);\nconst hideTabEvent = OriginalEvent(`hide.bs.${tabString}`);\nconst hiddenTabEvent = OriginalEvent(`hidden.bs.${tabString}`);\n\n/**\n * Stores the current active tab and its content\n * for a given `.nav` element.\n * @type {Map<HTMLElement, any>}\n */\nconst tabPrivate = new Map();\n\n// TAB PRIVATE METHODS\n// ===================\n/**\n * Executes after tab transition has finished.\n * @param {Tab} self the `Tab` instance\n */\nfunction triggerTabEnd(self) {\n  const { tabContent, nav } = self;\n\n  /* istanbul ignore else */\n  if (tabContent && hasClass(tabContent, collapsingClass)) {\n    tabContent.style.height = '';\n    removeClass(tabContent, collapsingClass);\n  }\n\n  /* istanbul ignore else */\n  if (nav) Timer.clear(nav);\n}\n\n/**\n * Executes before showing the tab content.\n * @param {Tab} self the `Tab` instance\n */\nfunction triggerTabShow(self) {\n  const {\n    element, tabContent, content: nextContent, nav,\n  } = self;\n  const { tab } = nav && tabPrivate.get(nav);\n\n  /* istanbul ignore else */\n  if (tabContent && hasClass(nextContent, fadeClass)) {\n    const { currentHeight, nextHeight } = tabPrivate.get(element);\n    if (currentHeight === nextHeight) {\n      triggerTabEnd(self);\n    } else {\n      // enables height animation\n      setTimeout(() => {\n        tabContent.style.height = `${nextHeight}px`;\n        reflow(tabContent);\n        emulateTransitionEnd(tabContent, () => triggerTabEnd(self));\n      }, 50);\n    }\n  } else if (nav) Timer.clear(nav);\n\n  shownTabEvent.relatedTarget = tab;\n  dispatchEvent(element, shownTabEvent);\n}\n\n/**\n * Executes before hiding the tab.\n * @param {Tab} self the `Tab` instance\n */\nfunction triggerTabHide(self) {\n  const {\n    element, content: nextContent, tabContent, nav,\n  } = self;\n  const { tab, content } = nav && tabPrivate.get(nav);\n  let currentHeight = 0;\n\n  /* istanbul ignore else */\n  if (tabContent && hasClass(nextContent, fadeClass)) {\n    [content, nextContent].forEach((c) => {\n      addClass(c, 'overflow-hidden');\n    });\n    currentHeight = content.scrollHeight || /* istanbul ignore next */0;\n  }\n\n  // update relatedTarget and dispatch event\n  showTabEvent.relatedTarget = tab;\n  hiddenTabEvent.relatedTarget = element;\n  dispatchEvent(element, showTabEvent);\n  if (showTabEvent.defaultPrevented) return;\n\n  addClass(nextContent, activeClass);\n  removeClass(content, activeClass);\n\n  /* istanbul ignore else */\n  if (tabContent && hasClass(nextContent, fadeClass)) {\n    const nextHeight = nextContent.scrollHeight;\n    tabPrivate.set(element, { currentHeight, nextHeight });\n\n    addClass(tabContent, collapsingClass);\n    tabContent.style.height = `${currentHeight}px`;\n    reflow(tabContent);\n    [content, nextContent].forEach((c) => {\n      removeClass(c, 'overflow-hidden');\n    });\n  }\n\n  if (nextContent && hasClass(nextContent, fadeClass)) {\n    setTimeout(() => {\n      addClass(nextContent, showClass);\n      emulateTransitionEnd(nextContent, () => {\n        triggerTabShow(self);\n      });\n    }, 1);\n  } else {\n    addClass(nextContent, showClass);\n    triggerTabShow(self);\n  }\n\n  dispatchEvent(tab, hiddenTabEvent);\n}\n\n/**\n * Returns the current active tab and its target content.\n * @param {Tab} self the `Tab` instance\n * @returns {Record<string, any>} the query result\n */\nfunction getActiveTab(self) {\n  const { nav } = self;\n\n  const activeTabs = getElementsByClassName(activeClass, nav);\n  /** @type {(HTMLElement)=} */\n  let tab;\n  /* istanbul ignore else */\n  if (activeTabs.length === 1\n    && !dropdownMenuClasses.some((c) => hasClass(activeTabs[0].parentElement, c))) {\n    [tab] = activeTabs;\n  } else if (activeTabs.length > 1) {\n    tab = activeTabs[activeTabs.length - 1];\n  }\n  const content = tab ? getTargetElement(tab) : null;\n  return { tab, content };\n}\n\n/**\n * Returns a parent dropdown.\n * @param {HTMLElement} element the `Tab` element\n * @returns {HTMLElement?} the parent dropdown\n */\nfunction getParentDropdown(element) {\n  const dropdown = closest(element, `.${dropdownMenuClasses.join(',.')}`);\n  return dropdown ? querySelector(`.${dropdownMenuClasses[0]}-toggle`, dropdown) : null;\n}\n\n/**\n * Toggles on/off the `click` event listener.\n * @param {Tab} self the `Tab` instance\n * @param {boolean=} add when `true`, event listener is added\n */\nfunction toggleTabHandler(self, add) {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, tabClickHandler);\n}\n\n// TAB EVENT HANDLER\n// =================\n/**\n * Handles the `click` event listener.\n * @this {HTMLElement}\n * @param {MouseEvent} e the `Event` object\n */\nfunction tabClickHandler(e) {\n  const self = getTabInstance(this);\n  /* istanbul ignore next: must filter */\n  if (!self) return;\n  e.preventDefault();\n\n  self.show();\n}\n\n// TAB DEFINITION\n// ==============\n/** Creates a new `Tab` instance. */\nclass Tab extends BaseComponent {\n  /**\n   * @param {HTMLElement | string} target the target element\n   */\n  constructor(target) {\n    super(target);\n    // bind\n    const self = this;\n\n    // initialization element\n    const { element } = self;\n    const content = getTargetElement(element);\n\n    // no point initializing a tab without a corresponding content\n    if (!content) return;\n\n    const nav = closest(element, '.nav');\n    const container = closest(content, '.tab-content');\n\n    /** @type {HTMLElement?} */\n    self.nav = nav;\n    /** @type {HTMLElement} */\n    self.content = content;\n    /** @type {HTMLElement?} */\n    self.tabContent = container;\n\n    // event targets\n    /** @type {HTMLElement?} */\n    self.dropdown = getParentDropdown(element);\n\n    // show first Tab instance of none is shown\n    // suggested on #432\n    const { tab } = getActiveTab(self);\n    if (nav && !tab) {\n      const firstTab = querySelector(tabSelector, nav);\n      const firstTabContent = firstTab && getTargetElement(firstTab);\n\n      /* istanbul ignore else */\n      if (firstTabContent) {\n        addClass(firstTab, activeClass);\n        addClass(firstTabContent, showClass);\n        addClass(firstTabContent, activeClass);\n        setAttribute(element, ariaSelected, 'true');\n      }\n    }\n\n    // add event listener\n    toggleTabHandler(self, true);\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */  \n  get name() { return tabComponent; }\n  /* eslint-enable */\n\n  // TAB PUBLIC METHODS\n  // ==================\n  /** Shows the tab to the user. */\n  show() {\n    const self = this;\n    const {\n      element, content: nextContent, nav, dropdown,\n    } = self;\n\n    /* istanbul ignore else */\n    if (!(nav && Timer.get(nav)) && !hasClass(element, activeClass)) {\n      const { tab, content } = getActiveTab(self);\n\n      /* istanbul ignore else */\n      if (nav) tabPrivate.set(nav, { tab, content });\n\n      // update relatedTarget and dispatch\n      hideTabEvent.relatedTarget = element;\n\n      dispatchEvent(tab, hideTabEvent);\n      if (hideTabEvent.defaultPrevented) return;\n\n      addClass(element, activeClass);\n      setAttribute(element, ariaSelected, 'true');\n\n      const activeDropdown = getParentDropdown(tab);\n      if (activeDropdown && hasClass(activeDropdown, activeClass)) {\n        removeClass(activeDropdown, activeClass);\n      }\n\n      /* istanbul ignore else */\n      if (nav) {\n        const toggleTab = () => {\n          removeClass(tab, activeClass);\n          setAttribute(tab, ariaSelected, 'false');\n          if (dropdown && !hasClass(dropdown, activeClass)) addClass(dropdown, activeClass);\n        };\n\n        if (hasClass(content, fadeClass) || hasClass(nextContent, fadeClass)) {\n          Timer.set(nav, toggleTab, 1);\n        } else toggleTab();\n      }\n\n      removeClass(content, showClass);\n      if (hasClass(content, fadeClass)) {\n        emulateTransitionEnd(content, () => triggerTabHide(self));\n      } else {\n        triggerTabHide(self);\n      }\n    }\n  }\n\n  /** Removes the `Tab` component from the target element. */\n  dispose() {\n    toggleTabHandler(this);\n    super.dispose();\n  }\n}\n\nObjectAssign(Tab, {\n  selector: tabSelector,\n  init: tabInitCallback,\n  getInstance: getTabInstance,\n});\n\n/** @type {string} */\nconst toastString = 'toast';\n\n/** @type {string} */\nconst toastComponent = 'Toast';\n\n/* Native JavaScript for Bootstrap 5 | Toast\n-------------------------------------------- */\n\n// TOAST PRIVATE GC\n// ================\nconst toastSelector = `.${toastString}`;\nconst toastDismissSelector = `[${dataBsDismiss}=\"${toastString}\"]`;\nconst toastToggleSelector = `[${dataBsToggle}=\"${toastString}\"]`;\nconst showingClass = 'showing';\n/** @deprecated */\nconst hideClass = 'hide';\n\nconst toastDefaults = {\n  animation: true,\n  autohide: true,\n  delay: 5000,\n};\n\n/**\n * Static method which returns an existing `Toast` instance associated\n * to a target `Element`.\n *\n * @type {BSN.GetInstance<Toast>}\n */\nconst getToastInstance = (element) => getInstance(element, toastComponent);\n\n/**\n * A `Toast` initialization callback.\n * @type {BSN.InitCallback<Toast>}\n */\nconst toastInitCallback = (element) => new Toast(element);\n\n// TOAST CUSTOM EVENTS\n// ===================\nconst showToastEvent = OriginalEvent(`show.bs.${toastString}`);\nconst shownToastEvent = OriginalEvent(`shown.bs.${toastString}`);\nconst hideToastEvent = OriginalEvent(`hide.bs.${toastString}`);\nconst hiddenToastEvent = OriginalEvent(`hidden.bs.${toastString}`);\n\n// TOAST PRIVATE METHODS\n// =====================\n/**\n * Executes after the toast is shown to the user.\n * @param {Toast} self the `Toast` instance\n */\nfunction showToastComplete(self) {\n  const { element, options } = self;\n  removeClass(element, showingClass);\n  Timer.clear(element, showingClass);\n\n  dispatchEvent(element, shownToastEvent);\n  /* istanbul ignore else */\n  if (options.autohide) {\n    Timer.set(element, () => self.hide(), options.delay, toastString);\n  }\n}\n\n/**\n * Executes after the toast is hidden to the user.\n * @param {Toast} self the `Toast` instance\n */\nfunction hideToastComplete(self) {\n  const { element } = self;\n  removeClass(element, showingClass);\n  removeClass(element, showClass);\n  addClass(element, hideClass); // B/C\n  Timer.clear(element, toastString);\n  dispatchEvent(element, hiddenToastEvent);\n}\n\n/**\n * Executes before hiding the toast.\n * @param {Toast} self the `Toast` instance\n */\nfunction hideToast(self) {\n  const { element, options } = self;\n  addClass(element, showingClass);\n\n  if (options.animation) {\n    reflow(element);\n    emulateTransitionEnd(element, () => hideToastComplete(self));\n  } else {\n    hideToastComplete(self);\n  }\n}\n\n/**\n * Executes before showing the toast.\n * @param {Toast} self the `Toast` instance\n */\nfunction showToast(self) {\n  const { element, options } = self;\n  Timer.set(element, () => {\n    removeClass(element, hideClass); // B/C\n    reflow(element);\n    addClass(element, showClass);\n    addClass(element, showingClass);\n\n    if (options.animation) {\n      emulateTransitionEnd(element, () => showToastComplete(self));\n    } else {\n      showToastComplete(self);\n    }\n  }, 17, showingClass);\n}\n\n/**\n * Toggles on/off the `click` event listener.\n * @param {Toast} self the `Toast` instance\n * @param {boolean=} add when `true`, it will add the listener\n */\nfunction toggleToastHandlers(self, add) {\n  const action = add ? addListener : removeListener;\n  const {\n    element, triggers, dismiss, options,\n  } = self;\n\n  /* istanbul ignore else */\n  if (dismiss) {\n    action(dismiss, mouseclickEvent, self.hide);\n  }\n\n  /* istanbul ignore else */\n  if (options.autohide) {\n    [focusinEvent, focusoutEvent, mouseenterEvent, mouseleaveEvent]\n      .forEach((e) => action(element, e, interactiveToastHandler));\n  }\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach((btn) => action(btn, mouseclickEvent, toastClickHandler));\n  }\n}\n\n// TOAST EVENT HANDLERS\n// ====================\n/**\n * Executes after the instance has been disposed.\n * @param {Toast} self the `Toast` instance\n */\nfunction completeDisposeToast(self) {\n  Timer.clear(self.element, toastString);\n  toggleToastHandlers(self);\n}\n\n/**\n * Handles the `click` event listener for toast.\n * @param {MouseEvent} e the `Event` object\n */\nfunction toastClickHandler(e) {\n  const { target } = e;\n\n  const trigger = target && closest(target, toastToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getToastInstance(element);\n\n  /* istanbul ignore else */\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n  self.relatedTarget = trigger;\n  self.show();\n}\n\n/**\n * Executes when user interacts with the toast without closing it,\n * usually by hovering or focusing it.\n *\n * @this {HTMLElement}\n * @param {MouseEvent} e the `Toast` instance\n */\nfunction interactiveToastHandler(e) {\n  const element = this;\n  const self = getToastInstance(element);\n  const { type, relatedTarget } = e;\n\n  /* istanbul ignore next: a solid filter is required */\n  if (!self || (element === relatedTarget || element.contains(relatedTarget))) return;\n\n  if ([mouseenterEvent, focusinEvent].includes(type)) {\n    Timer.clear(element, toastString);\n  } else {\n    Timer.set(element, () => self.hide(), self.options.delay, toastString);\n  }\n}\n\n// TOAST DEFINITION\n// ================\n/** Creates a new `Toast` instance. */\nclass Toast extends BaseComponent {\n  /**\n   * @param {HTMLElement | string} target the target `.toast` element\n   * @param {BSN.Options.Toast=} config the instance options\n   */\n  constructor(target, config) {\n    super(target, config);\n    // bind\n    const self = this;\n    const { element, options } = self;\n\n    // set fadeClass, the options.animation will override the markup\n    if (options.animation && !hasClass(element, fadeClass)) addClass(element, fadeClass);\n    else if (!options.animation && hasClass(element, fadeClass)) removeClass(element, fadeClass);\n\n    // dismiss button\n    /** @type {HTMLElement?} */\n    self.dismiss = querySelector(toastDismissSelector, element);\n\n    // toast can have multiple triggering elements\n    /** @type {HTMLElement[]} */\n    self.triggers = [...querySelectorAll(toastToggleSelector, getDocument(element))]\n      .filter((btn) => getTargetElement(btn) === element);\n\n    // bind\n    self.show = self.show.bind(self);\n    self.hide = self.hide.bind(self);\n\n    // add event listener\n    toggleToastHandlers(self, true);\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */  \n  get name() { return toastComponent; }\n  /**\n   * Returns component default options.\n   */  \n  get defaults() { return toastDefaults; }\n  /* eslint-enable */\n\n  /**\n   * Returns *true* when toast is visible.\n   */\n  get isShown() { return hasClass(this.element, showClass); }\n\n  // TOAST PUBLIC METHODS\n  // ====================\n  /** Shows the toast. */\n  show() {\n    const self = this;\n    const { element, isShown } = self;\n\n    /* istanbul ignore else */\n    if (element && !isShown) {\n      dispatchEvent(element, showToastEvent);\n      if (showToastEvent.defaultPrevented) return;\n\n      showToast(self);\n    }\n  }\n\n  /** Hides the toast. */\n  hide() {\n    const self = this;\n    const { element, isShown } = self;\n\n    /* istanbul ignore else */\n    if (element && isShown) {\n      dispatchEvent(element, hideToastEvent);\n      if (hideToastEvent.defaultPrevented) return;\n      hideToast(self);\n    }\n  }\n\n  /** Removes the `Toast` component from the target element. */\n  dispose() {\n    const self = this;\n    const { element, isShown } = self;\n\n    /* istanbul ignore else */\n    if (isShown) {\n      removeClass(element, showClass);\n    }\n\n    completeDisposeToast(self);\n\n    super.dispose();\n  }\n}\n\nObjectAssign(Toast, {\n  selector: toastSelector,\n  init: toastInitCallback,\n  getInstance: getToastInstance,\n});\n\n/**\n * Check if element matches a CSS selector.\n *\n * @param {HTMLElement} target\n * @param {string} selector\n * @returns {boolean}\n */\nfunction matches(target, selector) {\n  return target.matches(selector);\n}\n\n/** @type {Record<string, any>} */\nconst componentsList = {\n  Alert,\n  Button,\n  Carousel,\n  Collapse,\n  Dropdown,\n  Modal,\n  Offcanvas,\n  Popover,\n  ScrollSpy,\n  Tab,\n  Toast,\n  Tooltip,\n};\n\n/**\n * Initialize all matched `Element`s for one component.\n * @param {BSN.InitCallback<any>} callback\n * @param {NodeList | Node[]} collection\n */\nfunction initComponentDataAPI(callback, collection) {\n  [...collection].forEach((x) => callback(x));\n}\n\n/**\n * Remove one component from a target container element or all in the page.\n * @param {string} component the component name\n * @param {ParentNode} context parent `Node`\n */\nfunction removeComponentDataAPI(component, context) {\n  const compData = Data.getAllFor(component);\n\n  if (compData) {\n    [...compData].forEach((x) => {\n      const [element, instance] = x;\n      if (context.contains(element)) instance.dispose();\n    });\n  }\n}\n\n/**\n * Initialize all BSN components for a target container.\n * @param {ParentNode=} context parent `Node`\n */\nfunction initCallback(context) {\n  const lookUp = context && context.nodeName ? context : document;\n  const elemCollection = [...getElementsByTagName('*', lookUp)];\n\n  ObjectKeys(componentsList).forEach((comp) => {\n    const { init, selector } = componentsList[comp];\n    initComponentDataAPI(init, elemCollection.filter((item) => matches(item, selector)));\n  });\n}\n\n/**\n * Remove all BSN components for a target container.\n * @param {ParentNode=} context parent `Node`\n */\nfunction removeDataAPI(context) {\n  const lookUp = context && context.nodeName ? context : document;\n\n  ObjectKeys(componentsList).forEach((comp) => {\n    removeComponentDataAPI(comp, lookUp);\n  });\n}\n\n// bulk initialize all components\nif (document.body) initCallback();\nelse {\n  addListener(document, 'DOMContentLoaded', () => initCallback(), { once: true });\n}\n\nconst BSN = {\n  Alert,\n  Button,\n  Carousel,\n  Collapse,\n  Dropdown,\n  Modal,\n  Offcanvas,\n  Popover,\n  ScrollSpy,\n  Tab,\n  Toast,\n  Tooltip,\n\n  initCallback,\n  removeDataAPI,\n  Version,\n  EventListener: Listener,\n};\n\nexport { BSN as default };\n"],"names":["$f76f27f955386acd$var$EventRegistry","$f76f27f955386acd$var$globalListener","e","that","this","type","forEach","elementsMap","element","listenersMap","listenerMap","listener","options","apply","once","$f76f27f955386acd$var$removeListener","$f76f27f955386acd$var$addListener","eventType","Map","oneEventMap","has","set","oneElementMap","get","size","addEventListener","savedOptions","eventOptions","undefined","delete","removeEventListener","$f76f27f955386acd$var$Listener","on","off","registry","$f76f27f955386acd$var$mouseclickEvent","$f76f27f955386acd$var$transitionEndEvent","$f76f27f955386acd$var$transitionProperty","$f76f27f955386acd$var$getElementStyle","property","computedStyle","getComputedStyle","includes","getPropertyValue","$f76f27f955386acd$var$getElementTransitionDuration","propertyValue","durationValue","durationScale","duration","parseFloat","Number","isNaN","$f76f27f955386acd$var$dispatchEvent","event","dispatchEvent","$f76f27f955386acd$var$emulateTransitionEnd","handler","called","endEvent","Event","delay","delayValue","delayScale","$f76f27f955386acd$var$getElementTransitionDelay","transitionEndWrapper","target","setTimeout","$f76f27f955386acd$var$isNode","some","x","nodeType","$f76f27f955386acd$var$isWindow","object","constructor","name","$f76f27f955386acd$var$isDocument","$f76f27f955386acd$var$getDocument","node","ownerDocument","document","window","$f76f27f955386acd$var$querySelector","selector","parent","querySelector","$f76f27f955386acd$var$closest","closest","getRootNode","host","$f76f27f955386acd$var$ObjectAssign","obj","source","Object","assign","$f76f27f955386acd$var$hasClass","classNAME","classList","contains","$f76f27f955386acd$var$removeClass","remove","$f76f27f955386acd$var$isHTMLElement","$f76f27f955386acd$var$componentData","$f76f27f955386acd$var$Data","component","instance","getAllFor","allForC","instanceMap","$f76f27f955386acd$var$getInstance","$f76f27f955386acd$var$OriginalEvent","EventType","config","OriginalCustomEvent","CustomEvent","cancelable","bubbles","$f76f27f955386acd$var$fadeClass","$f76f27f955386acd$var$showClass","$f76f27f955386acd$var$alertComponent","$f76f27f955386acd$var$getAttribute","attribute","getAttribute","$f76f27f955386acd$var$normalizeValue","value","$f76f27f955386acd$var$ObjectKeys","keys","$f76f27f955386acd$var$toLowerCase","toLowerCase","$f76f27f955386acd$var$Version","$f76f27f955386acd$var$BaseComponent","version","defaults","dispose","self","prop","Error","prevInstance","length","defaultOps","inputOps","ns","data","dataset","normalOps","dataOps","title","k","key","replace","match","$f76f27f955386acd$var$normalizeOptions","$f76f27f955386acd$var$alertSelector","$f76f27f955386acd$var$getAlertInstance","$f76f27f955386acd$var$closeAlertEvent","$f76f27f955386acd$var$closedAlertEvent","$f76f27f955386acd$var$alertTransitionEnd","$f76f27f955386acd$var$toggleAlertHandler","add","action","dismiss","close","$f76f27f955386acd$var$Alert","defaultPrevented","super","init","getInstance","$f76f27f955386acd$var$ariaPressed","$f76f27f955386acd$var$setAttribute","setAttribute","$f76f27f955386acd$var$addClass","$f76f27f955386acd$var$activeClass","$f76f27f955386acd$var$dataBsToggle","$f76f27f955386acd$var$buttonComponent","$f76f27f955386acd$var$getButtonInstance","$f76f27f955386acd$var$toggleButtonHandler","toggle","$f76f27f955386acd$var$Button","preventDefault","isActive","$f76f27f955386acd$var$mouseenterEvent","$f76f27f955386acd$var$mouseleaveEvent","$f76f27f955386acd$var$keydownEvent","$f76f27f955386acd$var$keyArrowLeft","$f76f27f955386acd$var$keyArrowRight","$f76f27f955386acd$var$getBoundingClientRect","includeScale","width","height","top","right","bottom","left","getBoundingClientRect","scaleX","scaleY","offsetWidth","offsetHeight","Math","round","y","$f76f27f955386acd$var$getDocumentElement","documentElement","$f76f27f955386acd$var$isElementInScrollRange","clientHeight","$f76f27f955386acd$var$isRTL","dir","$f76f27f955386acd$var$querySelectorAll","querySelectorAll","$f76f27f955386acd$var$getElementsByClassName","getElementsByClassName","$f76f27f955386acd$var$TimeCache","$f76f27f955386acd$var$Timer","callback","keyTimers","clearTimeout","$f76f27f955386acd$var$reflow","$f76f27f955386acd$var$passiveHandler","passive","$f76f27f955386acd$var$dataBsTarget","$f76f27f955386acd$var$carouselString","$f76f27f955386acd$var$carouselComponent","$f76f27f955386acd$var$dataBsParent","$f76f27f955386acd$var$getTargetElement","targetAttr","doc","map","att","attValue","filter","$f76f27f955386acd$var$carouselSelector","$f76f27f955386acd$var$carouselItem","$f76f27f955386acd$var$dataBsSlideTo","$f76f27f955386acd$var$dataBsSlide","$f76f27f955386acd$var$pausedClass","$f76f27f955386acd$var$carouselDefaults","pause","keyboard","touch","interval","$f76f27f955386acd$var$getCarouselInstance","$f76f27f955386acd$var$startX","$f76f27f955386acd$var$currentX","$f76f27f955386acd$var$endX","$f76f27f955386acd$var$carouselSlideEvent","$f76f27f955386acd$var$carouselSlidEvent","$f76f27f955386acd$var$carouselPauseHandler","isPaused","$f76f27f955386acd$var$carouselResumeHandler","cycle","$f76f27f955386acd$var$carouselIndicatorHandler","indicator","isAnimating","newIndex","to","$f76f27f955386acd$var$carouselControlsHandler","control","orientation","next","prev","$f76f27f955386acd$var$carouselKeyHandler","code","test","tagName","RTL","arrowKeyNext","$f76f27f955386acd$var$carouselPointerDownHandler","controls","indicators","el","isTouch","pageX","$f76f27f955386acd$var$toggleCarouselTouchHandlers","$f76f27f955386acd$var$carouselPointerMoveHandler","$f76f27f955386acd$var$carouselPointerUpHandler","c","find","i","index","getSelection","toString","abs","$f76f27f955386acd$var$activateCarouselIndicator","pageIndex","$f76f27f955386acd$var$toggleCarouselHandlers","slides","arrow","$f76f27f955386acd$var$getActiveIndex","activeItem","indexOf","$f76f27f955386acd$var$Carousel","idx","direction","directionClass","eventProperties","relatedTarget","from","hidden","$f76f27f955386acd$var$carouselTransitionEndHandler","itemClasses","slide","id","$f76f27f955386acd$var$ariaExpanded","$f76f27f955386acd$var$setElementStyle","styles","entries","style","setProperty","propObject","$f76f27f955386acd$var$collapsingClass","$f76f27f955386acd$var$collapseString","$f76f27f955386acd$var$collapseComponent","$f76f27f955386acd$var$collapseToggleSelector","$f76f27f955386acd$var$collapseDefaults","$f76f27f955386acd$var$getCollapseInstance","$f76f27f955386acd$var$showCollapseEvent","$f76f27f955386acd$var$shownCollapseEvent","$f76f27f955386acd$var$hideCollapseEvent","$f76f27f955386acd$var$hiddenCollapseEvent","$f76f27f955386acd$var$collapseContent","triggers","scrollHeight","btn","$f76f27f955386acd$var$toggleCollapseHandler","$f76f27f955386acd$var$collapseClickHandler","trigger","$f76f27f955386acd$var$Collapse","hide","show","activeCollapse","activeCollapseInstance","$f76f27f955386acd$var$expandCollapse","$f76f27f955386acd$var$focusEvent","$f76f27f955386acd$var$scrollEvent","$f76f27f955386acd$var$resizeEvent","$f76f27f955386acd$var$keyArrowUp","$f76f27f955386acd$var$keyArrowDown","$f76f27f955386acd$var$keyEscape","$f76f27f955386acd$var$hasAttribute","hasAttribute","$f76f27f955386acd$var$focus","focus","$f76f27f955386acd$var$getWindow","defaultView","$f76f27f955386acd$var$dropdownMenuClasses","$f76f27f955386acd$var$dropdownComponent","$f76f27f955386acd$var$isEmptyAnchor","parentAnchor","href","slice","$f76f27f955386acd$var$dropdownString","$f76f27f955386acd$var$dropupString","$f76f27f955386acd$var$dropstartString","$f76f27f955386acd$var$dropendString","$f76f27f955386acd$var$dropdownSelector","$f76f27f955386acd$var$getDropdownInstance","$f76f27f955386acd$var$verticalClass","$f76f27f955386acd$var$horizontalClass","$f76f27f955386acd$var$menuFocusTags","$f76f27f955386acd$var$dropdownDefaults","offset","display","$f76f27f955386acd$var$showDropdownEvent","$f76f27f955386acd$var$shownDropdownEvent","$f76f27f955386acd$var$hideDropdownEvent","$f76f27f955386acd$var$hiddenDropdownEvent","$f76f27f955386acd$var$styleDropdown","menu","parentElement","menuEnd","p","positionClass","dropdownMargin","dropdown","dropup","dropstart","dropend","dropdownPosition","menuStart","menuWidth","menuHeight","clientWidth","targetLeft","targetTop","targetWidth","targetHeight","leftFullExceed","rightFullExceed","bottomExceed","bottomFullExceed","topExceed","leftExceed","rightExceed","posAjust","margin","join","$f76f27f955386acd$var$toggleDropdownDismiss","open","$f76f27f955386acd$var$dropdownDismissHandler","$f76f27f955386acd$var$dropdownPreventScroll","$f76f27f955386acd$var$dropdownKeyHandler","ev","$f76f27f955386acd$var$dropdownLayoutHandler","$f76f27f955386acd$var$toggleDropdownHandler","$f76f27f955386acd$var$dropdownClickHandler","$f76f27f955386acd$var$getCurrentOpenDropdown","currentParent","children","hasData","isForm","activeElement","menuItems","firstElementChild","$f76f27f955386acd$var$getMenuItems","$f76f27f955386acd$var$Dropdown","currentElement","currentInstance","$f76f27f955386acd$var$ariaHidden","$f76f27f955386acd$var$ariaModal","$f76f27f955386acd$var$removeAttribute","removeAttribute","$f76f27f955386acd$var$getDocumentBody","body","$f76f27f955386acd$var$modalComponent","$f76f27f955386acd$var$isShadowRoot","$f76f27f955386acd$var$isTableElement","$f76f27f955386acd$var$getElementContainer","getOffset","majorBlockTags","offsetParent","win","containers","parentNode","nodeName","assignedSlot","shadowRoot","push","every","r","$f76f27f955386acd$var$stickyTopClass","$f76f27f955386acd$var$positionStickyClass","$f76f27f955386acd$var$getFixedItems","$f76f27f955386acd$var$measureScrollbar","innerWidth","$f76f27f955386acd$var$setScrollbar","overflow","bd","bodyPad","parseInt","sbWidth","fixedItems","paddingRight","fixed","itemPadValue","itemMValue","marginRight","$f76f27f955386acd$var$createElement","param","createElement","attr","newElement","$f76f27f955386acd$var$modalBackdropClass","$f76f27f955386acd$var$offcanvasBackdropClass","$f76f27f955386acd$var$modalActiveSelector","$f76f27f955386acd$var$offcanvasActiveSelector","$f76f27f955386acd$var$overlay","$f76f27f955386acd$var$getCurrentOpen","$f76f27f955386acd$var$toggleOverlayType","isModal","targetClass","$f76f27f955386acd$var$appendOverlay","container","hasFade","append","$f76f27f955386acd$var$showOverlay","$f76f27f955386acd$var$hideOverlay","$f76f27f955386acd$var$removeOverlay","$f76f27f955386acd$var$resetScrollbar","$f76f27f955386acd$var$isVisible","$f76f27f955386acd$var$modalToggleSelector","$f76f27f955386acd$var$modalStaticClass","$f76f27f955386acd$var$modalDefaults","backdrop","$f76f27f955386acd$var$getModalInstance","$f76f27f955386acd$var$showModalEvent","$f76f27f955386acd$var$shownModalEvent","$f76f27f955386acd$var$hideModalEvent","$f76f27f955386acd$var$hiddenModalEvent","$f76f27f955386acd$var$setModalScrollbar","scrollbarWidth","modalHeight","modalScrollHeight","modalOverflow","padStyle","$f76f27f955386acd$var$toggleModalDismiss","$f76f27f955386acd$var$modalDismissHandler","update","$f76f27f955386acd$var$modalKeyHandler","$f76f27f955386acd$var$toggleModalHandler","$f76f27f955386acd$var$modalClickHandler","$f76f27f955386acd$var$afterModalHide","focusElement","$f76f27f955386acd$var$afterModalShow","$f76f27f955386acd$var$beforeModalShow","$f76f27f955386acd$var$beforeModalHide","isStatic","modalDialog","selectedText","targetInsideDialog","$f76f27f955386acd$var$staticTransitionEnd","$f76f27f955386acd$var$Modal","overlayDelay","currentOpen","bind","$f76f27f955386acd$var$offcanvasComponent","$f76f27f955386acd$var$offcanvasToggleSelector","$f76f27f955386acd$var$offcanvasTogglingClass","$f76f27f955386acd$var$offcanvasDefaults","scroll","$f76f27f955386acd$var$getOffcanvasInstance","$f76f27f955386acd$var$showOffcanvasEvent","$f76f27f955386acd$var$shownOffcanvasEvent","$f76f27f955386acd$var$hideOffcanvasEvent","$f76f27f955386acd$var$hiddenOffcanvasEvent","$f76f27f955386acd$var$toggleOffcanvasEvents","$f76f27f955386acd$var$offcanvasTriggerHandler","$f76f27f955386acd$var$toggleOffCanvasDismiss","$f76f27f955386acd$var$offcanvasKeyDismissHandler","$f76f27f955386acd$var$offcanvasDismissHandler","$f76f27f955386acd$var$beforeOffcanvasShow","$f76f27f955386acd$var$setOffCanvasScrollbar","visibility","$f76f27f955386acd$var$showOffcanvasComplete","$f76f27f955386acd$var$beforeOffcanvasHide","blur","$f76f27f955386acd$var$hideOffcanvasComplete","offCanvasDismiss","selection","visibleTrigger","$f76f27f955386acd$var$Offcanvas","$f76f27f955386acd$var$popoverString","$f76f27f955386acd$var$popoverComponent","$f76f27f955386acd$var$tooltipString","$f76f27f955386acd$var$getTipTemplate","tipType","isTooltip","$f76f27f955386acd$var$isMedia","s","$f76f27f955386acd$var$getRectRelativeToOffsetParent","isParentAnElement","rect","$f76f27f955386acd$var$isScaledElement","offsets","offsetRect","clientLeft","clientTop","$f76f27f955386acd$var$tipClassPositions","$f76f27f955386acd$var$styleTip","tooltip","tipPositions","isPopover","tipWidth","tipHeight","htmlcw","htmlch","placement","parentLeft","parentRight","parentTop","parentCWidth","parentOWidth","parentPosition","fixedParent","staticParent","isSticky","leftBoundry","rightBoundry","elemWidth","elemHeight","elemRectLeft","elemRectRight","elemRectTop","isWin","scrollX","scrollLeft","scrollY","scrollTop","$f76f27f955386acd$var$getNodeScroll","topPosition","leftPosition","rightPosition","arrowTop","arrowLeft","arrowRight","arrowWidth","arrowHeight","arrowAdjust","horizontal","vertical","className","eX","eY","pageY","clientX","clientY","$f76f27f955386acd$var$tooltipDefaults","template","customClass","sanitizeFn","animation","$f76f27f955386acd$var$ariaDescribedBy","$f76f27f955386acd$var$focusinEvent","$f76f27f955386acd$var$focusoutEvent","$f76f27f955386acd$var$touchstartEvent","$f76f27f955386acd$var$elementUID","$f76f27f955386acd$var$elementMapUID","$f76f27f955386acd$var$elementIDMap","$f76f27f955386acd$var$getUID","result","elID","elMap","elkey","$f76f27f955386acd$var$isFunction","fn","userAgentData","$f76f27f955386acd$var$uaDATA","navigator","$f76f27f955386acd$var$userAgentData","userAgent","$f76f27f955386acd$var$userAgentString","$f76f27f955386acd$var$userAgent","$f76f27f955386acd$var$appleBrands","$f76f27f955386acd$var$isApple","brands","brand","$f76f27f955386acd$var$dataOriginalTitle","$f76f27f955386acd$var$tooltipComponent","$f76f27f955386acd$var$isString","str","$f76f27f955386acd$var$setHtml","content","arr","dirty","trim","tempDocument","DOMParser","parseFromString","childNodes","Array","isArray","$f76f27f955386acd$var$isVisibleTip","tip","$f76f27f955386acd$var$titleAttr","$f76f27f955386acd$var$getTooltipInstance","$f76f27f955386acd$var$toggleTooltipAction","handleTouch","$f76f27f955386acd$var$tooltipShownAction","shownTooltipEvent","$f76f27f955386acd$var$tooltipHiddenAction","hiddenTooltipEvent","$f76f27f955386acd$var$removeTooltip","$f76f27f955386acd$var$toggleTooltipHandlers","dismissible","enabled","triggerOptions","split","elemIsMedia","tr","$f76f27f955386acd$var$toggleTooltipOpenHandlers","parentModal","parentOffcanvas","scrollTarget","$f76f27f955386acd$var$toggleTooltipTitle","titleAtt","$f76f27f955386acd$var$Tooltip","outTimer","showTooltipEvent","hideTooltipEvent","enable","disable","toggleEnabled","$f76f27f955386acd$var$disposeTooltipComplete","tipString","tipComponent","elem","idealContainer","btnClose","titleParts","contentParts","placementClass","tooltipTemplate","htmlMarkup","firstChild","cloneNode","bodyClass","tooltipHeader","tooltipBody","tempTitle","tempContent","tempBtn","$f76f27f955386acd$var$createTip","$f76f27f955386acd$var$popoverDefaults","$f76f27f955386acd$var$Popover","$f76f27f955386acd$var$getElementsByTagName","getElementsByTagName","$f76f27f955386acd$var$scrollspyComponent","$f76f27f955386acd$var$scrollspyDefaults","$f76f27f955386acd$var$activateScrollSpy","$f76f27f955386acd$var$updateSpyTargets","itemsLength","links","scrollHEIGHT","$f76f27f955386acd$var$getScrollHeight","targetItem","items","maxScroll","innerHeight","$f76f27f955386acd$var$getOffsetHeight","link","charAt","offsetTop","$f76f27f955386acd$var$clear","item","$f76f27f955386acd$var$activate","parents","parentItem","menuItem","parentLink","previousElementSibling","$f76f27f955386acd$var$toggleSpyHandlers","refresh","$f76f27f955386acd$var$ScrollSpy","newActiveItem","$f76f27f955386acd$var$ariaSelected","$f76f27f955386acd$var$tabSelector","$f76f27f955386acd$var$getTabInstance","$f76f27f955386acd$var$showTabEvent","$f76f27f955386acd$var$shownTabEvent","$f76f27f955386acd$var$hideTabEvent","$f76f27f955386acd$var$hiddenTabEvent","$f76f27f955386acd$var$tabPrivate","$f76f27f955386acd$var$triggerTabEnd","tabContent","nav","$f76f27f955386acd$var$triggerTabShow","nextContent","tab","currentHeight","nextHeight","$f76f27f955386acd$var$triggerTabHide","$f76f27f955386acd$var$getActiveTab","activeTabs","$f76f27f955386acd$var$getParentDropdown","$f76f27f955386acd$var$toggleTabHandler","$f76f27f955386acd$var$tabClickHandler","$f76f27f955386acd$var$Tab","activeDropdown","toggleTab","firstTab","firstTabContent","$f76f27f955386acd$var$toastString","$f76f27f955386acd$var$toastComponent","$f76f27f955386acd$var$toastToggleSelector","$f76f27f955386acd$var$showingClass","$f76f27f955386acd$var$hideClass","$f76f27f955386acd$var$toastDefaults","autohide","$f76f27f955386acd$var$getToastInstance","$f76f27f955386acd$var$showToastEvent","$f76f27f955386acd$var$shownToastEvent","$f76f27f955386acd$var$hideToastEvent","$f76f27f955386acd$var$hiddenToastEvent","$f76f27f955386acd$var$showToastComplete","$f76f27f955386acd$var$hideToastComplete","$f76f27f955386acd$var$toggleToastHandlers","$f76f27f955386acd$var$interactiveToastHandler","$f76f27f955386acd$var$toastClickHandler","$f76f27f955386acd$var$Toast","isShown","$f76f27f955386acd$var$showToast","$f76f27f955386acd$var$hideToast","$f76f27f955386acd$var$completeDisposeToast","$f76f27f955386acd$var$componentsList","$f76f27f955386acd$var$initCallback","context","elemCollection","comp","collection","matches","$f76f27f955386acd$var$matches","$f76f27f955386acd$export$2e2bcd8739ae039","lookUp","compData","$f76f27f955386acd$var$removeComponentDataAPI","EventListener"],"version":3,"file":"17-modal-spam.e14336c7.js.map"}