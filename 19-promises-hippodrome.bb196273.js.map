{"mappings":"AAAA,MAAMA,EAAS,CACb,cACA,UACA,kBACA,aACA,aAGF,IAAIC,EAAc,EAClB,MAAMC,EAAO,CACXC,SAAUC,SAASC,cAAc,gBACjCC,YAAaF,SAASC,cAAc,cACpCE,cAAeH,SAASC,cAAc,gBACtCG,UAAWJ,SAASC,cAAc,6BA4BpC,SAASI,EAAkBC,GACzBR,EAAKI,YAAYK,YAAcD,C,CAGjC,SAASE,EAAoBF,GAC3BR,EAAKK,cAAcI,YAAcD,C,CAQnC,SAASG,EAAIC,GACX,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,GAQaC,EARQ,IAQHC,EARS,KAS5BC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IADtD,IAAuBA,EAAKC,EANxBI,YAAW,KACTR,EAAQ,C,MAAEF,E,KAAOI,GAAO,GACvBA,EAAK,G,CA5CZhB,EAAKC,SAASsB,iBAAiB,SAE/B,WACExB,GAAe,EACf,MAAMyB,EAAW1B,EAAO2B,IAAId,GAC5BJ,EAAkB,IAClBG,EAAoB,8CAMEgB,EAJPF,EAKfX,QAAQc,KAAKD,GAASE,MAAK,EAAChB,MAAEA,EAAKI,KAAEA,MACnCT,EAAkB,UAAOK,uBAAWI,kBAmBxC,UAA2BJ,MAAEA,EAAKI,KAAEA,EAAMa,YAAAC,IACxC,MAAMC,EAAK,WAAWD,aAAuBlB,aAAiBI,cAC9DhB,EAAKM,UAAU0B,mBAAmB,YAAaD,E,CApBvCE,CAAY,C,MAAErB,E,KAAOI,E,YAAMjB,GAAa,IAIlD,SAA4B2B,GAC1Bb,QAAQqB,IAAIR,GAASE,MAAKO,IACxBzB,EAAoB,mDAAiD,G,CAZvE0B,CAAmBZ,GAGrB,IAAwBE,C","sources":["src/js/19-promises-hippodrome.js"],"sourcesContent":["const horses = [\n  'Secretariat',\n  'Eclipse',\n  'West Australian',\n  'Flying Fox',\n  'Sebastian',\n];\n\nlet raceCounter = 0;\nconst refs = {\n  startBtn: document.querySelector('.js-race-btn'),\n  winnerField: document.querySelector('.js-winner'),\n  progressField: document.querySelector('.js-progress'),\n  tableBody: document.querySelector('.js-result-table > tbody'),\n};\n\nrefs.startBtn.addEventListener('click', onStart);\n\nfunction onStart() {\n  raceCounter += 1;\n  const promises = horses.map(run);\n  updateWinnerField('');\n  updateProgressField('üèá The race has started, no bids accepted!');\n\n  determinWinner(promises);\n  waitForAllFinished(promises);\n}\n\nfunction determinWinner(horsesP) {\n  Promise.race(horsesP).then(({ horse, time }) => {\n    updateWinnerField(`üèÅ Won ${horse}ü•á by finishing in ${time} milliseconds`);\n    updateResultTable({ horse, time, raceCounter});\n  });\n}\n\nfunction waitForAllFinished(horsesP) {\n  Promise.all(horsesP).then(result => {\n    updateProgressField('üêé the race is over. ü§ë bids are being accepted!');\n  });\n}\n\nfunction updateWinnerField(message) {\n  refs.winnerField.textContent = message;\n}\n\nfunction updateProgressField(message) {\n  refs.progressField.textContent = message;\n}\n\nfunction updateResultTable({ horse, time, raceCounter}) {\n  const tr = `<tr><td>${raceCounter}</td><td>${horse}</td><td>${time}</td></tr>`;\n  refs.tableBody.insertAdjacentHTML('beforeend', tr);\n}\n\nfunction run(horse) {\n  return new Promise((resolve, reject) => {\n    const time = getRandomTime(2000, 3500);\n\n    setTimeout(() => {\n      resolve({ horse, time });\n    }, time);\n  });\n}\n\nfunction getRandomTime(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n"],"names":["$9e381895729d1437$var$horses","$9e381895729d1437$var$raceCounter","$9e381895729d1437$var$refs","startBtn","document","querySelector","winnerField","progressField","tableBody","$9e381895729d1437$var$updateWinnerField","message","textContent","$9e381895729d1437$var$updateProgressField","$9e381895729d1437$var$run","horse","Promise","resolve","reject","time","min","max","Math","floor","random","setTimeout","addEventListener","promises","map","horsesP","race","then","raceCounter","raceCounter1","tr","insertAdjacentHTML","$9e381895729d1437$var$updateResultTable","all","result","$9e381895729d1437$var$waitForAllFinished"],"version":3,"file":"19-promises-hippodrome.bb196273.js.map"}