{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,WAoBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,GACFF,EAAQ,C,SAAEH,E,MAAUC,IAEtBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAC1BA,EAAM,G,CAab,SAASQ,GAAiBT,SAAEA,EAAQC,MAAEA,IACpCS,EAAAb,GAASc,OAAOC,QAAQ,uBAAqBZ,QAAiBC,M,CAGhE,SAASY,GAAeb,SAAEA,EAAQC,MAAEA,IAClCS,EAAAb,GAASc,OAAOG,QAAQ,qBAAmBd,QAAeC,M,EA3C/C,CACXc,KAAMC,SAASC,cAAc,oBAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAIC,iBACJ,MAAMnB,MAAEA,EAAKoB,KAAEA,EAAIC,OAAEA,GAAWH,EAAII,cAE9BC,EAAavB,EAAMwB,cACnBC,EAAWL,EAAKI,cAChBE,EAAaL,EAAOG,eAiB5B,SAAyBxB,EAAOoB,EAAMC,GACpC,IAAK,IAAIM,EAAI,EAAGA,EAAIN,EAAQM,GAAK,EAAG,CAElC7B,EAAc6B,EAAI,EADA3B,EAAQoB,EAAOO,GAE9BC,KAAKpB,GACLqB,MAAMjB,E,EApBXkB,CAAgBP,EAAYE,EAAUC,E","sources":["src/js/22-prodmises-counter.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form-promises'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget;\n\n  const firstDelay = delay.valueAsNumber;\n  const userStep = step.valueAsNumber;\n  const userAmount = amount.valueAsNumber;\n\n  promisesCounter(firstDelay, userStep, userAmount);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  });\n}\n\nfunction promisesCounter(delay, step, amount) {\n  for (let i = 0; i < amount; i += 1) {\n    const userDelay = delay + step * i;\n    createPromise(i + 1, userDelay)\n      .then(onPromiseSuccess)\n      .catch(onPromiseError);\n  }\n}\n\nfunction onPromiseSuccess({ position, delay }) {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction onPromiseError({ position, delay }) {\n  Notiflix.Notify.failure(`❌Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$eWCmQ","parcelRequire","$243af004ae26f6f1$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$243af004ae26f6f1$var$onPromiseSuccess","$parcel$interopDefault","Notify","success","$243af004ae26f6f1$var$onPromiseError","failure","form","document","querySelector","addEventListener","evt","preventDefault","step","amount","currentTarget","firstDelay","valueAsNumber","userStep","userAmount","i","then","catch","$243af004ae26f6f1$var$promisesCounter"],"version":3,"file":"22-promises-counter.cfdc189b.js.map"}